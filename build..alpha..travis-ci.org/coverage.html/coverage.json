{"/home/travis/build/npmtest/node-npmtest-jsgraph/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsgraph/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":2,"46":2,"47":1,"48":2,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1],"10":[1,1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1],"17":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":77},"end":{"line":94,"column":10}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":83},"end":{"line":115,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":77},"end":{"line":126,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"skip":true},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":77},"end":{"line":150,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":83},"end":{"line":161,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":79},"end":{"line":172,"column":10}},"skip":true},"13":{"name":"(anonymous_13)","line":180,"loc":{"start":{"line":180,"column":75},"end":{"line":183,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":195,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":46}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":194,"column":5}},"24":{"start":{"line":91,"column":8},"end":{"line":99,"column":10}},"25":{"start":{"line":98,"column":12},"end":{"line":98,"column":35}},"26":{"start":{"line":102,"column":8},"end":{"line":104,"column":63}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":14}},"28":{"start":{"line":112,"column":8},"end":{"line":121,"column":10},"skip":true},"29":{"start":{"line":119,"column":12},"end":{"line":119,"column":55},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":48},"skip":true},"31":{"start":{"line":123,"column":8},"end":{"line":136,"column":10},"skip":true},"32":{"start":{"line":130,"column":12},"end":{"line":130,"column":76},"skip":true},"33":{"start":{"line":131,"column":12},"end":{"line":131,"column":73},"skip":true},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":74},"skip":true},"35":{"start":{"line":133,"column":12},"end":{"line":133,"column":79},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":145,"column":14},"skip":true},"39":{"start":{"line":143,"column":16},"end":{"line":143,"column":29},"skip":true},"40":{"start":{"line":144,"column":16},"end":{"line":144,"column":55},"skip":true},"41":{"start":{"line":147,"column":8},"end":{"line":156,"column":10},"skip":true},"42":{"start":{"line":154,"column":12},"end":{"line":154,"column":25},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":45},"skip":true},"44":{"start":{"line":158,"column":8},"end":{"line":167,"column":10},"skip":true},"45":{"start":{"line":165,"column":12},"end":{"line":165,"column":25},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":48},"skip":true},"47":{"start":{"line":169,"column":8},"end":{"line":178,"column":10},"skip":true},"48":{"start":{"line":176,"column":12},"end":{"line":176,"column":25},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":46},"skip":true},"50":{"start":{"line":180,"column":8},"end":{"line":189,"column":10},"skip":true},"51":{"start":{"line":187,"column":12},"end":{"line":187,"column":94},"skip":true},"52":{"start":{"line":188,"column":12},"end":{"line":188,"column":48},"skip":true},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":35},"skip":true},"54":{"start":{"line":193,"column":8},"end":{"line":193,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":105,"column":14}},{"start":{"line":111,"column":4},"end":{"line":193,"column":14},"skip":true}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":42},"end":{"line":91,"column":73}},{"start":{"line":91,"column":77},"end":{"line":99,"column":9}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":18},"end":{"line":102,"column":32}},{"start":{"line":103,"column":12},"end":{"line":103,"column":53}},{"start":{"line":104,"column":12},"end":{"line":104,"column":61}}]},"11":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":45},"end":{"line":112,"column":79},"skip":true},{"start":{"line":112,"column":83},"end":{"line":121,"column":9},"skip":true}]},"12":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":42},"end":{"line":123,"column":73},"skip":true},{"start":{"line":123,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":48},"end":{"line":138,"column":85},"skip":true},{"start":{"line":139,"column":12},"end":{"line":145,"column":13},"skip":true}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":42},"end":{"line":147,"column":73},"skip":true},{"start":{"line":147,"column":77},"end":{"line":156,"column":9},"skip":true}]},"15":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":45},"end":{"line":158,"column":79},"skip":true},{"start":{"line":158,"column":83},"end":{"line":167,"column":9},"skip":true}]},"16":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":43},"end":{"line":169,"column":75},"skip":true},{"start":{"line":169,"column":79},"end":{"line":178,"column":9},"skip":true}]},"17":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":41},"end":{"line":180,"column":71},"skip":true},{"start":{"line":180,"column":75},"end":{"line":189,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_jsgraph */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireExampleJsFromReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - post-init","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - post-init","    case 'browser':","        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (","            options,","            onError","        ) {","        /*","         * this function will test browsers's null-case handling-behavior-behavior","         */","            onError(null, options);","        };","","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"91":1,"98":1,"102":1,"105":1,"112":1,"119":1,"120":1,"123":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"138":1,"143":2,"144":2,"147":1,"154":2,"155":2,"158":1,"165":2,"166":2,"169":1,"176":2,"177":2,"180":1,"187":1,"188":1,"192":1,"193":1}},"/home/travis/build/npmtest/node-npmtest-jsgraph/lib.npmtest_jsgraph.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsgraph/lib.npmtest_jsgraph.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":52}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":58}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_jsgraph */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_jsgraph = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_jsgraph = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-jsgraph/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsgraph/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":3,"38":3,"39":3,"40":3,"41":0,"42":3,"43":3,"44":3,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,3],"16":[3,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":3,"8":3,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":315,"loc":{"start":{"line":315,"column":32},"end":{"line":315,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":326,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":325,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":296,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":303,"column":8},"end":{"line":303,"column":82},"skip":true},"70":{"start":{"line":306,"column":8},"end":{"line":308,"column":9},"skip":true},"71":{"start":{"line":307,"column":12},"end":{"line":307,"column":82},"skip":true},"72":{"start":{"line":310,"column":8},"end":{"line":312,"column":9},"skip":true},"73":{"start":{"line":311,"column":12},"end":{"line":311,"column":18},"skip":true},"74":{"start":{"line":313,"column":8},"end":{"line":313,"column":54},"skip":true},"75":{"start":{"line":314,"column":8},"end":{"line":314,"column":69},"skip":true},"76":{"start":{"line":315,"column":8},"end":{"line":323,"column":36},"skip":true},"77":{"start":{"line":316,"column":12},"end":{"line":316,"column":61},"skip":true},"78":{"start":{"line":317,"column":12},"end":{"line":320,"column":13},"skip":true},"79":{"start":{"line":318,"column":16},"end":{"line":318,"column":75},"skip":true},"80":{"start":{"line":319,"column":16},"end":{"line":319,"column":23},"skip":true},"81":{"start":{"line":321,"column":12},"end":{"line":321,"column":38},"skip":true},"82":{"start":{"line":322,"column":12},"end":{"line":322,"column":27},"skip":true},"83":{"start":{"line":324,"column":8},"end":{"line":324,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":51}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":324,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":12},"end":{"line":297,"column":65},"skip":true},{"start":{"line":298,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":43},"end":{"line":303,"column":75},"skip":true},{"start":{"line":303,"column":79},"end":{"line":303,"column":81},"skip":true}]},"25":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true},{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true},{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true}]},"27":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":27},"end":{"line":313,"column":43},"skip":true},{"start":{"line":313,"column":47},"end":{"line":313,"column":53},"skip":true}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true},{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-jsgraph && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_jsgraph */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_jsgraph","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // post-init","    // run browser js-env code - post-init","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_jsgraph.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        // bug-workaround - long $npm_package_buildCustomOrg","        /* jslint-ignore-begin */","        local.assetsDict['/assets.npmtest_jsgraph.rollup.js'] =","            local.assetsDict['/assets.npmtest_jsgraph.rollup.js'] ||","            local.fs.readFileSync(","                local.npmtest_jsgraph.__dirname + '/lib.npmtest_jsgraph.js',","                'utf8'","            ).replace((/^#!/), '//');","        /* jslint-ignore-end */","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":3,"127":3,"128":3,"129":3,"130":1,"133":3,"134":3,"139":3,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"296":1,"303":1,"306":1,"307":1,"310":1,"311":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"324":1}},"/home/travis/build/npmtest/node-npmtest-jsgraph/node_modules/jsgraph/src/arc_core_graph.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsgraph/node_modules/jsgraph/src/arc_core_graph.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":32,"column":0},"end":{"line":79,"column":2}}},"branchMap":{},"code":["/* --------------------------------------------------------------------------","","   The MIT License (MIT)","","   Copyright (c) 2014-2016 Christopher D. Russell","","   Permission is hereby granted, free of charge, to any person obtaining a copy","   of this software and associated documentation files (the \"Software\"), to deal","   in the Software without restriction, including without limitation the rights","   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell","   copies of the Software, and to permit persons to whom the Software is","   furnished to do so, subject to the following conditions:","","   The above copyright notice and this permission notice shall be included in all","   copies or substantial portions of the Software.","","   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR","   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,","   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE","   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER","   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,","   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE","   SOFTWARE.","","  This library is part of the Encapsule Project System in Cloud (SiC) open service","  architecture. Please follow https://twitter.com/Encapsule for news and updates","  about jsgraph and other time saving libraries that do amazing things with in-memory","  data on Node.js and HTML.  https://github.com/encapsule http://blog.encapsule.org","","-------------------------------------------------------------------------- */","","var jsgraph = module.exports = {","","    // Directed graph support","    directed: {","","        ////","        // Create a DirectedGraph container object.","        //","        // var response = jsgraph.directed.create(request);","        //","        // request = Undefined, JSON string, or data object [1]","        //","        // response = {","        //     error: null or string explaining why result is null","        //     result: DirectedGraph container object or null if error","        // }","        //","        // Notes:","        //","        // [1] see DirectedGraph.toJSON/toObject methods.","        //","        ////","        create: require('./arc_core_digraph').createDirectedGraph,","","        // Directed graph transposition algorithm.","        // Creates a new DirectedGraph container object that's identical","        // to a caller-specified digraph except that the direction of the","        // the edges are reverese in the result digraph. Note that if present,","        // vertex and edge properties in the source digraph are copied by","        // reference to the result digraph.","        transpose: require('./arc_core_digraph_algorithm_transpose'),","","        // Directed graph breadth-first traversal visitor algorithm.","        breadthFirstTraverse: require('./arc_core_digraph_algorithm_bft'),","","        // Directed graph depth-first traversal visitor algorithm.","        depthFirstTraverse: require('./arc_core_digraph_algorithm_dft'),","","        // ADVANCED","","        // Color constant hashtable (advanced).","        colors: require('./arc_core_digraph_algorithm_colors'),","","        // Directed graph traversal context factory (advanced).","        createTraversalContext: require('./arc_core_digraph_algorithm_context')","","    }","};","","",""],"l":{"32":1}},"/home/travis/build/npmtest/node-npmtest-jsgraph/node_modules/jsgraph/src/arc_core_digraph.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsgraph/node_modules/jsgraph/src/arc_core_digraph.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":1,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":1,"52":0,"53":1,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":1,"61":0,"62":1,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":1,"70":0,"71":0,"72":0,"73":0,"74":0,"75":1,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":1,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":1,"117":0,"118":0,"119":0,"120":1,"121":0,"122":1,"123":0,"124":0,"125":0,"126":0,"127":0,"128":1,"129":0,"130":0,"131":0,"132":0,"133":1,"134":0,"135":1,"136":0,"137":0,"138":0,"139":0,"140":0,"141":1,"142":0,"143":1,"144":0,"145":0,"146":0,"147":0,"148":0,"149":1,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":1,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":1,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":1,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":1,"245":0,"246":1,"247":0,"248":0,"249":0,"250":0,"251":0,"252":1,"253":0,"254":0,"255":0,"256":0,"257":1,"258":0,"259":1,"260":0,"261":0,"262":0,"263":0,"264":1,"265":0,"266":1,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":1,"277":0,"278":1,"279":0,"280":0,"281":0,"282":0,"283":1,"284":0,"285":1,"286":0,"287":0,"288":0,"289":0,"290":1,"291":0,"292":1,"293":0,"294":1,"295":0,"296":1,"297":0,"298":1,"299":0,"300":1,"301":1,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0,0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0,0,0],"27":[0,0,0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0,0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0,0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0]},"f":{"1":1,"2":0,"3":0,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0},"fnMap":{"1":{"name":"(anonymous_1)","line":20,"loc":{"start":{"line":20,"column":1},"end":{"line":20,"column":12}}},"2":{"name":"(anonymous_2)","line":21,"loc":{"start":{"line":21,"column":17},"end":{"line":21,"column":40}}},"3":{"name":"(anonymous_3)","line":21,"loc":{"start":{"line":21,"column":49},"end":{"line":21,"column":59}}},"4":{"name":"(anonymous_4)","line":23,"loc":{"start":{"line":23,"column":25},"end":{"line":23,"column":36}}},"5":{"name":"DirectedGraph","line":24,"loc":{"start":{"line":24,"column":8},"end":{"line":24,"column":46}}},"6":{"name":"(anonymous_6)","line":89,"loc":{"start":{"line":89,"column":47},"end":{"line":89,"column":58}}},"7":{"name":"(anonymous_7)","line":93,"loc":{"start":{"line":93,"column":47},"end":{"line":93,"column":65}}},"8":{"name":"(anonymous_8)","line":104,"loc":{"start":{"line":104,"column":54},"end":{"line":104,"column":65}}},"9":{"name":"(anonymous_9)","line":108,"loc":{"start":{"line":108,"column":54},"end":{"line":108,"column":72}}},"10":{"name":"(anonymous_10)","line":121,"loc":{"start":{"line":121,"column":43},"end":{"line":121,"column":64}}},"11":{"name":"(anonymous_11)","line":140,"loc":{"start":{"line":140,"column":44},"end":{"line":140,"column":64}}},"12":{"name":"(anonymous_12)","line":172,"loc":{"start":{"line":172,"column":47},"end":{"line":172,"column":68}}},"13":{"name":"(anonymous_13)","line":194,"loc":{"start":{"line":194,"column":52},"end":{"line":194,"column":72}}},"14":{"name":"(anonymous_14)","line":211,"loc":{"start":{"line":211,"column":52},"end":{"line":211,"column":71}}},"15":{"name":"(anonymous_15)","line":215,"loc":{"start":{"line":215,"column":52},"end":{"line":215,"column":72}}},"16":{"name":"(anonymous_16)","line":225,"loc":{"start":{"line":225,"column":54},"end":{"line":225,"column":74}}},"17":{"name":"(anonymous_17)","line":233,"loc":{"start":{"line":233,"column":43},"end":{"line":233,"column":64}}},"18":{"name":"(anonymous_18)","line":237,"loc":{"start":{"line":237,"column":42},"end":{"line":237,"column":62}}},"19":{"name":"(anonymous_19)","line":247,"loc":{"start":{"line":247,"column":44},"end":{"line":247,"column":65}}},"20":{"name":"(anonymous_20)","line":251,"loc":{"start":{"line":251,"column":43},"end":{"line":251,"column":63}}},"21":{"name":"(anonymous_21)","line":271,"loc":{"start":{"line":271,"column":41},"end":{"line":271,"column":60}}},"22":{"name":"(anonymous_22)","line":300,"loc":{"start":{"line":300,"column":42},"end":{"line":300,"column":62}}},"23":{"name":"(anonymous_23)","line":354,"loc":{"start":{"line":354,"column":45},"end":{"line":354,"column":64}}},"24":{"name":"(anonymous_24)","line":407,"loc":{"start":{"line":407,"column":50},"end":{"line":407,"column":69}}},"25":{"name":"(anonymous_25)","line":435,"loc":{"start":{"line":435,"column":50},"end":{"line":435,"column":69}}},"26":{"name":"(anonymous_26)","line":439,"loc":{"start":{"line":439,"column":50},"end":{"line":439,"column":69}}},"27":{"name":"(anonymous_27)","line":449,"loc":{"start":{"line":449,"column":52},"end":{"line":449,"column":71}}},"28":{"name":"(anonymous_28)","line":459,"loc":{"start":{"line":459,"column":48},"end":{"line":459,"column":59}}},"29":{"name":"(anonymous_29)","line":463,"loc":{"start":{"line":463,"column":46},"end":{"line":463,"column":57}}},"30":{"name":"(anonymous_30)","line":471,"loc":{"start":{"line":471,"column":45},"end":{"line":471,"column":56}}},"31":{"name":"(anonymous_31)","line":475,"loc":{"start":{"line":475,"column":43},"end":{"line":475,"column":54}}},"32":{"name":"(anonymous_32)","line":478,"loc":{"start":{"line":478,"column":40},"end":{"line":478,"column":60}}},"33":{"name":"(anonymous_33)","line":479,"loc":{"start":{"line":479,"column":34},"end":{"line":479,"column":53}}},"34":{"name":"(anonymous_34)","line":484,"loc":{"start":{"line":484,"column":29},"end":{"line":484,"column":49}}},"35":{"name":"(anonymous_35)","line":490,"loc":{"start":{"line":490,"column":52},"end":{"line":490,"column":63}}},"36":{"name":"(anonymous_36)","line":494,"loc":{"start":{"line":494,"column":50},"end":{"line":494,"column":61}}},"37":{"name":"(anonymous_37)","line":502,"loc":{"start":{"line":502,"column":52},"end":{"line":502,"column":63}}},"38":{"name":"(anonymous_38)","line":506,"loc":{"start":{"line":506,"column":50},"end":{"line":506,"column":61}}},"39":{"name":"(anonymous_39)","line":515,"loc":{"start":{"line":515,"column":41},"end":{"line":515,"column":53}}},"40":{"name":"(anonymous_40)","line":518,"loc":{"start":{"line":518,"column":43},"end":{"line":518,"column":54}}},"41":{"name":"(anonymous_41)","line":522,"loc":{"start":{"line":522,"column":44},"end":{"line":522,"column":72}}},"42":{"name":"(anonymous_42)","line":526,"loc":{"start":{"line":526,"column":45},"end":{"line":526,"column":64}}},"43":{"name":"(anonymous_43)","line":530,"loc":{"start":{"line":530,"column":43},"end":{"line":530,"column":59}}},"44":{"name":"(anonymous_44)","line":538,"loc":{"start":{"line":538,"column":30},"end":{"line":538,"column":55}}}},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":15,"column":55}},"2":{"start":{"line":16,"column":0},"end":{"line":16,"column":60}},"3":{"start":{"line":17,"column":0},"end":{"line":17,"column":57}},"4":{"start":{"line":18,"column":0},"end":{"line":18,"column":57}},"5":{"start":{"line":20,"column":0},"end":{"line":568,"column":14}},"6":{"start":{"line":21,"column":4},"end":{"line":21,"column":105}},"7":{"start":{"line":21,"column":42},"end":{"line":21,"column":102}},"8":{"start":{"line":21,"column":61},"end":{"line":21,"column":99}},"9":{"start":{"line":23,"column":4},"end":{"line":536,"column":9}},"10":{"start":{"line":24,"column":8},"end":{"line":85,"column":9}},"11":{"start":{"line":27,"column":12},"end":{"line":27,"column":64}},"12":{"start":{"line":28,"column":12},"end":{"line":28,"column":64}},"13":{"start":{"line":29,"column":12},"end":{"line":29,"column":78}},"14":{"start":{"line":30,"column":12},"end":{"line":30,"column":78}},"15":{"start":{"line":33,"column":12},"end":{"line":33,"column":56}},"16":{"start":{"line":34,"column":12},"end":{"line":34,"column":58}},"17":{"start":{"line":35,"column":12},"end":{"line":35,"column":64}},"18":{"start":{"line":36,"column":12},"end":{"line":36,"column":74}},"19":{"start":{"line":37,"column":12},"end":{"line":37,"column":74}},"20":{"start":{"line":38,"column":12},"end":{"line":38,"column":74}},"21":{"start":{"line":39,"column":12},"end":{"line":39,"column":78}},"22":{"start":{"line":40,"column":12},"end":{"line":40,"column":56}},"23":{"start":{"line":41,"column":12},"end":{"line":41,"column":54}},"24":{"start":{"line":42,"column":12},"end":{"line":42,"column":58}},"25":{"start":{"line":43,"column":12},"end":{"line":43,"column":56}},"26":{"start":{"line":46,"column":12},"end":{"line":46,"column":52}},"27":{"start":{"line":47,"column":12},"end":{"line":47,"column":54}},"28":{"start":{"line":48,"column":12},"end":{"line":48,"column":60}},"29":{"start":{"line":49,"column":12},"end":{"line":49,"column":70}},"30":{"start":{"line":50,"column":12},"end":{"line":50,"column":70}},"31":{"start":{"line":51,"column":12},"end":{"line":51,"column":70}},"32":{"start":{"line":52,"column":12},"end":{"line":52,"column":74}},"33":{"start":{"line":55,"column":12},"end":{"line":55,"column":66}},"34":{"start":{"line":56,"column":12},"end":{"line":56,"column":62}},"35":{"start":{"line":57,"column":12},"end":{"line":57,"column":60}},"36":{"start":{"line":58,"column":12},"end":{"line":58,"column":56}},"37":{"start":{"line":59,"column":12},"end":{"line":59,"column":74}},"38":{"start":{"line":60,"column":12},"end":{"line":60,"column":70}},"39":{"start":{"line":61,"column":12},"end":{"line":61,"column":74}},"40":{"start":{"line":62,"column":12},"end":{"line":62,"column":70}},"41":{"start":{"line":63,"column":12},"end":{"line":63,"column":52}},"42":{"start":{"line":64,"column":12},"end":{"line":64,"column":56}},"43":{"start":{"line":65,"column":12},"end":{"line":65,"column":58}},"44":{"start":{"line":66,"column":12},"end":{"line":66,"column":60}},"45":{"start":{"line":67,"column":12},"end":{"line":67,"column":56}},"46":{"start":{"line":70,"column":12},"end":{"line":78,"column":14}},"47":{"start":{"line":79,"column":12},"end":{"line":84,"column":13}},"48":{"start":{"line":80,"column":16},"end":{"line":80,"column":71}},"49":{"start":{"line":81,"column":16},"end":{"line":83,"column":17}},"50":{"start":{"line":82,"column":20},"end":{"line":82,"column":113}},"51":{"start":{"line":89,"column":8},"end":{"line":91,"column":10}},"52":{"start":{"line":90,"column":12},"end":{"line":90,"column":38}},"53":{"start":{"line":93,"column":8},"end":{"line":102,"column":10}},"54":{"start":{"line":94,"column":12},"end":{"line":94,"column":57}},"55":{"start":{"line":95,"column":12},"end":{"line":100,"column":13}},"56":{"start":{"line":96,"column":16},"end":{"line":96,"column":45}},"57":{"start":{"line":97,"column":16},"end":{"line":97,"column":39}},"58":{"start":{"line":99,"column":16},"end":{"line":99,"column":93}},"59":{"start":{"line":101,"column":12},"end":{"line":101,"column":28}},"60":{"start":{"line":104,"column":8},"end":{"line":106,"column":10}},"61":{"start":{"line":105,"column":12},"end":{"line":105,"column":45}},"62":{"start":{"line":108,"column":8},"end":{"line":117,"column":10}},"63":{"start":{"line":109,"column":12},"end":{"line":109,"column":57}},"64":{"start":{"line":110,"column":12},"end":{"line":115,"column":13}},"65":{"start":{"line":111,"column":16},"end":{"line":111,"column":52}},"66":{"start":{"line":112,"column":16},"end":{"line":112,"column":39}},"67":{"start":{"line":114,"column":16},"end":{"line":114,"column":93}},"68":{"start":{"line":116,"column":12},"end":{"line":116,"column":28}},"69":{"start":{"line":121,"column":8},"end":{"line":128,"column":10}},"70":{"start":{"line":122,"column":12},"end":{"line":122,"column":81}},"71":{"start":{"line":123,"column":12},"end":{"line":125,"column":13}},"72":{"start":{"line":124,"column":16},"end":{"line":124,"column":29}},"73":{"start":{"line":126,"column":12},"end":{"line":126,"column":60}},"74":{"start":{"line":127,"column":12},"end":{"line":127,"column":64}},"75":{"start":{"line":140,"column":8},"end":{"line":170,"column":10}},"76":{"start":{"line":141,"column":12},"end":{"line":141,"column":57}},"77":{"start":{"line":142,"column":12},"end":{"line":142,"column":28}},"78":{"start":{"line":143,"column":12},"end":{"line":143,"column":37}},"79":{"start":{"line":144,"column":12},"end":{"line":164,"column":13}},"80":{"start":{"line":145,"column":16},"end":{"line":145,"column":36}},"81":{"start":{"line":146,"column":16},"end":{"line":146,"column":85}},"82":{"start":{"line":147,"column":16},"end":{"line":150,"column":17}},"83":{"start":{"line":148,"column":20},"end":{"line":148,"column":56}},"84":{"start":{"line":149,"column":20},"end":{"line":149,"column":26}},"85":{"start":{"line":151,"column":16},"end":{"line":151,"column":65}},"86":{"start":{"line":152,"column":16},"end":{"line":159,"column":17}},"87":{"start":{"line":153,"column":20},"end":{"line":153,"column":70}},"88":{"start":{"line":154,"column":20},"end":{"line":154,"column":38}},"89":{"start":{"line":155,"column":20},"end":{"line":155,"column":41}},"90":{"start":{"line":156,"column":20},"end":{"line":156,"column":42}},"91":{"start":{"line":157,"column":20},"end":{"line":157,"column":59}},"92":{"start":{"line":158,"column":20},"end":{"line":158,"column":59}},"93":{"start":{"line":160,"column":16},"end":{"line":162,"column":17}},"94":{"start":{"line":161,"column":20},"end":{"line":161,"column":51}},"95":{"start":{"line":163,"column":16},"end":{"line":163,"column":45}},"96":{"start":{"line":165,"column":12},"end":{"line":168,"column":13}},"97":{"start":{"line":166,"column":16},"end":{"line":166,"column":66}},"98":{"start":{"line":167,"column":16},"end":{"line":167,"column":50}},"99":{"start":{"line":169,"column":12},"end":{"line":169,"column":28}},"100":{"start":{"line":172,"column":8},"end":{"line":192,"column":10}},"101":{"start":{"line":173,"column":12},"end":{"line":173,"column":81}},"102":{"start":{"line":174,"column":12},"end":{"line":176,"column":13}},"103":{"start":{"line":175,"column":16},"end":{"line":175,"column":29}},"104":{"start":{"line":177,"column":12},"end":{"line":177,"column":61}},"105":{"start":{"line":178,"column":12},"end":{"line":180,"column":13}},"106":{"start":{"line":179,"column":16},"end":{"line":179,"column":29}},"107":{"start":{"line":181,"column":12},"end":{"line":181,"column":26}},"108":{"start":{"line":182,"column":12},"end":{"line":184,"column":13}},"109":{"start":{"line":183,"column":16},"end":{"line":183,"column":63}},"110":{"start":{"line":185,"column":12},"end":{"line":187,"column":13}},"111":{"start":{"line":186,"column":16},"end":{"line":186,"column":63}},"112":{"start":{"line":188,"column":12},"end":{"line":188,"column":54}},"113":{"start":{"line":189,"column":12},"end":{"line":189,"column":52}},"114":{"start":{"line":190,"column":12},"end":{"line":190,"column":52}},"115":{"start":{"line":191,"column":12},"end":{"line":191,"column":24}},"116":{"start":{"line":194,"column":8},"end":{"line":199,"column":10}},"117":{"start":{"line":195,"column":12},"end":{"line":197,"column":13}},"118":{"start":{"line":196,"column":16},"end":{"line":196,"column":30}},"119":{"start":{"line":198,"column":12},"end":{"line":198,"column":65}},"120":{"start":{"line":211,"column":8},"end":{"line":213,"column":10}},"121":{"start":{"line":212,"column":12},"end":{"line":212,"column":44}},"122":{"start":{"line":215,"column":8},"end":{"line":223,"column":10}},"123":{"start":{"line":216,"column":12},"end":{"line":218,"column":13}},"124":{"start":{"line":217,"column":16},"end":{"line":217,"column":29}},"125":{"start":{"line":219,"column":12},"end":{"line":221,"column":13}},"126":{"start":{"line":220,"column":16},"end":{"line":220,"column":29}},"127":{"start":{"line":222,"column":12},"end":{"line":222,"column":24}},"128":{"start":{"line":225,"column":8},"end":{"line":231,"column":10}},"129":{"start":{"line":226,"column":12},"end":{"line":228,"column":13}},"130":{"start":{"line":227,"column":16},"end":{"line":227,"column":29}},"131":{"start":{"line":229,"column":12},"end":{"line":229,"column":65}},"132":{"start":{"line":230,"column":12},"end":{"line":230,"column":24}},"133":{"start":{"line":233,"column":8},"end":{"line":235,"column":10}},"134":{"start":{"line":234,"column":12},"end":{"line":234,"column":111}},"135":{"start":{"line":237,"column":8},"end":{"line":245,"column":10}},"136":{"start":{"line":238,"column":12},"end":{"line":238,"column":28}},"137":{"start":{"line":239,"column":12},"end":{"line":243,"column":13}},"138":{"start":{"line":240,"column":16},"end":{"line":242,"column":17}},"139":{"start":{"line":241,"column":20},"end":{"line":241,"column":63}},"140":{"start":{"line":244,"column":12},"end":{"line":244,"column":26}},"141":{"start":{"line":247,"column":8},"end":{"line":249,"column":10}},"142":{"start":{"line":248,"column":12},"end":{"line":248,"column":112}},"143":{"start":{"line":251,"column":8},"end":{"line":259,"column":10}},"144":{"start":{"line":252,"column":12},"end":{"line":252,"column":28}},"145":{"start":{"line":253,"column":12},"end":{"line":257,"column":13}},"146":{"start":{"line":254,"column":16},"end":{"line":256,"column":17}},"147":{"start":{"line":255,"column":20},"end":{"line":255,"column":63}},"148":{"start":{"line":258,"column":12},"end":{"line":258,"column":26}},"149":{"start":{"line":271,"column":8},"end":{"line":288,"column":10}},"150":{"start":{"line":272,"column":12},"end":{"line":272,"column":33}},"151":{"start":{"line":273,"column":12},"end":{"line":273,"column":37}},"152":{"start":{"line":274,"column":12},"end":{"line":286,"column":13}},"153":{"start":{"line":275,"column":16},"end":{"line":275,"column":36}},"154":{"start":{"line":276,"column":16},"end":{"line":278,"column":17}},"155":{"start":{"line":277,"column":20},"end":{"line":277,"column":26}},"156":{"start":{"line":279,"column":16},"end":{"line":279,"column":66}},"157":{"start":{"line":280,"column":16},"end":{"line":280,"column":66}},"158":{"start":{"line":281,"column":16},"end":{"line":283,"column":17}},"159":{"start":{"line":282,"column":20},"end":{"line":282,"column":26}},"160":{"start":{"line":284,"column":16},"end":{"line":284,"column":57}},"161":{"start":{"line":285,"column":16},"end":{"line":285,"column":68}},"162":{"start":{"line":287,"column":12},"end":{"line":287,"column":28}},"163":{"start":{"line":300,"column":8},"end":{"line":342,"column":10}},"164":{"start":{"line":301,"column":12},"end":{"line":301,"column":57}},"165":{"start":{"line":302,"column":12},"end":{"line":302,"column":28}},"166":{"start":{"line":303,"column":12},"end":{"line":303,"column":37}},"167":{"start":{"line":304,"column":12},"end":{"line":336,"column":13}},"168":{"start":{"line":305,"column":16},"end":{"line":305,"column":36}},"169":{"start":{"line":306,"column":16},"end":{"line":306,"column":83}},"170":{"start":{"line":307,"column":16},"end":{"line":310,"column":17}},"171":{"start":{"line":308,"column":20},"end":{"line":308,"column":56}},"172":{"start":{"line":309,"column":20},"end":{"line":309,"column":26}},"173":{"start":{"line":311,"column":16},"end":{"line":311,"column":68}},"174":{"start":{"line":312,"column":16},"end":{"line":315,"column":17}},"175":{"start":{"line":313,"column":20},"end":{"line":313,"column":56}},"176":{"start":{"line":314,"column":20},"end":{"line":314,"column":26}},"177":{"start":{"line":316,"column":16},"end":{"line":316,"column":68}},"178":{"start":{"line":317,"column":16},"end":{"line":320,"column":17}},"179":{"start":{"line":318,"column":20},"end":{"line":318,"column":56}},"180":{"start":{"line":319,"column":20},"end":{"line":319,"column":26}},"181":{"start":{"line":321,"column":16},"end":{"line":321,"column":92}},"182":{"start":{"line":322,"column":16},"end":{"line":325,"column":17}},"183":{"start":{"line":323,"column":20},"end":{"line":323,"column":97}},"184":{"start":{"line":324,"column":20},"end":{"line":324,"column":63}},"185":{"start":{"line":326,"column":16},"end":{"line":326,"column":90}},"186":{"start":{"line":327,"column":16},"end":{"line":331,"column":17}},"187":{"start":{"line":328,"column":20},"end":{"line":328,"column":95}},"188":{"start":{"line":329,"column":20},"end":{"line":329,"column":46}},"189":{"start":{"line":330,"column":20},"end":{"line":330,"column":63}},"190":{"start":{"line":332,"column":16},"end":{"line":334,"column":17}},"191":{"start":{"line":333,"column":20},"end":{"line":333,"column":52}},"192":{"start":{"line":335,"column":16},"end":{"line":335,"column":45}},"193":{"start":{"line":337,"column":12},"end":{"line":340,"column":13}},"194":{"start":{"line":338,"column":16},"end":{"line":338,"column":64}},"195":{"start":{"line":339,"column":16},"end":{"line":339,"column":50}},"196":{"start":{"line":341,"column":12},"end":{"line":341,"column":28}},"197":{"start":{"line":354,"column":8},"end":{"line":396,"column":10}},"198":{"start":{"line":355,"column":12},"end":{"line":355,"column":57}},"199":{"start":{"line":356,"column":12},"end":{"line":356,"column":28}},"200":{"start":{"line":357,"column":12},"end":{"line":357,"column":37}},"201":{"start":{"line":358,"column":12},"end":{"line":390,"column":13}},"202":{"start":{"line":359,"column":16},"end":{"line":359,"column":36}},"203":{"start":{"line":360,"column":16},"end":{"line":360,"column":82}},"204":{"start":{"line":361,"column":16},"end":{"line":364,"column":17}},"205":{"start":{"line":362,"column":20},"end":{"line":362,"column":56}},"206":{"start":{"line":363,"column":20},"end":{"line":363,"column":26}},"207":{"start":{"line":365,"column":16},"end":{"line":365,"column":66}},"208":{"start":{"line":366,"column":16},"end":{"line":366,"column":66}},"209":{"start":{"line":367,"column":16},"end":{"line":370,"column":17}},"210":{"start":{"line":368,"column":20},"end":{"line":368,"column":44}},"211":{"start":{"line":369,"column":20},"end":{"line":369,"column":26}},"212":{"start":{"line":371,"column":16},"end":{"line":371,"column":51}},"213":{"start":{"line":372,"column":16},"end":{"line":372,"column":50}},"214":{"start":{"line":373,"column":16},"end":{"line":376,"column":17}},"215":{"start":{"line":374,"column":20},"end":{"line":374,"column":44}},"216":{"start":{"line":375,"column":20},"end":{"line":375,"column":26}},"217":{"start":{"line":377,"column":16},"end":{"line":377,"column":46}},"218":{"start":{"line":378,"column":16},"end":{"line":380,"column":17}},"219":{"start":{"line":379,"column":20},"end":{"line":379,"column":59}},"220":{"start":{"line":381,"column":16},"end":{"line":381,"column":49}},"221":{"start":{"line":382,"column":16},"end":{"line":382,"column":45}},"222":{"start":{"line":383,"column":16},"end":{"line":385,"column":17}},"223":{"start":{"line":384,"column":20},"end":{"line":384,"column":59}},"224":{"start":{"line":386,"column":16},"end":{"line":388,"column":17}},"225":{"start":{"line":387,"column":20},"end":{"line":387,"column":46}},"226":{"start":{"line":389,"column":16},"end":{"line":389,"column":39}},"227":{"start":{"line":391,"column":12},"end":{"line":394,"column":13}},"228":{"start":{"line":392,"column":16},"end":{"line":392,"column":67}},"229":{"start":{"line":393,"column":16},"end":{"line":393,"column":50}},"230":{"start":{"line":395,"column":12},"end":{"line":395,"column":28}},"231":{"start":{"line":407,"column":8},"end":{"line":423,"column":10}},"232":{"start":{"line":408,"column":12},"end":{"line":408,"column":34}},"233":{"start":{"line":409,"column":12},"end":{"line":409,"column":37}},"234":{"start":{"line":410,"column":12},"end":{"line":421,"column":13}},"235":{"start":{"line":411,"column":16},"end":{"line":411,"column":36}},"236":{"start":{"line":412,"column":16},"end":{"line":414,"column":17}},"237":{"start":{"line":413,"column":20},"end":{"line":413,"column":26}},"238":{"start":{"line":415,"column":16},"end":{"line":415,"column":66}},"239":{"start":{"line":416,"column":16},"end":{"line":416,"column":66}},"240":{"start":{"line":417,"column":16},"end":{"line":419,"column":17}},"241":{"start":{"line":418,"column":20},"end":{"line":418,"column":26}},"242":{"start":{"line":420,"column":16},"end":{"line":420,"column":68}},"243":{"start":{"line":422,"column":12},"end":{"line":422,"column":28}},"244":{"start":{"line":435,"column":8},"end":{"line":437,"column":10}},"245":{"start":{"line":436,"column":12},"end":{"line":436,"column":42}},"246":{"start":{"line":439,"column":8},"end":{"line":447,"column":10}},"247":{"start":{"line":440,"column":12},"end":{"line":442,"column":13}},"248":{"start":{"line":441,"column":16},"end":{"line":441,"column":29}},"249":{"start":{"line":443,"column":12},"end":{"line":445,"column":13}},"250":{"start":{"line":444,"column":16},"end":{"line":444,"column":29}},"251":{"start":{"line":446,"column":12},"end":{"line":446,"column":24}},"252":{"start":{"line":449,"column":8},"end":{"line":455,"column":10}},"253":{"start":{"line":450,"column":12},"end":{"line":452,"column":13}},"254":{"start":{"line":451,"column":16},"end":{"line":451,"column":29}},"255":{"start":{"line":453,"column":12},"end":{"line":453,"column":88}},"256":{"start":{"line":454,"column":12},"end":{"line":454,"column":24}},"257":{"start":{"line":459,"column":8},"end":{"line":461,"column":10}},"258":{"start":{"line":460,"column":12},"end":{"line":460,"column":63}},"259":{"start":{"line":463,"column":8},"end":{"line":469,"column":10}},"260":{"start":{"line":464,"column":12},"end":{"line":464,"column":30}},"261":{"start":{"line":465,"column":12},"end":{"line":467,"column":13}},"262":{"start":{"line":466,"column":16},"end":{"line":466,"column":40}},"263":{"start":{"line":468,"column":12},"end":{"line":468,"column":28}},"264":{"start":{"line":471,"column":8},"end":{"line":473,"column":10}},"265":{"start":{"line":472,"column":12},"end":{"line":472,"column":43}},"266":{"start":{"line":475,"column":8},"end":{"line":488,"column":10}},"267":{"start":{"line":476,"column":12},"end":{"line":476,"column":27}},"268":{"start":{"line":477,"column":12},"end":{"line":477,"column":46}},"269":{"start":{"line":478,"column":12},"end":{"line":482,"column":14}},"270":{"start":{"line":479,"column":16},"end":{"line":481,"column":19}},"271":{"start":{"line":480,"column":20},"end":{"line":480,"column":41}},"272":{"start":{"line":483,"column":12},"end":{"line":483,"column":28}},"273":{"start":{"line":484,"column":12},"end":{"line":486,"column":15}},"274":{"start":{"line":485,"column":16},"end":{"line":485,"column":64}},"275":{"start":{"line":487,"column":12},"end":{"line":487,"column":25}},"276":{"start":{"line":490,"column":8},"end":{"line":492,"column":10}},"277":{"start":{"line":491,"column":12},"end":{"line":491,"column":61}},"278":{"start":{"line":494,"column":8},"end":{"line":500,"column":10}},"279":{"start":{"line":495,"column":12},"end":{"line":495,"column":34}},"280":{"start":{"line":496,"column":12},"end":{"line":498,"column":13}},"281":{"start":{"line":497,"column":16},"end":{"line":497,"column":44}},"282":{"start":{"line":499,"column":12},"end":{"line":499,"column":32}},"283":{"start":{"line":502,"column":8},"end":{"line":504,"column":10}},"284":{"start":{"line":503,"column":12},"end":{"line":503,"column":61}},"285":{"start":{"line":506,"column":8},"end":{"line":512,"column":10}},"286":{"start":{"line":507,"column":12},"end":{"line":507,"column":34}},"287":{"start":{"line":508,"column":12},"end":{"line":510,"column":13}},"288":{"start":{"line":509,"column":16},"end":{"line":509,"column":44}},"289":{"start":{"line":511,"column":12},"end":{"line":511,"column":32}},"290":{"start":{"line":515,"column":8},"end":{"line":517,"column":10}},"291":{"start":{"line":516,"column":12},"end":{"line":516,"column":52}},"292":{"start":{"line":518,"column":8},"end":{"line":520,"column":10}},"293":{"start":{"line":519,"column":12},"end":{"line":519,"column":52}},"294":{"start":{"line":522,"column":8},"end":{"line":524,"column":10}},"295":{"start":{"line":523,"column":12},"end":{"line":523,"column":69}},"296":{"start":{"line":526,"column":8},"end":{"line":528,"column":10}},"297":{"start":{"line":527,"column":12},"end":{"line":527,"column":48}},"298":{"start":{"line":530,"column":8},"end":{"line":532,"column":10}},"299":{"start":{"line":531,"column":12},"end":{"line":531,"column":46}},"300":{"start":{"line":534,"column":8},"end":{"line":534,"column":29}},"301":{"start":{"line":538,"column":4},"end":{"line":547,"column":6}},"302":{"start":{"line":539,"column":8},"end":{"line":539,"column":53}},"303":{"start":{"line":540,"column":8},"end":{"line":540,"column":55}},"304":{"start":{"line":541,"column":8},"end":{"line":545,"column":9}},"305":{"start":{"line":542,"column":12},"end":{"line":542,"column":64}},"306":{"start":{"line":544,"column":12},"end":{"line":544,"column":38}},"307":{"start":{"line":546,"column":8},"end":{"line":546,"column":24}},"308":{"start":{"line":549,"column":4},"end":{"line":566,"column":6}}},"branchMap":{"1":{"line":79,"type":"if","locations":[{"start":{"line":79,"column":12},"end":{"line":79,"column":12}},{"start":{"line":79,"column":12},"end":{"line":79,"column":12}}]},"2":{"line":79,"type":"binary-expr","locations":[{"start":{"line":79,"column":17},"end":{"line":79,"column":39}},{"start":{"line":79,"column":44},"end":{"line":79,"column":57}}]},"3":{"line":81,"type":"if","locations":[{"start":{"line":81,"column":16},"end":{"line":81,"column":16}},{"start":{"line":81,"column":16},"end":{"line":81,"column":16}}]},"4":{"line":95,"type":"if","locations":[{"start":{"line":95,"column":12},"end":{"line":95,"column":12}},{"start":{"line":95,"column":12},"end":{"line":95,"column":12}}]},"5":{"line":110,"type":"if","locations":[{"start":{"line":110,"column":12},"end":{"line":110,"column":12}},{"start":{"line":110,"column":12},"end":{"line":110,"column":12}}]},"6":{"line":123,"type":"if","locations":[{"start":{"line":123,"column":12},"end":{"line":123,"column":12}},{"start":{"line":123,"column":12},"end":{"line":123,"column":12}}]},"7":{"line":127,"type":"binary-expr","locations":[{"start":{"line":127,"column":20},"end":{"line":127,"column":35}},{"start":{"line":127,"column":40},"end":{"line":127,"column":46}},{"start":{"line":127,"column":50},"end":{"line":127,"column":54}},{"start":{"line":127,"column":58},"end":{"line":127,"column":63}}]},"8":{"line":147,"type":"if","locations":[{"start":{"line":147,"column":16},"end":{"line":147,"column":16}},{"start":{"line":147,"column":16},"end":{"line":147,"column":16}}]},"9":{"line":152,"type":"if","locations":[{"start":{"line":152,"column":16},"end":{"line":152,"column":16}},{"start":{"line":152,"column":16},"end":{"line":152,"column":16}}]},"10":{"line":152,"type":"binary-expr","locations":[{"start":{"line":152,"column":21},"end":{"line":152,"column":36}},{"start":{"line":152,"column":41},"end":{"line":152,"column":48}}]},"11":{"line":160,"type":"if","locations":[{"start":{"line":160,"column":16},"end":{"line":160,"column":16}},{"start":{"line":160,"column":16},"end":{"line":160,"column":16}}]},"12":{"line":165,"type":"if","locations":[{"start":{"line":165,"column":12},"end":{"line":165,"column":12}},{"start":{"line":165,"column":12},"end":{"line":165,"column":12}}]},"13":{"line":174,"type":"if","locations":[{"start":{"line":174,"column":12},"end":{"line":174,"column":12}},{"start":{"line":174,"column":12},"end":{"line":174,"column":12}}]},"14":{"line":178,"type":"if","locations":[{"start":{"line":178,"column":12},"end":{"line":178,"column":12}},{"start":{"line":178,"column":12},"end":{"line":178,"column":12}}]},"15":{"line":178,"type":"binary-expr","locations":[{"start":{"line":178,"column":17},"end":{"line":178,"column":33}},{"start":{"line":178,"column":38},"end":{"line":178,"column":46}}]},"16":{"line":195,"type":"if","locations":[{"start":{"line":195,"column":12},"end":{"line":195,"column":12}},{"start":{"line":195,"column":12},"end":{"line":195,"column":12}}]},"17":{"line":216,"type":"if","locations":[{"start":{"line":216,"column":12},"end":{"line":216,"column":12}},{"start":{"line":216,"column":12},"end":{"line":216,"column":12}}]},"18":{"line":219,"type":"if","locations":[{"start":{"line":219,"column":12},"end":{"line":219,"column":12}},{"start":{"line":219,"column":12},"end":{"line":219,"column":12}}]},"19":{"line":226,"type":"if","locations":[{"start":{"line":226,"column":12},"end":{"line":226,"column":12}},{"start":{"line":226,"column":12},"end":{"line":226,"column":12}}]},"20":{"line":234,"type":"cond-expr","locations":[{"start":{"line":234,"column":44},"end":{"line":234,"column":107}},{"start":{"line":234,"column":108},"end":{"line":234,"column":110}}]},"21":{"line":239,"type":"if","locations":[{"start":{"line":239,"column":12},"end":{"line":239,"column":12}},{"start":{"line":239,"column":12},"end":{"line":239,"column":12}}]},"22":{"line":248,"type":"cond-expr","locations":[{"start":{"line":248,"column":44},"end":{"line":248,"column":108}},{"start":{"line":248,"column":109},"end":{"line":248,"column":111}}]},"23":{"line":253,"type":"if","locations":[{"start":{"line":253,"column":12},"end":{"line":253,"column":12}},{"start":{"line":253,"column":12},"end":{"line":253,"column":12}}]},"24":{"line":276,"type":"if","locations":[{"start":{"line":276,"column":16},"end":{"line":276,"column":16}},{"start":{"line":276,"column":16},"end":{"line":276,"column":16}}]},"25":{"line":281,"type":"if","locations":[{"start":{"line":281,"column":16},"end":{"line":281,"column":16}},{"start":{"line":281,"column":16},"end":{"line":281,"column":16}}]},"26":{"line":281,"type":"binary-expr","locations":[{"start":{"line":281,"column":23},"end":{"line":281,"column":39}},{"start":{"line":281,"column":44},"end":{"line":281,"column":51}},{"start":{"line":281,"column":56},"end":{"line":281,"column":72}},{"start":{"line":281,"column":77},"end":{"line":281,"column":84}}]},"27":{"line":285,"type":"binary-expr","locations":[{"start":{"line":285,"column":28},"end":{"line":285,"column":41}},{"start":{"line":285,"column":46},"end":{"line":285,"column":50}},{"start":{"line":285,"column":54},"end":{"line":285,"column":58}},{"start":{"line":285,"column":62},"end":{"line":285,"column":67}}]},"28":{"line":307,"type":"if","locations":[{"start":{"line":307,"column":16},"end":{"line":307,"column":16}},{"start":{"line":307,"column":16},"end":{"line":307,"column":16}}]},"29":{"line":312,"type":"if","locations":[{"start":{"line":312,"column":16},"end":{"line":312,"column":16}},{"start":{"line":312,"column":16},"end":{"line":312,"column":16}}]},"30":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":16},"end":{"line":317,"column":16}},{"start":{"line":317,"column":16},"end":{"line":317,"column":16}}]},"31":{"line":322,"type":"if","locations":[{"start":{"line":322,"column":16},"end":{"line":322,"column":16}},{"start":{"line":322,"column":16},"end":{"line":322,"column":16}}]},"32":{"line":322,"type":"binary-expr","locations":[{"start":{"line":322,"column":21},"end":{"line":322,"column":37}},{"start":{"line":322,"column":42},"end":{"line":322,"column":50}}]},"33":{"line":327,"type":"if","locations":[{"start":{"line":327,"column":16},"end":{"line":327,"column":16}},{"start":{"line":327,"column":16},"end":{"line":327,"column":16}}]},"34":{"line":327,"type":"binary-expr","locations":[{"start":{"line":327,"column":21},"end":{"line":327,"column":36}},{"start":{"line":327,"column":41},"end":{"line":327,"column":48}}]},"35":{"line":332,"type":"if","locations":[{"start":{"line":332,"column":16},"end":{"line":332,"column":16}},{"start":{"line":332,"column":16},"end":{"line":332,"column":16}}]},"36":{"line":337,"type":"if","locations":[{"start":{"line":337,"column":12},"end":{"line":337,"column":12}},{"start":{"line":337,"column":12},"end":{"line":337,"column":12}}]},"37":{"line":361,"type":"if","locations":[{"start":{"line":361,"column":16},"end":{"line":361,"column":16}},{"start":{"line":361,"column":16},"end":{"line":361,"column":16}}]},"38":{"line":367,"type":"if","locations":[{"start":{"line":367,"column":16},"end":{"line":367,"column":16}},{"start":{"line":367,"column":16},"end":{"line":367,"column":16}}]},"39":{"line":367,"type":"binary-expr","locations":[{"start":{"line":367,"column":23},"end":{"line":367,"column":39}},{"start":{"line":367,"column":44},"end":{"line":367,"column":51}},{"start":{"line":367,"column":56},"end":{"line":367,"column":72}},{"start":{"line":367,"column":77},"end":{"line":367,"column":84}}]},"40":{"line":373,"type":"if","locations":[{"start":{"line":373,"column":16},"end":{"line":373,"column":16}},{"start":{"line":373,"column":16},"end":{"line":373,"column":16}}]},"41":{"line":373,"type":"binary-expr","locations":[{"start":{"line":373,"column":23},"end":{"line":373,"column":36}},{"start":{"line":373,"column":41},"end":{"line":373,"column":45}}]},"42":{"line":378,"type":"if","locations":[{"start":{"line":378,"column":16},"end":{"line":378,"column":16}},{"start":{"line":378,"column":16},"end":{"line":378,"column":16}}]},"43":{"line":383,"type":"if","locations":[{"start":{"line":383,"column":16},"end":{"line":383,"column":16}},{"start":{"line":383,"column":16},"end":{"line":383,"column":16}}]},"44":{"line":386,"type":"if","locations":[{"start":{"line":386,"column":16},"end":{"line":386,"column":16}},{"start":{"line":386,"column":16},"end":{"line":386,"column":16}}]},"45":{"line":391,"type":"if","locations":[{"start":{"line":391,"column":12},"end":{"line":391,"column":12}},{"start":{"line":391,"column":12},"end":{"line":391,"column":12}}]},"46":{"line":412,"type":"if","locations":[{"start":{"line":412,"column":16},"end":{"line":412,"column":16}},{"start":{"line":412,"column":16},"end":{"line":412,"column":16}}]},"47":{"line":417,"type":"if","locations":[{"start":{"line":417,"column":16},"end":{"line":417,"column":16}},{"start":{"line":417,"column":16},"end":{"line":417,"column":16}}]},"48":{"line":417,"type":"binary-expr","locations":[{"start":{"line":417,"column":23},"end":{"line":417,"column":39}},{"start":{"line":417,"column":44},"end":{"line":417,"column":51}},{"start":{"line":417,"column":56},"end":{"line":417,"column":72}},{"start":{"line":417,"column":77},"end":{"line":417,"column":84}}]},"49":{"line":440,"type":"if","locations":[{"start":{"line":440,"column":12},"end":{"line":440,"column":12}},{"start":{"line":440,"column":12},"end":{"line":440,"column":12}}]},"50":{"line":443,"type":"if","locations":[{"start":{"line":443,"column":12},"end":{"line":443,"column":12}},{"start":{"line":443,"column":12},"end":{"line":443,"column":12}}]},"51":{"line":450,"type":"if","locations":[{"start":{"line":450,"column":12},"end":{"line":450,"column":12}},{"start":{"line":450,"column":12},"end":{"line":450,"column":12}}]},"52":{"line":541,"type":"if","locations":[{"start":{"line":541,"column":8},"end":{"line":541,"column":8}},{"start":{"line":541,"column":8},"end":{"line":541,"column":8}}]}},"code":["/*","  Copyright (C) 2014-2016 Christopher D. Russell","","  This library is published under the MIT License and is part of the","  Encapsule Project System in Cloud (SiC) open service architecture.","  Please follow https://twitter.com/Encapsule for news and updates","  about jsgraph and other time saving libraries that do amazing things","  with in-memory data on Node.js and HTML.","*/","","// Inspired by the Boost Graph Library (BGL)","// http://www.boost.org/doc/libs/1_55_0/libs/graph/doc/index.html","// http://en.wikipedia.org/wiki/Directed_graph","","var helperFunctions = require('./arc_core_graph_util');","var digraphParams = require('./arc_core_digraph_in_params');","var digraphImport = require('./arc_core_digraph_import');","var digraphExport = require('./arc_core_digraph_export');","","(function() {","    var __bind = function(method, scope){ return function(){ return method.apply(scope, arguments); }; };","","    var DirectedGraph = (function() {","        function DirectedGraph(jsonOrObject_) {","","            // Meta methods","            this.getGraphName = __bind(this.getGraphName, this);","            this.setGraphName = __bind(this.setGraphName, this);","            this.getGraphDescription = __bind(this.getGraphDescription, this);","            this.setGraphDescription = __bind(this.setGraphDescription, this);","","            // Vertex-scope methods","            this.isVertex = __bind(this.isVertex, this);","            this.addVertex = __bind(this.addVertex, this);","            this.removeVertex = __bind(this.removeVertex, this);","            this.getVertexProperty = __bind(this.getVertexProperty, this);","            this.setVertexProperty = __bind(this.setVertexProperty, this);","            this.hasVertexProperty = __bind(this.hasVertexProperty, this);","            this.clearVertexProperty = __bind(this.clearVertexProperty, this);","            this.inDegree = __bind(this.inDegree, this);","            this.inEdges = __bind(this.inEdges, this);","            this.outDegree = __bind(this.outDegree, this);","            this.outEdges = __bind(this.outEdges, this);","","            // Edge-scope methods","            this.isEdge = __bind(this.isEdge, this);","            this.addEdge = __bind(this.addEdge, this);","            this.removeEdge = __bind(this.removeEdge, this);","            this.getEdgeProperty = __bind(this.getEdgeProperty, this);","            this.setEdgeProperty = __bind(this.setEdgeProperty, this);","            this.hasEdgeProperty = __bind(this.hasEdgeProperty, this);","            this.clearEdgeProperty = __bind(this.clearEdgeProperty, this);","","            // Digraph-scope methods","            this.verticesCount = __bind(this.verticesCount, this);","            this.getVertices = __bind(this.getVertices, this);","            this.edgesCount = __bind(this.edgesCount, this);","            this.getEdges = __bind(this.getEdges, this);","            this.rootVerticesCount = __bind(this.rootVerticesCount, this);","            this.getRootVertices = __bind(this.getRootVertices, this);","            this.leafVerticesCount = __bind(this.leafVerticesCount, this);","            this.getLeafVertices = __bind(this.getLeafVertices, this);","            this.toJSON = __bind(this.toJSON, this);","            this.toObject = __bind(this.toObject, this);","            this.stringify = __bind(this.stringify, this);","            this.fromObject = __bind(this.fromObject, this);","            this.fromJSON = __bind(this.fromJSON, this);","","            // DirectedGraph container private runtime state.","            this._private = {","                name: \"\",","                description: \"\",","                vertexMap: {},","                rootMap: {},","                leafMap: {},","                edgeCount: 0,","                constructionError: null","            };","            if ((jsonOrObject_ !== null) && jsonOrObject_) {","                var innerResponse = digraphImport(this, jsonOrObject_);","                if (innerResponse.error) {","                    this._private.constructionError = \"DirectedGraph constructor failed: \" + innerResponse.error;","                }","            }","        }","","        // META METHODS","","        DirectedGraph.prototype.getGraphName = function() {","            return this._private.name;","        };","","        DirectedGraph.prototype.setGraphName = function(string_) {","            var response = { error: null, result: null };","            if (helperFunctions.JSType(string_) === '[object String]') {","                this._private.name = string_;","                response.result = true;","            } else {","                response.error = \"Invalid graph name specified. Expected '[object String]'.\";","            }","            return response;","        };","","        DirectedGraph.prototype.getGraphDescription = function() {","            return this._private.description;","        };","","        DirectedGraph.prototype.setGraphDescription = function(string_) {","            var response = { error: null, result: null };","            if (helperFunctions.JSType(string_) === '[object String]') {","                this._private.description = string_;","                response.result = true;","            } else {","                response.error = \"Invalid graph name specified. Expected '[object String]'.\";","            }","            return response;","        };","","        // VERTEX-SCOPE METHODS","","        DirectedGraph.prototype.isVertex = function (vertexId_) {","            var innerResponse = digraphParams.verifyVertexReadRequest(vertexId_);","            if (innerResponse.error) {","                return false;","            }","            var vertex = this._private.vertexMap[vertexId_];","            return (vertex !== null) && vertex && true || false;","        };","","        /*","          request = {","              u: vertex ID string","              p: optional property (must be serializable to JSON)","          }","          response = {","              error: null or error string","              result: vertex ID string or null if error","          }","         */","        DirectedGraph.prototype.addVertex = function (request_) {","            var response = { error: null, result: null };","            var errors = [];","            var inBreakScope = false;","            while (!inBreakScope) {","                inBreakScope = true;","                var innerResponse = digraphParams.verifyVertexWriteRequest(request_);","                if (innerResponse.error) {","                    errors.unshift(innerResponse.error);","                    break;","                }","                var vertex = this._private.vertexMap[request_.u];","                if ((vertex === null) || !vertex) {","                    vertex = this._private.vertexMap[request_.u] = {};","                    vertex.edges = {};","                    vertex.edges.in = {};","                    vertex.edges.out = {};","                    this._private.rootMap[request_.u] = {};","                    this._private.leafMap[request_.u] = {};","                }","                if (helperFunctions.JSType(request_.p) !== '[object Undefined]') {","                    vertex.properties = request_.p;","                }","                response.result = request_.u;","            } // end while !inBreakScope","            if (errors.length) {","                errors.unshift(\"DirectedGraph.addVertex failed:\");","                response.error = errors.join(' ');","            }","            return response;","        };","","        DirectedGraph.prototype.removeVertex = function (vertexId_) {","            var innerResponse = digraphParams.verifyVertexReadRequest(vertexId_);","            if (innerResponse.error) {","                return false;","            }","            var vertexU = this._private.vertexMap[vertexId_];","            if ((vertexU === null) || !vertexU) {","                return false;","            }","            var vertexIdX;","            for (vertexIdX in vertexU.edges.out) {","                this.removeEdge({ u: vertexId_, v: vertexIdX});","            }","            for (vertexIdX in vertexU.edges.in) {","                this.removeEdge({ u: vertexIdX, v: vertexId_});","            }","            delete this._private.vertexMap[vertexId_];","            delete this._private.rootMap[vertexId_];","            delete this._private.leafMap[vertexId_];","            return true;","        };","","        DirectedGraph.prototype.getVertexProperty = function(vertexId_) {","            if (!this.isVertex(vertexId_)) {","                return void 0;","            }","            return this._private.vertexMap[vertexId_].properties;","        };","","        /*","          request = {","              u: vertex ID string","              p: optional property (must be serializable to JSON)","          }","          response = {","              error: null or error string","              result: vertex ID string or null if error","          }","         */","        DirectedGraph.prototype.setVertexProperty = function(request_) {","            return this.addVertex(request_);","        };","","        DirectedGraph.prototype.hasVertexProperty = function(vertexId_) {","            if (!this.isVertex(vertexId_)) {","                return false;","            }","            if (helperFunctions.JSType(this._private.vertexMap[vertexId_].properties) === '[object Undefined]') {","                return false;","            }","            return true;","        };","","        DirectedGraph.prototype.clearVertexProperty = function(vertexId_) {","            if (!this.isVertex(vertexId_)) {","                return false;","            }","            delete this._private.vertexMap[vertexId_].properties;","            return true;","        };","","        DirectedGraph.prototype.inDegree = function (vertexId_) {","            return this.isVertex(vertexId_)?Object.keys(this._private.vertexMap[vertexId_].edges.in).length:-1;","        };","","        DirectedGraph.prototype.inEdges = function(vertexId_) {","            var result = [];","            if (this.isVertex(vertexId_)) {","                for (var vertexIdV in this._private.vertexMap[vertexId_].edges.in) {","                    result.push({ u: vertexIdV, v: vertexId_});","                }","            }","            return result;","        };","","        DirectedGraph.prototype.outDegree = function (vertexId_) {","            return this.isVertex(vertexId_)?Object.keys(this._private.vertexMap[vertexId_].edges.out).length:-1;","        };","","        DirectedGraph.prototype.outEdges = function(vertexId_) {","            var result = [];","            if (this.isVertex(vertexId_)) {","                for (var vertexIdV in this._private.vertexMap[vertexId_].edges.out) {","                    result.push({ u: vertexId_, v: vertexIdV});","                }","            }","            return result;","        };","","        // EDGE-SCOPE METHODS","","        /*","          request = {","              u: string,","              v: string,","          }","          response = Boolean true if edge exists. Otherwise, false.","          Note that invalid requests are coalesced as negative responses.","        */","        DirectedGraph.prototype.isEdge = function(request_) {","            var response = false;","            var inBreakScope = false;","            while (!inBreakScope) {","                inBreakScope = true;","                if (digraphParams.verifyEdgeReadRequest(request_).error) {","                    break;","                }","                var vertexU = this._private.vertexMap[request_.u];","                var vertexV = this._private.vertexMap[request_.v];","                if (!((vertexU !== null) && vertexU && (vertexV !== null) && vertexV)) {","                    break;","                }","                var edge = vertexU.edges.out[request_.v];","                response = (edge !== null) && edge && true || false;","            }","            return response;","        };","","        /*","          request = {","              e: { u: string, v: string },","              p: (optional) property serializable to JSON","          }","          response = {","              error: error string or null","              result: edge descriptor object or null iff error","          }","         */","        DirectedGraph.prototype.addEdge = function (request_) {","            var response = { error: null, result: null };","            var errors = [];","            var inBreakScope = false;","            while (!inBreakScope) {","                inBreakScope = true;","                var innerResponse = digraphParams.verifyEdgeWriteRequest(request_);","                if (innerResponse.error) {","                    errors.unshift(innerResponse.error);","                    break;","                }","                innerResponse = this.addVertex({ u: request_.e.u });","                if (innerResponse.error) {","                    errors.unshift(innerResponse.error);","                    break;","                }","                innerResponse = this.addVertex({ u: request_.e.v });","                if (innerResponse.error) {","                    errors.unshift(innerResponse.error);","                    break;","                }","                var outEdge = this._private.vertexMap[request_.e.u].edges.out[request_.e.v];","                if ((outEdge === null) || !outEdge) {","                    outEdge = this._private.vertexMap[request_.e.u].edges.out[request_.e.v] = {};","                    delete this._private.leafMap[request_.e.u];","                }","                var inEdge = this._private.vertexMap[request_.e.v].edges.in[request_.e.u];","                if ((inEdge === null) || !inEdge) {","                    inEdge = this._private.vertexMap[request_.e.v].edges.in[request_.e.u] = {};","                    this._private.edgeCount++;","                    delete this._private.rootMap[request_.e.v];","                }","                if (helperFunctions.JSType(request_.p) !== '[object Undefined]') {","                    outEdge.properties = request_.p;","                }","                response.result = request_.e;","            } // end while !inBreakScope","            if (errors.length) {","                errors.unshift(\"DirectedGraph.addEdge failed:\");","                response.error = errors.join(' ');","            }","            return response;","        };","","        /*","          request = {","              u: string,","              v: string,","          }","          response = {","              error: null or error string explaining why result is null","              result: Boolean true if successful. False if edge doesn't exist.","          }","        */","        DirectedGraph.prototype.removeEdge = function(request_) {","            var response = { error: null, result: null };","            var errors = [];","            var inBreakScope = false;","            while (!inBreakScope) {","                inBreakScope = true;","                var innerResponse = digraphParams.verifyEdgeReadRequest(request_);","                if (innerResponse.error) {","                    errors.unshift(innerResponse.error);","                    break;","                }","                var vertexU = this._private.vertexMap[request_.u];","                var vertexV = this._private.vertexMap[request_.v];","                if (!((vertexU !== null) && vertexU && (vertexV !== null) && vertexV)) {","                    response.result = false;","                    break;","                }","                var outEdgeMap = vertexU.edges.out;","                var edge = outEdgeMap[request_.v];","                if (!((edge !== null) && edge)) {","                    response.result = false;","                    break;","                }","                delete outEdgeMap[request_.v];","                if (!Object.keys(outEdgeMap).length) {","                    this._private.leafMap[request_.u] = {};","                }","                var inEdgeMap = vertexV.edges.in;","                delete inEdgeMap[request_.u];","                if (!Object.keys(inEdgeMap).length) {","                    this._private.rootMap[request_.v] = {};","                }","                if (this._private.edgeCount) {","                    this._private.edgeCount--;","                }","                response.result = true;","            } // while !inBreakScope","            if (errors.length) {","                errors.unshift(\"DirectedGraph.removeEdge failed:\");","                response.error = errors.join(' ');","            }","            return response;","        };","","        /*","          request = {","              u: string,","              v: string","          }","          response = void 0 or whatever property is assigned to the edge","          Note that build requests are coalesced to void 0 responses.","         */","","        DirectedGraph.prototype.getEdgeProperty = function(request_) {","            var response = void 0;","            var inBreakScope = false;","            while (!inBreakScope) {","                inBreakScope = true;","                if (digraphParams.verifyEdgeReadRequest(request_).error) {","                    break;","                }","                var vertexU = this._private.vertexMap[request_.u];","                var vertexV = this._private.vertexMap[request_.v];","                if (!((vertexU !== null) && vertexU && (vertexV !== null) && vertexV)) {","                    break;","                }","                response = vertexU.edges.out[request_.v].properties;","            }","            return response;","        };","","        /*","          request = {","              e: { u: string, v: string },","              p: (optional) property serializable to JSON","          }","          response = {","              error: error string or null","              result: edge descriptor object or null iff error","          }","         */","        DirectedGraph.prototype.setEdgeProperty = function(request_) {","            return this.addEdge(request_);","        };","","        DirectedGraph.prototype.hasEdgeProperty = function(request_) {","            if (!this.isEdge(request_)) {","                return false;","            }","            if (helperFunctions.JSType(this._private.vertexMap[request_.u].edges.out[request_.v].properties) === '[object Undefined]') {","                return false;","            }","            return true;","        };","","        DirectedGraph.prototype.clearEdgeProperty = function(request_) {","            if (!this.isEdge(request_)) {","                return false;","            }","            delete this._private.vertexMap[request_.u].edges.out[request_.v].properties;","            return true;","        };","","        // DIGRAPH-SCOPE METHODS","","        DirectedGraph.prototype.verticesCount = function() {","            return Object.keys(this._private.vertexMap).length;","        };","","        DirectedGraph.prototype.getVertices = function() {","            var vertices = [];","            for (var vertexId in this._private.vertexMap) {","                vertices.push(vertexId);","            }","            return vertices;","        };","","        DirectedGraph.prototype.edgesCount = function() {","            return this._private.edgeCount;","        };","","        DirectedGraph.prototype.getEdges = function() {","            var edges = [];","            var vertices = this.getVertices();","            var processVertexOutEdges = function(outEdges_) {","                outEdges_.forEach(function(outEdge_) {","                    edges.push(outEdge_);","                });","            };","            var self = this;","            vertices.forEach(function(vertexId_) {","                processVertexOutEdges(self.outEdges(vertexId_));","            });","            return edges;","        };","","        DirectedGraph.prototype.rootVerticesCount = function() {","            return Object.keys(this._private.rootMap).length;","        };","","        DirectedGraph.prototype.getRootVertices = function() {","            var rootVertices = [];","            for (var vertexId in this._private.rootMap) {","                rootVertices.push(vertexId);","            }","            return rootVertices;","        };","","        DirectedGraph.prototype.leafVerticesCount = function() {","            return Object.keys(this._private.leafMap).length;","        };","","        DirectedGraph.prototype.getLeafVertices = function() {","            var leafVertices = [];","            for (var vertexId in this._private.leafMap) {","                leafVertices.push(vertexId);","            }","            return leafVertices;","        };","","        // toJSON and toObject are identical delegations to digraphExport.exportObject.","        DirectedGraph.prototype.toJSON = function () {","            return digraphExport.exportObject(this);","        };","        DirectedGraph.prototype.toObject = function() {","            return digraphExport.exportObject(this);","        };","","        DirectedGraph.prototype.stringify = function(replacer_, space_) {","            return digraphExport.exportJSON(this, replacer_, space_);","        };","","        DirectedGraph.prototype.fromObject = function (object_) {","            return digraphImport(this, object_);","        };","","        DirectedGraph.prototype.fromJSON = function(json_) {","            return digraphImport(this, json_);","        };","","        return DirectedGraph;","","    })();","","    var createDirectedGraph = function (jsonOrObject_) {","        var response = { error: null, result: null };","        var digraph = new DirectedGraph(jsonOrObject_);","        if (digraph._private.constructionError) {","            response.error = digraph._private.constructionError;","        } else {","            response.result = digraph;","        }","        return response;","    };","","    module.exports = {","        /*","          createDirectedGraph is a wrapper around JavaScript operator new jsgraph.DirectedGraph(...)","          that returns an error/result response object. This is the preferred mechanism by which","          jsgraph-derived client code should construct DirectedGraph container object instance(s).","        */","        createDirectedGraph: createDirectedGraph,","","        /*","          DirectedGraph is constructed with JavaScript operator new but may fail during construction","          if an error is encountered parsing the constructor's optional JSON/data object in-paramter.","          After contruction, clients should check DirectedGraph.constructionError === null to ensure","          that construction was successful. If a construction error occurred, constructionError is the","          response.error string returned by DirectedGraph's data import subroutine.","        */","        DirectedGraph: DirectedGraph","","    };","","}).call(this);",""],"l":{"15":1,"16":1,"17":1,"18":1,"20":1,"21":1,"23":1,"24":1,"27":0,"28":0,"29":0,"30":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"70":0,"79":0,"80":0,"81":0,"82":0,"89":1,"90":0,"93":1,"94":0,"95":0,"96":0,"97":0,"99":0,"101":0,"104":1,"105":0,"108":1,"109":0,"110":0,"111":0,"112":0,"114":0,"116":0,"121":1,"122":0,"123":0,"124":0,"126":0,"127":0,"140":1,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"160":0,"161":0,"163":0,"165":0,"166":0,"167":0,"169":0,"172":1,"173":0,"174":0,"175":0,"177":0,"178":0,"179":0,"181":0,"182":0,"183":0,"185":0,"186":0,"188":0,"189":0,"190":0,"191":0,"194":1,"195":0,"196":0,"198":0,"211":1,"212":0,"215":1,"216":0,"217":0,"219":0,"220":0,"222":0,"225":1,"226":0,"227":0,"229":0,"230":0,"233":1,"234":0,"237":1,"238":0,"239":0,"240":0,"241":0,"244":0,"247":1,"248":0,"251":1,"252":0,"253":0,"254":0,"255":0,"258":0,"271":1,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"279":0,"280":0,"281":0,"282":0,"284":0,"285":0,"287":0,"300":1,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"311":0,"312":0,"313":0,"314":0,"316":0,"317":0,"318":0,"319":0,"321":0,"322":0,"323":0,"324":0,"326":0,"327":0,"328":0,"329":0,"330":0,"332":0,"333":0,"335":0,"337":0,"338":0,"339":0,"341":0,"354":1,"355":0,"356":0,"357":0,"358":0,"359":0,"360":0,"361":0,"362":0,"363":0,"365":0,"366":0,"367":0,"368":0,"369":0,"371":0,"372":0,"373":0,"374":0,"375":0,"377":0,"378":0,"379":0,"381":0,"382":0,"383":0,"384":0,"386":0,"387":0,"389":0,"391":0,"392":0,"393":0,"395":0,"407":1,"408":0,"409":0,"410":0,"411":0,"412":0,"413":0,"415":0,"416":0,"417":0,"418":0,"420":0,"422":0,"435":1,"436":0,"439":1,"440":0,"441":0,"443":0,"444":0,"446":0,"449":1,"450":0,"451":0,"453":0,"454":0,"459":1,"460":0,"463":1,"464":0,"465":0,"466":0,"468":0,"471":1,"472":0,"475":1,"476":0,"477":0,"478":0,"479":0,"480":0,"483":0,"484":0,"485":0,"487":0,"490":1,"491":0,"494":1,"495":0,"496":0,"497":0,"499":0,"502":1,"503":0,"506":1,"507":0,"508":0,"509":0,"511":0,"515":1,"516":0,"518":1,"519":0,"522":1,"523":0,"526":1,"527":0,"530":1,"531":0,"534":1,"538":1,"539":0,"540":0,"541":0,"542":0,"544":0,"546":0,"549":1}},"/home/travis/build/npmtest/node-npmtest-jsgraph/node_modules/jsgraph/src/arc_core_graph_util.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsgraph/node_modules/jsgraph/src/arc_core_graph_util.js","s":{"1":1,"2":0,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":1,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":1},"b":{"1":[0,0,0],"2":[0,0],"3":[0,0],"4":[0,0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":11,"loc":{"start":{"line":11,"column":13},"end":{"line":11,"column":34}}},"2":{"name":"(anonymous_2)","line":26,"loc":{"start":{"line":26,"column":22},"end":{"line":26,"column":41}}},"3":{"name":"(anonymous_3)","line":61,"loc":{"start":{"line":61,"column":35},"end":{"line":61,"column":89}}}},"statementMap":{"1":{"start":{"line":11,"column":0},"end":{"line":13,"column":2}},"2":{"start":{"line":12,"column":4},"end":{"line":12,"column":54}},"3":{"start":{"line":26,"column":0},"end":{"line":59,"column":2}},"4":{"start":{"line":27,"column":4},"end":{"line":27,"column":49}},"5":{"start":{"line":28,"column":4},"end":{"line":28,"column":20}},"6":{"start":{"line":29,"column":4},"end":{"line":29,"column":28}},"7":{"start":{"line":30,"column":4},"end":{"line":30,"column":40}},"8":{"start":{"line":31,"column":4},"end":{"line":41,"column":5}},"9":{"start":{"line":33,"column":8},"end":{"line":33,"column":44}},"10":{"start":{"line":34,"column":8},"end":{"line":34,"column":14}},"11":{"start":{"line":36,"column":8},"end":{"line":36,"column":40}},"12":{"start":{"line":37,"column":8},"end":{"line":37,"column":14}},"13":{"start":{"line":39,"column":8},"end":{"line":39,"column":132}},"14":{"start":{"line":40,"column":8},"end":{"line":40,"column":14}},"15":{"start":{"line":42,"column":4},"end":{"line":42,"column":42}},"16":{"start":{"line":43,"column":4},"end":{"line":45,"column":5}},"17":{"start":{"line":44,"column":8},"end":{"line":44,"column":111}},"18":{"start":{"line":46,"column":4},"end":{"line":49,"column":5}},"19":{"start":{"line":47,"column":8},"end":{"line":47,"column":38}},"20":{"start":{"line":48,"column":8},"end":{"line":48,"column":84}},"21":{"start":{"line":50,"column":4},"end":{"line":52,"column":5}},"22":{"start":{"line":51,"column":8},"end":{"line":51,"column":146}},"23":{"start":{"line":53,"column":4},"end":{"line":56,"column":5}},"24":{"start":{"line":54,"column":8},"end":{"line":54,"column":50}},"25":{"start":{"line":55,"column":8},"end":{"line":55,"column":42}},"26":{"start":{"line":57,"column":4},"end":{"line":57,"column":20}},"27":{"start":{"line":61,"column":1},"end":{"line":73,"column":2}},"28":{"start":{"line":62,"column":5},"end":{"line":62,"column":50}},"29":{"start":{"line":63,"column":4},"end":{"line":71,"column":5}},"30":{"start":{"line":64,"column":8},"end":{"line":64,"column":40}},"31":{"start":{"line":65,"column":8},"end":{"line":69,"column":9}},"32":{"start":{"line":66,"column":12},"end":{"line":66,"column":57}},"33":{"start":{"line":68,"column":12},"end":{"line":68,"column":59}},"34":{"start":{"line":70,"column":8},"end":{"line":70,"column":20}},"35":{"start":{"line":72,"column":4},"end":{"line":72,"column":17}},"36":{"start":{"line":75,"column":0},"end":{"line":78,"column":2}}},"branchMap":{"1":{"line":31,"type":"switch","locations":[{"start":{"line":32,"column":4},"end":{"line":34,"column":14}},{"start":{"line":35,"column":4},"end":{"line":37,"column":14}},{"start":{"line":38,"column":4},"end":{"line":40,"column":14}}]},"2":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":4},"end":{"line":43,"column":4}},{"start":{"line":43,"column":4},"end":{"line":43,"column":4}}]},"3":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":4},"end":{"line":46,"column":4}},{"start":{"line":46,"column":4},"end":{"line":46,"column":4}}]},"4":{"line":48,"type":"binary-expr","locations":[{"start":{"line":48,"column":27},"end":{"line":48,"column":64}},{"start":{"line":48,"column":69},"end":{"line":48,"column":75}},{"start":{"line":48,"column":79},"end":{"line":48,"column":83}}]},"5":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":4},"end":{"line":50,"column":4}},{"start":{"line":50,"column":4},"end":{"line":50,"column":4}}]},"6":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":4},"end":{"line":53,"column":4}},{"start":{"line":53,"column":4},"end":{"line":53,"column":4}}]},"7":{"line":63,"type":"if","locations":[{"start":{"line":63,"column":4},"end":{"line":63,"column":4}},{"start":{"line":63,"column":4},"end":{"line":63,"column":4}}]},"8":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":8},"end":{"line":65,"column":8}},{"start":{"line":65,"column":8},"end":{"line":65,"column":8}}]}},"code":["/*","   Copyright (C) 2014-2016 Christopher D. Russell","","   This library is published under the MIT License and is part of the","   Encapsule Project System in Cloud (SiC) open service architecture.","   Please follow https://twitter.com/Encapsule for news and updates","   about jsgraph and other time saving libraries that do amazing things","   with in-memory data on Node.js and HTML.","*/","","var JSType = function(reference_) {","    return Object.prototype.toString.call(reference_);","};","","/*","  request = {","      ref: reference","      types: string or array of strings (e.g. '[object Object]')","  }","  response = {","      error: null (success) or string (error)","      result: null (failure) or JSType of request.ref (success)","  }","","*/","var JSTypeInTypeSet = function(request_) {","    var response = { error: null, result: null };","    var errors = [];","    var allowedTypeSet = {};","    var jstype = JSType(request_.types);","    switch (jstype) {","    case '[object String]':","        allowedTypeSet = [ request_.types ];","        break;","    case '[object Array]':","        allowedTypeSet = request_.types;","        break;","    default:","        errors.unshift(\"Invalid request.types value type '\" + jstype + \"'. Expected either '[object String]' or '[object Array]'.\");","        break;","    }","    jstype = JSType(request_.description);","    if (jstype !== '[object String]') {","        errors.unshift(\"Invalid request.description value type '\" + jstype + \"'. Expected '[object String]'.\");","    }","    if (!errors.length) {","        jsType = JSType(request_.ref);","        response.result = (allowedTypeSet.indexOf(jsType) !== -1) && jsType || null;","    }","    if (!response.result) {","        response.guidance = request_.description + \" value type '\" + jstype + \"' is invalid. Expected one of [\" + allowedTypeSet.join(',') + \"].\";","    }","    if (errors.length) {","        errors.unshift(\"JSTypeInTypeSet failed:\");","        response.error = errors.join(' ');","    }","    return response;","","};",""," var setPropertyValueIfUndefined = function(reference_, propertyName_, valueOrFunction_) {","     var type = JSType(reference_[propertyName_]);","    if (type === '[object Undefined]') {","        type = JSType(valueOrFunction_);","        if (type !== '[object Function]') {","            reference_[propertyName_] = valueOrFunction_;","        } else {","            reference_[propertyName_] = valueOrFunction_();","        }","        return true;","    }","    return false;","};","","module.exports = {","    JSType: JSType,","    setPropertyValueIfUndefined: setPropertyValueIfUndefined","};",""],"l":{"11":1,"12":0,"26":1,"27":0,"28":0,"29":0,"30":0,"31":0,"33":0,"34":0,"36":0,"37":0,"39":0,"40":0,"42":0,"43":0,"44":0,"46":0,"47":0,"48":0,"50":0,"51":0,"53":0,"54":0,"55":0,"57":0,"61":1,"62":0,"63":0,"64":0,"65":0,"66":0,"68":0,"70":0,"72":0,"75":1}},"/home/travis/build/npmtest/node-npmtest-jsgraph/node_modules/jsgraph/src/arc_core_digraph_in_params.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsgraph/node_modules/jsgraph/src/arc_core_digraph_in_params.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":1,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":1,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":13,"loc":{"start":{"line":13,"column":30},"end":{"line":13,"column":49}}},"2":{"name":"(anonymous_2)","line":24,"loc":{"start":{"line":24,"column":31},"end":{"line":24,"column":50}}},"3":{"name":"(anonymous_3)","line":49,"loc":{"start":{"line":49,"column":28},"end":{"line":49,"column":47}}},"4":{"name":"(anonymous_4)","line":74,"loc":{"start":{"line":74,"column":29},"end":{"line":74,"column":48}}}},"statementMap":{"1":{"start":{"line":11,"column":0},"end":{"line":11,"column":55}},"2":{"start":{"line":13,"column":0},"end":{"line":22,"column":2}},"3":{"start":{"line":14,"column":4},"end":{"line":14,"column":50}},"4":{"start":{"line":15,"column":4},"end":{"line":15,"column":50}},"5":{"start":{"line":16,"column":4},"end":{"line":20,"column":5}},"6":{"start":{"line":17,"column":8},"end":{"line":17,"column":133}},"7":{"start":{"line":19,"column":8},"end":{"line":19,"column":31}},"8":{"start":{"line":21,"column":4},"end":{"line":21,"column":20}},"9":{"start":{"line":24,"column":0},"end":{"line":47,"column":2}},"10":{"start":{"line":25,"column":4},"end":{"line":25,"column":50}},"11":{"start":{"line":26,"column":4},"end":{"line":26,"column":29}},"12":{"start":{"line":27,"column":4},"end":{"line":45,"column":5}},"13":{"start":{"line":28,"column":8},"end":{"line":28,"column":28}},"14":{"start":{"line":29,"column":8},"end":{"line":29,"column":54}},"15":{"start":{"line":30,"column":8},"end":{"line":33,"column":9}},"16":{"start":{"line":31,"column":12},"end":{"line":31,"column":119}},"17":{"start":{"line":32,"column":12},"end":{"line":32,"column":18}},"18":{"start":{"line":34,"column":8},"end":{"line":34,"column":52}},"19":{"start":{"line":35,"column":8},"end":{"line":38,"column":9}},"20":{"start":{"line":36,"column":12},"end":{"line":36,"column":147}},"21":{"start":{"line":37,"column":12},"end":{"line":37,"column":18}},"22":{"start":{"line":39,"column":8},"end":{"line":39,"column":52}},"23":{"start":{"line":40,"column":8},"end":{"line":43,"column":9}},"24":{"start":{"line":41,"column":12},"end":{"line":41,"column":171}},"25":{"start":{"line":42,"column":12},"end":{"line":42,"column":18}},"26":{"start":{"line":44,"column":8},"end":{"line":44,"column":31}},"27":{"start":{"line":46,"column":4},"end":{"line":46,"column":20}},"28":{"start":{"line":49,"column":0},"end":{"line":72,"column":2}},"29":{"start":{"line":50,"column":4},"end":{"line":50,"column":50}},"30":{"start":{"line":51,"column":4},"end":{"line":51,"column":29}},"31":{"start":{"line":52,"column":4},"end":{"line":70,"column":5}},"32":{"start":{"line":53,"column":8},"end":{"line":53,"column":28}},"33":{"start":{"line":54,"column":8},"end":{"line":54,"column":54}},"34":{"start":{"line":55,"column":8},"end":{"line":58,"column":9}},"35":{"start":{"line":56,"column":12},"end":{"line":56,"column":114}},"36":{"start":{"line":57,"column":12},"end":{"line":57,"column":18}},"37":{"start":{"line":59,"column":8},"end":{"line":59,"column":52}},"38":{"start":{"line":60,"column":8},"end":{"line":63,"column":9}},"39":{"start":{"line":61,"column":12},"end":{"line":61,"column":144}},"40":{"start":{"line":62,"column":12},"end":{"line":62,"column":18}},"41":{"start":{"line":64,"column":8},"end":{"line":64,"column":52}},"42":{"start":{"line":65,"column":8},"end":{"line":68,"column":9}},"43":{"start":{"line":66,"column":12},"end":{"line":66,"column":144}},"44":{"start":{"line":67,"column":12},"end":{"line":67,"column":18}},"45":{"start":{"line":69,"column":8},"end":{"line":69,"column":31}},"46":{"start":{"line":71,"column":4},"end":{"line":71,"column":20}},"47":{"start":{"line":74,"column":0},"end":{"line":107,"column":2}},"48":{"start":{"line":75,"column":4},"end":{"line":75,"column":50}},"49":{"start":{"line":76,"column":4},"end":{"line":76,"column":29}},"50":{"start":{"line":77,"column":4},"end":{"line":105,"column":5}},"51":{"start":{"line":78,"column":8},"end":{"line":78,"column":28}},"52":{"start":{"line":79,"column":8},"end":{"line":79,"column":54}},"53":{"start":{"line":80,"column":8},"end":{"line":83,"column":9}},"54":{"start":{"line":81,"column":12},"end":{"line":81,"column":115}},"55":{"start":{"line":82,"column":12},"end":{"line":82,"column":18}},"56":{"start":{"line":84,"column":8},"end":{"line":84,"column":52}},"57":{"start":{"line":85,"column":8},"end":{"line":88,"column":9}},"58":{"start":{"line":86,"column":12},"end":{"line":86,"column":142}},"59":{"start":{"line":87,"column":12},"end":{"line":87,"column":18}},"60":{"start":{"line":89,"column":8},"end":{"line":89,"column":54}},"61":{"start":{"line":90,"column":8},"end":{"line":93,"column":9}},"62":{"start":{"line":91,"column":12},"end":{"line":91,"column":147}},"63":{"start":{"line":92,"column":12},"end":{"line":92,"column":18}},"64":{"start":{"line":94,"column":8},"end":{"line":94,"column":54}},"65":{"start":{"line":95,"column":8},"end":{"line":98,"column":9}},"66":{"start":{"line":96,"column":12},"end":{"line":96,"column":147}},"67":{"start":{"line":97,"column":12},"end":{"line":97,"column":18}},"68":{"start":{"line":99,"column":8},"end":{"line":99,"column":52}},"69":{"start":{"line":100,"column":8},"end":{"line":103,"column":9}},"70":{"start":{"line":101,"column":12},"end":{"line":101,"column":167}},"71":{"start":{"line":102,"column":12},"end":{"line":102,"column":18}},"72":{"start":{"line":104,"column":8},"end":{"line":104,"column":31}},"73":{"start":{"line":106,"column":4},"end":{"line":106,"column":20}},"74":{"start":{"line":109,"column":0},"end":{"line":114,"column":2}}},"branchMap":{"1":{"line":16,"type":"if","locations":[{"start":{"line":16,"column":4},"end":{"line":16,"column":4}},{"start":{"line":16,"column":4},"end":{"line":16,"column":4}}]},"2":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":8},"end":{"line":30,"column":8}},{"start":{"line":30,"column":8},"end":{"line":30,"column":8}}]},"3":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":8},"end":{"line":35,"column":8}},{"start":{"line":35,"column":8},"end":{"line":35,"column":8}}]},"4":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":8},"end":{"line":40,"column":8}},{"start":{"line":40,"column":8},"end":{"line":40,"column":8}}]},"5":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":8},"end":{"line":55,"column":8}},{"start":{"line":55,"column":8},"end":{"line":55,"column":8}}]},"6":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":8},"end":{"line":60,"column":8}},{"start":{"line":60,"column":8},"end":{"line":60,"column":8}}]},"7":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":8},"end":{"line":65,"column":8}},{"start":{"line":65,"column":8},"end":{"line":65,"column":8}}]},"8":{"line":80,"type":"if","locations":[{"start":{"line":80,"column":8},"end":{"line":80,"column":8}},{"start":{"line":80,"column":8},"end":{"line":80,"column":8}}]},"9":{"line":85,"type":"if","locations":[{"start":{"line":85,"column":8},"end":{"line":85,"column":8}},{"start":{"line":85,"column":8},"end":{"line":85,"column":8}}]},"10":{"line":90,"type":"if","locations":[{"start":{"line":90,"column":8},"end":{"line":90,"column":8}},{"start":{"line":90,"column":8},"end":{"line":90,"column":8}}]},"11":{"line":95,"type":"if","locations":[{"start":{"line":95,"column":8},"end":{"line":95,"column":8}},{"start":{"line":95,"column":8},"end":{"line":95,"column":8}}]},"12":{"line":100,"type":"if","locations":[{"start":{"line":100,"column":8},"end":{"line":100,"column":8}},{"start":{"line":100,"column":8},"end":{"line":100,"column":8}}]}},"code":["/*","  Copyright (C) 2014-2016 Christopher D. Russell","","  This library is published under the MIT License and is part of the","  Encapsule Project System in Cloud (SiC) open service architecture.","  Please follow https://twitter.com/Encapsule for news and updates","  about jsgraph and other time saving libraries that do amazing things","  with in-memory data on Node.js and HTML.","*/","","var helperFunctions = require('./arc_core_graph_util');","","var verifyVertexReadRequest = function(request_) {","    var response = { error: null, result: false };","    var jstype = helperFunctions.JSType(request_);","    if (jstype !== '[object String]') {","        response.error = \"Invalid value type '\" + jstype + \"' found when expecting vertex read request. Expected '[object String]'.\";","    } else {","        response.result = true;","    }","    return response;","};","","var verifyVertexWriteRequest = function(request_) {","    var response = { error: null, result: false };","    var inBreakScope = false;","    while (!inBreakScope) {","        inBreakScope = true;","        var jstype = helperFunctions.JSType(request_);","        if (jstype !== '[object Object]') {","            response.error = \"Invalid value type '\" + jstype + \"' found when expecting a vertex write request object.\";","            break;","        }","        jstype = helperFunctions.JSType(request_.u);","        if (jstype !== '[object String]') {","            response.error = \"Invalid value type '\" + jstype + \"' found looking for vertex ID string property 'u' in vertex write request object.\";","            break;","        }","        jstype = helperFunctions.JSType(request_.p);","        if (jstype === '[object Function]') {","            response.error = \"Invalid value type '\" + jstype + \" found while inspecting vertex property 'p' in vertex write request object. Must be serializable to JSON!\";","            break;","        }","        response.result = true;","    }","    return response;","};","","var verifyEdgeReadRequest = function(request_) {","    var response = { error: null, result: false };","    var inBreakScope = false;","    while (!inBreakScope) {","        inBreakScope = true;","        var jstype = helperFunctions.JSType(request_);","        if (jstype !== '[object Object]') {","            response.error = \"Invalid value type '\" + jstype + \"' found when expecting edge read request object.\";","            break;","        }","        jstype = helperFunctions.JSType(request_.u);","        if (jstype !== '[object String]') {","            response.error = \"Invalid value type '\" + jstype + \"' found looking for vertex ID string property 'u' in edge read request object.\";","            break;","        }","        jstype = helperFunctions.JSType(request_.v);","        if (jstype !== '[object String]') {","            response.error = \"Invalid value type '\" + jstype + \"' found looking for vertex ID string property 'v' in edge read request object.\";","            break;","        }","        response.result = true;","    }","    return response;","};","","var verifyEdgeWriteRequest = function(request_) {","    var response = { error: null, result: false };","    var inBreakScope = false;","    while (!inBreakScope) {","        inBreakScope = true;","        var jstype = helperFunctions.JSType(request_);","        if (jstype !== '[object Object]') {","            response.error = \"Invalid value type '\" + jstype + \"' found when expecting edge write request object.\";","            break;","        }","        jstype = helperFunctions.JSType(request_.e);","        if (jstype !== '[object Object]') {","            response.error = \"Invalid value type '\" + jstype + \"' found looking for edge descriptor object 'e' in edge write request object.\";","            break;","        }","        jstype = helperFunctions.JSType(request_.e.u);","        if (jstype !== '[object String]') {","            response.error = \"Invalid value type '\" + jstype + \"' found looking for vertex ID string property 'e.u' in edge write request object.\";","            break;","        }","        jstype = helperFunctions.JSType(request_.e.v);","        if (jstype !== '[object String]') {","            response.error = \"Invalid value type '\" + jstype + \"' found looking for vertex ID string property 'e.v' in edge write request object.\";","            break;","        }","        jstype = helperFunctions.JSType(request_.p);","        if (jstype === '[object Function]') {","            response.error = \"Invalid value type '\" + jstype + \"' found while insecting edge property 'p' in edge write request object. Must be serializable to JSON!\";","            break;","        }","        response.result = true;","    }","    return response;","};","","module.exports = {","    verifyVertexReadRequest: verifyVertexReadRequest,","    verifyVertexWriteRequest: verifyVertexWriteRequest,","    verifyEdgeReadRequest: verifyEdgeReadRequest,","    verifyEdgeWriteRequest: verifyEdgeWriteRequest","};",""],"l":{"11":1,"13":1,"14":0,"15":0,"16":0,"17":0,"19":0,"21":0,"24":1,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"34":0,"35":0,"36":0,"37":0,"39":0,"40":0,"41":0,"42":0,"44":0,"46":0,"49":1,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"59":0,"60":0,"61":0,"62":0,"64":0,"65":0,"66":0,"67":0,"69":0,"71":0,"74":1,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"84":0,"85":0,"86":0,"87":0,"89":0,"90":0,"91":0,"92":0,"94":0,"95":0,"96":0,"97":0,"99":0,"100":0,"101":0,"102":0,"104":0,"106":0,"109":1}},"/home/travis/build/npmtest/node-npmtest-jsgraph/node_modules/jsgraph/src/arc_core_digraph_import.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsgraph/node_modules/jsgraph/src/arc_core_digraph_import.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0,0],"8":[0,0],"9":[0,0],"10":[0,0,0],"11":[0,0,0],"12":[0,0,0],"13":[0,0],"14":[0,0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":11,"loc":{"start":{"line":11,"column":17},"end":{"line":11,"column":52}}},"2":{"name":"(anonymous_2)","line":14,"loc":{"start":{"line":14,"column":18},"end":{"line":14,"column":33}}},"3":{"name":"(anonymous_3)","line":19,"loc":{"start":{"line":19,"column":24},"end":{"line":19,"column":52}}},"4":{"name":"(anonymous_4)","line":33,"loc":{"start":{"line":33,"column":22},"end":{"line":33,"column":49}}}},"statementMap":{"1":{"start":{"line":11,"column":0},"end":{"line":162,"column":2}},"2":{"start":{"line":13,"column":4},"end":{"line":13,"column":18}},"3":{"start":{"line":14,"column":4},"end":{"line":14,"column":82}},"4":{"start":{"line":14,"column":35},"end":{"line":14,"column":79}},"5":{"start":{"line":15,"column":4},"end":{"line":15,"column":49}},"6":{"start":{"line":16,"column":4},"end":{"line":16,"column":20}},"7":{"start":{"line":17,"column":4},"end":{"line":17,"column":29}},"8":{"start":{"line":19,"column":4},"end":{"line":31,"column":6}},"9":{"start":{"line":20,"column":8},"end":{"line":20,"column":42}},"10":{"start":{"line":21,"column":8},"end":{"line":30,"column":9}},"11":{"start":{"line":22,"column":12},"end":{"line":22,"column":137}},"12":{"start":{"line":24,"column":12},"end":{"line":24,"column":48}},"13":{"start":{"line":25,"column":12},"end":{"line":29,"column":13}},"14":{"start":{"line":26,"column":16},"end":{"line":26,"column":145}},"15":{"start":{"line":28,"column":16},"end":{"line":28,"column":86}},"16":{"start":{"line":33,"column":4},"end":{"line":55,"column":6}},"17":{"start":{"line":34,"column":8},"end":{"line":34,"column":40}},"18":{"start":{"line":35,"column":8},"end":{"line":54,"column":9}},"19":{"start":{"line":36,"column":12},"end":{"line":36,"column":135}},"20":{"start":{"line":38,"column":12},"end":{"line":38,"column":46}},"21":{"start":{"line":39,"column":12},"end":{"line":53,"column":13}},"22":{"start":{"line":40,"column":16},"end":{"line":40,"column":158}},"23":{"start":{"line":42,"column":16},"end":{"line":42,"column":52}},"24":{"start":{"line":43,"column":16},"end":{"line":52,"column":17}},"25":{"start":{"line":44,"column":20},"end":{"line":44,"column":149}},"26":{"start":{"line":46,"column":20},"end":{"line":46,"column":56}},"27":{"start":{"line":47,"column":20},"end":{"line":51,"column":21}},"28":{"start":{"line":48,"column":24},"end":{"line":48,"column":153}},"29":{"start":{"line":50,"column":24},"end":{"line":50,"column":88}},"30":{"start":{"line":57,"column":4},"end":{"line":152,"column":5}},"31":{"start":{"line":58,"column":8},"end":{"line":58,"column":28}},"32":{"start":{"line":60,"column":8},"end":{"line":60,"column":42}},"33":{"start":{"line":61,"column":8},"end":{"line":74,"column":9}},"34":{"start":{"line":63,"column":12},"end":{"line":67,"column":13}},"35":{"start":{"line":64,"column":16},"end":{"line":64,"column":54}},"36":{"start":{"line":66,"column":16},"end":{"line":66,"column":95}},"37":{"start":{"line":68,"column":12},"end":{"line":68,"column":18}},"38":{"start":{"line":70,"column":12},"end":{"line":70,"column":38}},"39":{"start":{"line":71,"column":12},"end":{"line":71,"column":18}},"40":{"start":{"line":73,"column":12},"end":{"line":73,"column":132}},"41":{"start":{"line":75,"column":8},"end":{"line":77,"column":9}},"42":{"start":{"line":76,"column":12},"end":{"line":76,"column":18}},"43":{"start":{"line":79,"column":8},"end":{"line":79,"column":34}},"44":{"start":{"line":80,"column":8},"end":{"line":83,"column":9}},"45":{"start":{"line":81,"column":12},"end":{"line":81,"column":104}},"46":{"start":{"line":82,"column":12},"end":{"line":82,"column":18}},"47":{"start":{"line":85,"column":8},"end":{"line":85,"column":39}},"48":{"start":{"line":86,"column":8},"end":{"line":95,"column":9}},"49":{"start":{"line":88,"column":12},"end":{"line":88,"column":32}},"50":{"start":{"line":89,"column":12},"end":{"line":89,"column":18}},"51":{"start":{"line":91,"column":12},"end":{"line":91,"column":18}},"52":{"start":{"line":93,"column":12},"end":{"line":93,"column":109}},"53":{"start":{"line":94,"column":12},"end":{"line":94,"column":18}},"54":{"start":{"line":96,"column":8},"end":{"line":96,"column":46}},"55":{"start":{"line":98,"column":8},"end":{"line":98,"column":46}},"56":{"start":{"line":99,"column":8},"end":{"line":108,"column":9}},"57":{"start":{"line":101,"column":12},"end":{"line":101,"column":39}},"58":{"start":{"line":102,"column":12},"end":{"line":102,"column":18}},"59":{"start":{"line":104,"column":12},"end":{"line":104,"column":18}},"60":{"start":{"line":106,"column":12},"end":{"line":106,"column":115}},"61":{"start":{"line":107,"column":12},"end":{"line":107,"column":18}},"62":{"start":{"line":109,"column":8},"end":{"line":109,"column":60}},"63":{"start":{"line":111,"column":8},"end":{"line":111,"column":40}},"64":{"start":{"line":112,"column":8},"end":{"line":122,"column":9}},"65":{"start":{"line":114,"column":12},"end":{"line":114,"column":33}},"66":{"start":{"line":115,"column":12},"end":{"line":115,"column":18}},"67":{"start":{"line":118,"column":12},"end":{"line":118,"column":18}},"68":{"start":{"line":120,"column":12},"end":{"line":120,"column":121}},"69":{"start":{"line":121,"column":12},"end":{"line":121,"column":18}},"70":{"start":{"line":123,"column":8},"end":{"line":125,"column":9}},"71":{"start":{"line":124,"column":12},"end":{"line":124,"column":18}},"72":{"start":{"line":127,"column":8},"end":{"line":127,"column":40}},"73":{"start":{"line":128,"column":8},"end":{"line":137,"column":9}},"74":{"start":{"line":130,"column":12},"end":{"line":130,"column":33}},"75":{"start":{"line":131,"column":12},"end":{"line":131,"column":18}},"76":{"start":{"line":134,"column":12},"end":{"line":134,"column":18}},"77":{"start":{"line":136,"column":12},"end":{"line":136,"column":118}},"78":{"start":{"line":138,"column":8},"end":{"line":140,"column":9}},"79":{"start":{"line":139,"column":12},"end":{"line":139,"column":18}},"80":{"start":{"line":142,"column":8},"end":{"line":142,"column":47}},"81":{"start":{"line":143,"column":8},"end":{"line":145,"column":9}},"82":{"start":{"line":144,"column":12},"end":{"line":144,"column":18}},"83":{"start":{"line":147,"column":8},"end":{"line":147,"column":45}},"84":{"start":{"line":148,"column":8},"end":{"line":150,"column":9}},"85":{"start":{"line":149,"column":12},"end":{"line":149,"column":18}},"86":{"start":{"line":154,"column":4},"end":{"line":158,"column":5}},"87":{"start":{"line":155,"column":8},"end":{"line":155,"column":42}},"88":{"start":{"line":157,"column":8},"end":{"line":157,"column":31}},"89":{"start":{"line":160,"column":4},"end":{"line":160,"column":20}}},"branchMap":{"1":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":8},"end":{"line":21,"column":8}},{"start":{"line":21,"column":8},"end":{"line":21,"column":8}}]},"2":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":12},"end":{"line":25,"column":12}},{"start":{"line":25,"column":12},"end":{"line":25,"column":12}}]},"3":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":8},"end":{"line":35,"column":8}},{"start":{"line":35,"column":8},"end":{"line":35,"column":8}}]},"4":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":12},"end":{"line":39,"column":12}},{"start":{"line":39,"column":12},"end":{"line":39,"column":12}}]},"5":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":16},"end":{"line":43,"column":16}},{"start":{"line":43,"column":16},"end":{"line":43,"column":16}}]},"6":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":20},"end":{"line":47,"column":20}},{"start":{"line":47,"column":20},"end":{"line":47,"column":20}}]},"7":{"line":61,"type":"switch","locations":[{"start":{"line":62,"column":8},"end":{"line":68,"column":18}},{"start":{"line":69,"column":8},"end":{"line":71,"column":18}},{"start":{"line":72,"column":8},"end":{"line":73,"column":132}}]},"8":{"line":75,"type":"if","locations":[{"start":{"line":75,"column":8},"end":{"line":75,"column":8}},{"start":{"line":75,"column":8},"end":{"line":75,"column":8}}]},"9":{"line":80,"type":"if","locations":[{"start":{"line":80,"column":8},"end":{"line":80,"column":8}},{"start":{"line":80,"column":8},"end":{"line":80,"column":8}}]},"10":{"line":86,"type":"switch","locations":[{"start":{"line":87,"column":8},"end":{"line":89,"column":18}},{"start":{"line":90,"column":8},"end":{"line":91,"column":18}},{"start":{"line":92,"column":8},"end":{"line":94,"column":18}}]},"11":{"line":99,"type":"switch","locations":[{"start":{"line":100,"column":8},"end":{"line":102,"column":18}},{"start":{"line":103,"column":8},"end":{"line":104,"column":18}},{"start":{"line":105,"column":8},"end":{"line":107,"column":18}}]},"12":{"line":112,"type":"switch","locations":[{"start":{"line":113,"column":8},"end":{"line":115,"column":18}},{"start":{"line":116,"column":8},"end":{"line":118,"column":18}},{"start":{"line":119,"column":8},"end":{"line":121,"column":18}}]},"13":{"line":123,"type":"if","locations":[{"start":{"line":123,"column":8},"end":{"line":123,"column":8}},{"start":{"line":123,"column":8},"end":{"line":123,"column":8}}]},"14":{"line":128,"type":"switch","locations":[{"start":{"line":129,"column":8},"end":{"line":131,"column":18}},{"start":{"line":132,"column":8},"end":{"line":134,"column":18}},{"start":{"line":135,"column":8},"end":{"line":136,"column":118}}]},"15":{"line":138,"type":"if","locations":[{"start":{"line":138,"column":8},"end":{"line":138,"column":8}},{"start":{"line":138,"column":8},"end":{"line":138,"column":8}}]},"16":{"line":143,"type":"if","locations":[{"start":{"line":143,"column":8},"end":{"line":143,"column":8}},{"start":{"line":143,"column":8},"end":{"line":143,"column":8}}]},"17":{"line":148,"type":"if","locations":[{"start":{"line":148,"column":8},"end":{"line":148,"column":8}},{"start":{"line":148,"column":8},"end":{"line":148,"column":8}}]},"18":{"line":154,"type":"if","locations":[{"start":{"line":154,"column":4},"end":{"line":154,"column":4}},{"start":{"line":154,"column":4},"end":{"line":154,"column":4}}]}},"code":["/*","  Copyright (C) 2014-2016 Christopher D. Russell","","  This library is published under the MIT License and is part of the","  Encapsule Project System in Cloud (SiC) open service architecture.","  Please follow https://twitter.com/Encapsule for news and updates","  about jsgraph and other time saving libraries that do amazing things","  with in-memory data on Node.js and HTML.","*/","","module.exports = function (digraph_, jsonOrObject_) {","","    var jsonParse;","    var getType = function(ref_) { return Object.prototype.toString.call(ref_); };","    var response = { error: null, result: null };","    var errors = [];","    var inBreakScope = false;","","    var processVertex = function(vertexDescriptor_) {","        type = getType(vertexDescriptor_);","        if (type !== '[object Object]') {","            errors.unshift(\"JSON semantics error: Expected vertex descriptor object in 'vlist' array but found '\" + type + \"' instead.\");","        } else {","            type = getType(vertexDescriptor_.u);","            if (type !== '[object String]') {","                errors.unshift(\"JSON semantics error: Expected vertex descriptor property 'u' to be a string but found '\" + type + \"' instead.\");","            } else {","                digraph_.addVertex({ u: vertexDescriptor_.u, p: vertexDescriptor_.p});","            }","        }","    };","","    var processEdge = function (edgeDescriptor_) {","        type = getType(edgeDescriptor_);","        if (type !== '[object Object]') {","            errors.unshift(\"JSON semantics error: Expected edge descriptor object in 'elist' array but found '\" + type + \"' instead.\");","        } else {","            type = getType(edgeDescriptor_.e);","            if (type !== '[object Object]') {","                errors.unshift(\"JSON semantics error: Edge record in 'elist' should define edge descriptor object 'e' but but found '\" + type + \"' instead.\");","            } else {","                type = getType(edgeDescriptor_.e.u);","                if (type !== '[object String]') {","                    errors.unshift(\"JSON semantics error: Expected edge descriptor property 'e.u' to be a string but found '\" + type + \"' instead.\");","                } else {","                    type = getType(edgeDescriptor_.e.v);","                    if (type !== '[object String]') {","                        errors.unshift(\"JSON semantics error: Expected edge descriptor property 'e.v' to be a string but found '\" + type + \"' instead.\");","                    } else {","                        digraph_.addEdge({ e: edgeDescriptor_.e, p: edgeDescriptor_.p});","                    }","                }","            }","        }","    };","","    while (!inBreakScope) {","        inBreakScope = true;","","        var type = getType(jsonOrObject_);","        switch (type) {","        case '[object String]':","            try {","                jsonParse = JSON.parse(jsonOrObject_);","            } catch (exception_) {","                errors.unshift(\"Exception occurred while parsing JSON: \" + exception_.message);","            }","            break;","        case '[object Object]':","            jsonParse = jsonOrObject_;","            break;","        default:","            errors.unshift(\"Invalid reference to '\" + type + \"' passed instead of expected JSON (or equivalent object) reference.\");","        }","        if (errors.length) {","            break;","        }","","        type = getType(jsonParse);","        if (type !== '[object Object]') {","            errors.unshift(\"JSON semantics error: Expected top-level object but found '\" + type + \"'.\");","            break;","        }","","        type = getType(jsonParse.name);","        switch (type) {","        case '[object Undefined]':","            jsonParse.name = \"\";","            break;","        case '[object String]':","            break;","        default:","            errors.unshift(\"JSON semantics error: Expected 'name' to be a string but found '\" + type + \"'.\");","            break;","        }","        digraph_.setGraphName(jsonParse.name);","        ","        type = getType(jsonParse.description);","        switch (type) {","        case '[object Undefined]':","            jsonParse.description = \"\";","            break;","        case '[object String]':","            break;","        default:","            error.unshift(\"JSON semantics error: Expected 'description' to be a string but found '\" + type + \"'.\");","            break;","        }","        digraph_.setGraphDescription(jsonParse.description);","            ","        type = getType(jsonParse.vlist);","        switch (type) {","        case '[object Undefined]':","            jsonParse.vlist = []; // default to empty vertex list","            break;","        case '[object Array]':","            // do nothing the array is parsed below","            break;","        default:","            errors.unshift(\"JSON semantics error: Expected 'vlist' (vertices) to be an array but found '\" + type + \"'.\");","            break;","        }","        if (errors.length) {","            break;","        }","","        type = getType(jsonParse.elist);","        switch (type) {","        case '[object Undefined]':","            jsonParse.elist = []; // default to empty edge list","            break;","        case '[object Array]':","            // do nothing","            break;","        default:","            errors.unshift(\"JSON semantics error: Expected 'elist' (edges) to be an array but found '\" + type + \"'.\");","        }","        if (errors.length) {","            break;","        }","","        jsonParse.vlist.forEach(processVertex);","        if (errors.length) {","            break;","        }","","        jsonParse.elist.forEach(processEdge);","        if (errors.length) {","            break;","        }","","    } // while !inBreakScope","","    if (errors.length) {","        response.error = errors.join(' ');","    } else {","        response.result = true;","    }","","    return response;","","};",""],"l":{"11":1,"13":0,"14":0,"15":0,"16":0,"17":0,"19":0,"20":0,"21":0,"22":0,"24":0,"25":0,"26":0,"28":0,"33":0,"34":0,"35":0,"36":0,"38":0,"39":0,"40":0,"42":0,"43":0,"44":0,"46":0,"47":0,"48":0,"50":0,"57":0,"58":0,"60":0,"61":0,"63":0,"64":0,"66":0,"68":0,"70":0,"71":0,"73":0,"75":0,"76":0,"79":0,"80":0,"81":0,"82":0,"85":0,"86":0,"88":0,"89":0,"91":0,"93":0,"94":0,"96":0,"98":0,"99":0,"101":0,"102":0,"104":0,"106":0,"107":0,"109":0,"111":0,"112":0,"114":0,"115":0,"118":0,"120":0,"121":0,"123":0,"124":0,"127":0,"128":0,"130":0,"131":0,"134":0,"136":0,"138":0,"139":0,"142":0,"143":0,"144":0,"147":0,"148":0,"149":0,"154":0,"155":0,"157":0,"160":0}},"/home/travis/build/npmtest/node-npmtest-jsgraph/node_modules/jsgraph/src/arc_core_digraph_export.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsgraph/node_modules/jsgraph/src/arc_core_digraph_export.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":1,"21":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":20,"loc":{"start":{"line":20,"column":35},"end":{"line":20,"column":55}}},"2":{"name":"(anonymous_2)","line":30,"loc":{"start":{"line":30,"column":32},"end":{"line":30,"column":48}}},"3":{"name":"(anonymous_3)","line":35,"loc":{"start":{"line":35,"column":35},"end":{"line":35,"column":55}}},"4":{"name":"(anonymous_4)","line":51,"loc":{"start":{"line":51,"column":33},"end":{"line":51,"column":72}}}},"statementMap":{"1":{"start":{"line":17,"column":0},"end":{"line":17,"column":55}},"2":{"start":{"line":18,"column":0},"end":{"line":18,"column":46}},"3":{"start":{"line":20,"column":0},"end":{"line":49,"column":2}},"4":{"start":{"line":21,"column":4},"end":{"line":26,"column":6}},"5":{"start":{"line":27,"column":4},"end":{"line":27,"column":30}},"6":{"start":{"line":28,"column":4},"end":{"line":28,"column":39}},"7":{"start":{"line":29,"column":4},"end":{"line":29,"column":44}},"8":{"start":{"line":30,"column":4},"end":{"line":34,"column":7}},"9":{"start":{"line":31,"column":8},"end":{"line":31,"column":59}},"10":{"start":{"line":32,"column":8},"end":{"line":32,"column":63}},"11":{"start":{"line":33,"column":8},"end":{"line":33,"column":69}},"12":{"start":{"line":35,"column":4},"end":{"line":47,"column":7}},"13":{"start":{"line":36,"column":8},"end":{"line":36,"column":67}},"14":{"start":{"line":37,"column":8},"end":{"line":37,"column":60}},"15":{"start":{"line":39,"column":8},"end":{"line":46,"column":9}},"16":{"start":{"line":40,"column":12},"end":{"line":40,"column":73}},"17":{"start":{"line":43,"column":12},"end":{"line":45,"column":13}},"18":{"start":{"line":44,"column":16},"end":{"line":44,"column":58}},"19":{"start":{"line":48,"column":4},"end":{"line":48,"column":24}},"20":{"start":{"line":51,"column":0},"end":{"line":53,"column":2}},"21":{"start":{"line":52,"column":4},"end":{"line":52,"column":89}}},"branchMap":{"1":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":8},"end":{"line":39,"column":8}},{"start":{"line":39,"column":8},"end":{"line":39,"column":8}}]},"2":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":12},"end":{"line":43,"column":12}},{"start":{"line":43,"column":12},"end":{"line":43,"column":12}}]}},"code":["/*","  Copyright (C) 2014-2016 Christopher D. Russell","","  This library is published under the MIT License and is part of the","  Encapsule Project System in Cloud (SiC) open service architecture.","  Please follow https://twitter.com/Encapsule for news and updates","  about jsgraph and other time saving libraries that do amazing things","  with in-memory data on Node.js and HTML.","*/","","// Export the topology and attached vertex and edge properties","// of a DirectedGraph container object as a JSON-format UTF8 ","// string. This canonical format can be passed as an optional","// constructor parameter to restore container state across","// execution contexts.","","var helperFunctions = require('./arc_core_graph_util');","var DigraphDataExporter = module.exports = {};","","DigraphDataExporter.exportObject = function (digraph_) {","    var digraphState = {","        name: digraph_.getGraphName(),","        description: digraph_.getGraphDescription(),","        vlist: [],","        elist: []","    };","    var vertexSerialized = {}; // Keep track of the vertices referenced in the edge list.","    var edgeList = digraph_.getEdges();","    var vertexList = digraph_.getVertices();","    digraph_.getEdges().forEach(function(edge_) {","        var edgeProperty = digraph_.getEdgeProperty(edge_);","        digraphState.elist.push({ e: edge_, p: edgeProperty });","        vertexSerialized[edge_.u] = vertexSerialized[edge_.v] = true;","    });","    digraph_.getVertices().forEach(function(vertexId_) {","        var vertexProperty = digraph_.getVertexProperty(vertexId_);","        var jstype = helperFunctions.JSType(vertexProperty);","        // If the vertex has an attached property, serialize it to the vlist.","        if (jstype !== '[object Undefined]') {","            digraphState.vlist.push({ u: vertexId_, p: vertexProperty });","        } else {","            // If the vertex wasn't mentioned in the elist, we need to serialize, sans property, to the vlist.","            if (vertexSerialized[vertexId_] !== true) {","                digraphState.vlist.push({ u: vertexId_ });","            }","        }","    });","    return digraphState;","};","","DigraphDataExporter.exportJSON = function (digraph_, replacer_, space_) {","    return JSON.stringify(DigraphDataExporter.exportObject(digraph_), replacer_, space_);","};",""],"l":{"17":1,"18":1,"20":1,"21":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"35":0,"36":0,"37":0,"39":0,"40":0,"43":0,"44":0,"48":0,"51":1,"52":0}},"/home/travis/build/npmtest/node-npmtest-jsgraph/node_modules/jsgraph/src/arc_core_digraph_algorithm_transpose.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsgraph/node_modules/jsgraph/src/arc_core_digraph_algorithm_transpose.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":30,"loc":{"start":{"line":30,"column":17},"end":{"line":30,"column":37}}},"2":{"name":"(anonymous_2)","line":42,"loc":{"start":{"line":42,"column":39},"end":{"line":42,"column":59}}},"3":{"name":"(anonymous_3)","line":49,"loc":{"start":{"line":49,"column":36},"end":{"line":49,"column":52}}}},"statementMap":{"1":{"start":{"line":16,"column":0},"end":{"line":16,"column":55}},"2":{"start":{"line":17,"column":0},"end":{"line":17,"column":64}},"3":{"start":{"line":30,"column":0},"end":{"line":65,"column":2}},"4":{"start":{"line":31,"column":4},"end":{"line":31,"column":49}},"5":{"start":{"line":32,"column":4},"end":{"line":32,"column":20}},"6":{"start":{"line":33,"column":4},"end":{"line":33,"column":22}},"7":{"start":{"line":35,"column":4},"end":{"line":35,"column":41}},"8":{"start":{"line":37,"column":4},"end":{"line":37,"column":50}},"9":{"start":{"line":38,"column":4},"end":{"line":56,"column":5}},"10":{"start":{"line":39,"column":8},"end":{"line":39,"column":95}},"11":{"start":{"line":42,"column":8},"end":{"line":47,"column":11}},"12":{"start":{"line":43,"column":12},"end":{"line":43,"column":109}},"13":{"start":{"line":44,"column":12},"end":{"line":46,"column":13}},"14":{"start":{"line":45,"column":16},"end":{"line":45,"column":52}},"15":{"start":{"line":49,"column":8},"end":{"line":54,"column":11}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":118}},"17":{"start":{"line":51,"column":12},"end":{"line":53,"column":13}},"18":{"start":{"line":52,"column":16},"end":{"line":52,"column":52}},"19":{"start":{"line":58,"column":4},"end":{"line":63,"column":5}},"20":{"start":{"line":59,"column":8},"end":{"line":59,"column":61}},"21":{"start":{"line":60,"column":8},"end":{"line":60,"column":42}},"22":{"start":{"line":62,"column":8},"end":{"line":62,"column":37}},"23":{"start":{"line":64,"column":4},"end":{"line":64,"column":20}}},"branchMap":{"1":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":4},"end":{"line":38,"column":4}},{"start":{"line":38,"column":4},"end":{"line":38,"column":4}}]},"2":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":12},"end":{"line":44,"column":12}},{"start":{"line":44,"column":12},"end":{"line":44,"column":12}}]},"3":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":12},"end":{"line":51,"column":12}},{"start":{"line":51,"column":12},"end":{"line":51,"column":12}}]},"4":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":4},"end":{"line":58,"column":4}},{"start":{"line":58,"column":4},"end":{"line":58,"column":4}}]}},"code":["/*","  Copyright (C) 2014-2016 Christopher D. Russell","","  This library is published under the MIT License and is part of the","  Encapsule Project System in Cloud (SiC) open service architecture.","  Please follow https://twitter.com/Encapsule for news and updates","  about jsgraph and other time saving libraries that do amazing things","  with in-memory data on Node.js and HTML.","*/","","// transposeDirectedGraph computes the transpose of input digraph_,","// returns the the result as a new DirectedGraph instance.","// More info on directed graph transposition:","// http://www.boost.org/doc/libs/1_55_0/libs/graph/doc/transpose_graph.html","","var helperFunctions = require('./arc_core_graph_util');","var DirectedGraph = require('./arc_core_digraph').DirectedGraph;","","/*","  request = DirectedGraph reference","  response = {","      error: null or string explaining why result is null","      result: a new DirectedGraph instance with the same vertex set,","              the edge set transposed (direction reversed), and vertex","              and edge properties (if any) linked by reference to the","              source digraph","  }","*/","","module.exports = function (digraph_) {","    var response = { error: null, result: null };","    var errors = [];","    var innerResponse;","","    var digraphOut = new DirectedGraph();","","    var jstype = helperFunctions.JSType(digraph_);","    if (jstype !== '[object Object]') {","        errors.unshift(\"Expected reference to DirectedGraph but found type '\" + jstype + \"'.\");","    } else {","        ","        digraph_.getVertices().forEach(function(vertexId_) {","            innerResponse = digraphOut.addVertex({ u: vertexId_, p: digraph_.getVertexProperty(vertexId_) });","            if (innerResponse.error) {","                errors.unshift(innerResponse.error);","            }","        });","","        digraph_.getEdges().forEach(function(edge_) {","            innerResponse = digraphOut.addEdge({ e: { u: edge_.v, v: edge_.u }, p: digraph_.getEdgeProperty(edge_) });","            if (innerResponse.error) {","                errors.unshift(innerResponse.error);","            }","        });","","    } // end else","","    if (errors.length) {","        errors.unshift(\"jsgraph.directed.transpose failed:\");","        response.error = errors.join(' ');","    } else {","        response.result = digraphOut;","    }","    return response;","};","",""],"l":{"16":1,"17":1,"30":1,"31":0,"32":0,"33":0,"35":0,"37":0,"38":0,"39":0,"42":0,"43":0,"44":0,"45":0,"49":0,"50":0,"51":0,"52":0,"58":0,"59":0,"60":0,"62":0,"64":0}},"/home/travis/build/npmtest/node-npmtest-jsgraph/node_modules/jsgraph/src/arc_core_digraph_algorithm_bft.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsgraph/node_modules/jsgraph/src/arc_core_digraph_algorithm_bft.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0,0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":61,"loc":{"start":{"line":61,"column":17},"end":{"line":61,"column":37}}}},"statementMap":{"1":{"start":{"line":55,"column":0},"end":{"line":55,"column":26}},"2":{"start":{"line":56,"column":0},"end":{"line":56,"column":60}},"3":{"start":{"line":57,"column":0},"end":{"line":57,"column":68}},"4":{"start":{"line":58,"column":0},"end":{"line":58,"column":71}},"5":{"start":{"line":61,"column":0},"end":{"line":299,"column":2}},"6":{"start":{"line":63,"column":4},"end":{"line":63,"column":24}},"7":{"start":{"line":64,"column":4},"end":{"line":64,"column":49}},"8":{"start":{"line":65,"column":4},"end":{"line":65,"column":20}},"9":{"start":{"line":66,"column":4},"end":{"line":66,"column":30}},"10":{"start":{"line":67,"column":4},"end":{"line":67,"column":29}},"11":{"start":{"line":68,"column":4},"end":{"line":68,"column":25}},"12":{"start":{"line":70,"column":4},"end":{"line":286,"column":5}},"13":{"start":{"line":71,"column":8},"end":{"line":71,"column":28}},"14":{"start":{"line":72,"column":8},"end":{"line":72,"column":28}},"15":{"start":{"line":74,"column":8},"end":{"line":74,"column":55}},"16":{"start":{"line":75,"column":8},"end":{"line":78,"column":9}},"17":{"start":{"line":76,"column":12},"end":{"line":76,"column":48}},"18":{"start":{"line":77,"column":12},"end":{"line":77,"column":18}},"19":{"start":{"line":79,"column":8},"end":{"line":79,"column":40}},"20":{"start":{"line":82,"column":8},"end":{"line":94,"column":9}},"21":{"start":{"line":83,"column":12},"end":{"line":93,"column":13}},"22":{"start":{"line":84,"column":16},"end":{"line":84,"column":179}},"23":{"start":{"line":85,"column":16},"end":{"line":88,"column":17}},"24":{"start":{"line":86,"column":20},"end":{"line":86,"column":56}},"25":{"start":{"line":87,"column":20},"end":{"line":87,"column":26}},"26":{"start":{"line":89,"column":16},"end":{"line":89,"column":54}},"27":{"start":{"line":90,"column":16},"end":{"line":92,"column":17}},"28":{"start":{"line":91,"column":20},"end":{"line":91,"column":26}},"29":{"start":{"line":96,"column":8},"end":{"line":96,"column":65}},"30":{"start":{"line":98,"column":8},"end":{"line":100,"column":9}},"31":{"start":{"line":99,"column":12},"end":{"line":99,"column":18}},"32":{"start":{"line":105,"column":8},"end":{"line":155,"column":9}},"33":{"start":{"line":106,"column":12},"end":{"line":106,"column":71}},"34":{"start":{"line":108,"column":12},"end":{"line":111,"column":13}},"35":{"start":{"line":109,"column":16},"end":{"line":109,"column":136}},"36":{"start":{"line":110,"column":16},"end":{"line":110,"column":22}},"37":{"start":{"line":113,"column":12},"end":{"line":116,"column":13}},"38":{"start":{"line":114,"column":16},"end":{"line":114,"column":124}},"39":{"start":{"line":115,"column":16},"end":{"line":115,"column":22}},"40":{"start":{"line":119,"column":12},"end":{"line":126,"column":13}},"41":{"start":{"line":120,"column":16},"end":{"line":120,"column":182}},"42":{"start":{"line":121,"column":16},"end":{"line":124,"column":17}},"43":{"start":{"line":122,"column":20},"end":{"line":122,"column":56}},"44":{"start":{"line":123,"column":20},"end":{"line":123,"column":26}},"45":{"start":{"line":125,"column":16},"end":{"line":125,"column":54}},"46":{"start":{"line":129,"column":12},"end":{"line":131,"column":13}},"47":{"start":{"line":130,"column":16},"end":{"line":130,"column":22}},"48":{"start":{"line":134,"column":12},"end":{"line":134,"column":181}},"49":{"start":{"line":135,"column":12},"end":{"line":138,"column":13}},"50":{"start":{"line":136,"column":16},"end":{"line":136,"column":52}},"51":{"start":{"line":137,"column":16},"end":{"line":137,"column":22}},"52":{"start":{"line":139,"column":12},"end":{"line":139,"column":50}},"53":{"start":{"line":142,"column":12},"end":{"line":142,"column":86}},"54":{"start":{"line":145,"column":12},"end":{"line":145,"column":47}},"55":{"start":{"line":148,"column":12},"end":{"line":148,"column":86}},"56":{"start":{"line":151,"column":12},"end":{"line":153,"column":13}},"57":{"start":{"line":152,"column":16},"end":{"line":152,"column":22}},"58":{"start":{"line":158,"column":8},"end":{"line":284,"column":9}},"59":{"start":{"line":160,"column":12},"end":{"line":160,"column":43}},"60":{"start":{"line":163,"column":12},"end":{"line":163,"column":79}},"61":{"start":{"line":166,"column":12},"end":{"line":166,"column":172}},"62":{"start":{"line":167,"column":12},"end":{"line":170,"column":13}},"63":{"start":{"line":168,"column":16},"end":{"line":168,"column":52}},"64":{"start":{"line":169,"column":16},"end":{"line":169,"column":22}},"65":{"start":{"line":171,"column":12},"end":{"line":171,"column":50}},"66":{"start":{"line":172,"column":12},"end":{"line":174,"column":13}},"67":{"start":{"line":173,"column":16},"end":{"line":173,"column":22}},"68":{"start":{"line":176,"column":12},"end":{"line":176,"column":63}},"69":{"start":{"line":178,"column":12},"end":{"line":267,"column":13}},"70":{"start":{"line":180,"column":16},"end":{"line":180,"column":46}},"71":{"start":{"line":183,"column":16},"end":{"line":183,"column":173}},"72":{"start":{"line":184,"column":16},"end":{"line":187,"column":17}},"73":{"start":{"line":185,"column":20},"end":{"line":185,"column":56}},"74":{"start":{"line":186,"column":20},"end":{"line":186,"column":26}},"75":{"start":{"line":188,"column":16},"end":{"line":188,"column":54}},"76":{"start":{"line":189,"column":16},"end":{"line":191,"column":17}},"77":{"start":{"line":190,"column":20},"end":{"line":190,"column":26}},"78":{"start":{"line":193,"column":16},"end":{"line":193,"column":82}},"79":{"start":{"line":194,"column":16},"end":{"line":261,"column":17}},"80":{"start":{"line":198,"column":20},"end":{"line":198,"column":182}},"81":{"start":{"line":199,"column":20},"end":{"line":202,"column":21}},"82":{"start":{"line":200,"column":24},"end":{"line":200,"column":60}},"83":{"start":{"line":201,"column":24},"end":{"line":201,"column":30}},"84":{"start":{"line":203,"column":20},"end":{"line":203,"column":58}},"85":{"start":{"line":204,"column":20},"end":{"line":204,"column":87}},"86":{"start":{"line":205,"column":20},"end":{"line":207,"column":21}},"87":{"start":{"line":206,"column":24},"end":{"line":206,"column":30}},"88":{"start":{"line":209,"column":20},"end":{"line":209,"column":174}},"89":{"start":{"line":210,"column":20},"end":{"line":213,"column":21}},"90":{"start":{"line":211,"column":24},"end":{"line":211,"column":60}},"91":{"start":{"line":212,"column":24},"end":{"line":212,"column":30}},"92":{"start":{"line":214,"column":20},"end":{"line":214,"column":58}},"93":{"start":{"line":215,"column":20},"end":{"line":215,"column":48}},"94":{"start":{"line":216,"column":20},"end":{"line":216,"column":87}},"95":{"start":{"line":217,"column":20},"end":{"line":217,"column":26}},"96":{"start":{"line":221,"column":20},"end":{"line":221,"column":177}},"97":{"start":{"line":222,"column":20},"end":{"line":225,"column":21}},"98":{"start":{"line":223,"column":24},"end":{"line":223,"column":60}},"99":{"start":{"line":224,"column":24},"end":{"line":224,"column":30}},"100":{"start":{"line":226,"column":20},"end":{"line":226,"column":58}},"101":{"start":{"line":227,"column":20},"end":{"line":235,"column":21}},"102":{"start":{"line":229,"column":24},"end":{"line":229,"column":180}},"103":{"start":{"line":230,"column":24},"end":{"line":233,"column":25}},"104":{"start":{"line":231,"column":28},"end":{"line":231,"column":64}},"105":{"start":{"line":232,"column":28},"end":{"line":232,"column":34}},"106":{"start":{"line":234,"column":24},"end":{"line":234,"column":62}},"107":{"start":{"line":236,"column":20},"end":{"line":236,"column":26}},"108":{"start":{"line":240,"column":20},"end":{"line":240,"column":177}},"109":{"start":{"line":241,"column":20},"end":{"line":244,"column":21}},"110":{"start":{"line":242,"column":24},"end":{"line":242,"column":60}},"111":{"start":{"line":243,"column":24},"end":{"line":243,"column":30}},"112":{"start":{"line":245,"column":20},"end":{"line":245,"column":58}},"113":{"start":{"line":246,"column":20},"end":{"line":254,"column":21}},"114":{"start":{"line":248,"column":24},"end":{"line":248,"column":181}},"115":{"start":{"line":249,"column":24},"end":{"line":252,"column":25}},"116":{"start":{"line":250,"column":28},"end":{"line":250,"column":64}},"117":{"start":{"line":251,"column":28},"end":{"line":251,"column":34}},"118":{"start":{"line":253,"column":24},"end":{"line":253,"column":62}},"119":{"start":{"line":255,"column":20},"end":{"line":255,"column":26}},"120":{"start":{"line":258,"column":20},"end":{"line":258,"column":155}},"121":{"start":{"line":259,"column":20},"end":{"line":259,"column":26}},"122":{"start":{"line":263,"column":16},"end":{"line":265,"column":17}},"123":{"start":{"line":264,"column":20},"end":{"line":264,"column":26}},"124":{"start":{"line":269,"column":12},"end":{"line":271,"column":13}},"125":{"start":{"line":270,"column":16},"end":{"line":270,"column":22}},"126":{"start":{"line":274,"column":12},"end":{"line":274,"column":171}},"127":{"start":{"line":275,"column":12},"end":{"line":278,"column":13}},"128":{"start":{"line":276,"column":16},"end":{"line":276,"column":52}},"129":{"start":{"line":277,"column":16},"end":{"line":277,"column":22}},"130":{"start":{"line":279,"column":12},"end":{"line":279,"column":50}},"131":{"start":{"line":280,"column":12},"end":{"line":282,"column":13}},"132":{"start":{"line":281,"column":16},"end":{"line":281,"column":22}},"133":{"start":{"line":288,"column":4},"end":{"line":297,"column":5}},"134":{"start":{"line":289,"column":8},"end":{"line":291,"column":9}},"135":{"start":{"line":290,"column":12},"end":{"line":290,"column":68}},"136":{"start":{"line":292,"column":8},"end":{"line":292,"column":83}},"137":{"start":{"line":293,"column":8},"end":{"line":293,"column":42}},"138":{"start":{"line":295,"column":8},"end":{"line":295,"column":96}},"139":{"start":{"line":296,"column":8},"end":{"line":296,"column":59}},"140":{"start":{"line":298,"column":4},"end":{"line":298,"column":20}}},"branchMap":{"1":{"line":75,"type":"if","locations":[{"start":{"line":75,"column":8},"end":{"line":75,"column":8}},{"start":{"line":75,"column":8},"end":{"line":75,"column":8}}]},"2":{"line":82,"type":"if","locations":[{"start":{"line":82,"column":8},"end":{"line":82,"column":8}},{"start":{"line":82,"column":8},"end":{"line":82,"column":8}}]},"3":{"line":85,"type":"if","locations":[{"start":{"line":85,"column":16},"end":{"line":85,"column":16}},{"start":{"line":85,"column":16},"end":{"line":85,"column":16}}]},"4":{"line":90,"type":"if","locations":[{"start":{"line":90,"column":16},"end":{"line":90,"column":16}},{"start":{"line":90,"column":16},"end":{"line":90,"column":16}}]},"5":{"line":98,"type":"if","locations":[{"start":{"line":98,"column":8},"end":{"line":98,"column":8}},{"start":{"line":98,"column":8},"end":{"line":98,"column":8}}]},"6":{"line":98,"type":"binary-expr","locations":[{"start":{"line":98,"column":12},"end":{"line":98,"column":25}},{"start":{"line":98,"column":29},"end":{"line":98,"column":44}}]},"7":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12}},{"start":{"line":108,"column":12},"end":{"line":108,"column":12}}]},"8":{"line":113,"type":"if","locations":[{"start":{"line":113,"column":12},"end":{"line":113,"column":12}},{"start":{"line":113,"column":12},"end":{"line":113,"column":12}}]},"9":{"line":119,"type":"if","locations":[{"start":{"line":119,"column":12},"end":{"line":119,"column":12}},{"start":{"line":119,"column":12},"end":{"line":119,"column":12}}]},"10":{"line":121,"type":"if","locations":[{"start":{"line":121,"column":16},"end":{"line":121,"column":16}},{"start":{"line":121,"column":16},"end":{"line":121,"column":16}}]},"11":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":12},"end":{"line":129,"column":12}},{"start":{"line":129,"column":12},"end":{"line":129,"column":12}}]},"12":{"line":129,"type":"binary-expr","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":29}},{"start":{"line":129,"column":33},"end":{"line":129,"column":48}}]},"13":{"line":135,"type":"if","locations":[{"start":{"line":135,"column":12},"end":{"line":135,"column":12}},{"start":{"line":135,"column":12},"end":{"line":135,"column":12}}]},"14":{"line":151,"type":"if","locations":[{"start":{"line":151,"column":12},"end":{"line":151,"column":12}},{"start":{"line":151,"column":12},"end":{"line":151,"column":12}}]},"15":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":15},"end":{"line":158,"column":33}},{"start":{"line":158,"column":37},"end":{"line":158,"column":51}},{"start":{"line":158,"column":55},"end":{"line":158,"column":69}}]},"16":{"line":167,"type":"if","locations":[{"start":{"line":167,"column":12},"end":{"line":167,"column":12}},{"start":{"line":167,"column":12},"end":{"line":167,"column":12}}]},"17":{"line":172,"type":"if","locations":[{"start":{"line":172,"column":12},"end":{"line":172,"column":12}},{"start":{"line":172,"column":12},"end":{"line":172,"column":12}}]},"18":{"line":184,"type":"if","locations":[{"start":{"line":184,"column":16},"end":{"line":184,"column":16}},{"start":{"line":184,"column":16},"end":{"line":184,"column":16}}]},"19":{"line":189,"type":"if","locations":[{"start":{"line":189,"column":16},"end":{"line":189,"column":16}},{"start":{"line":189,"column":16},"end":{"line":189,"column":16}}]},"20":{"line":194,"type":"switch","locations":[{"start":{"line":196,"column":16},"end":{"line":217,"column":26}},{"start":{"line":219,"column":16},"end":{"line":236,"column":26}},{"start":{"line":238,"column":16},"end":{"line":255,"column":26}},{"start":{"line":257,"column":16},"end":{"line":259,"column":26}}]},"21":{"line":199,"type":"if","locations":[{"start":{"line":199,"column":20},"end":{"line":199,"column":20}},{"start":{"line":199,"column":20},"end":{"line":199,"column":20}}]},"22":{"line":205,"type":"if","locations":[{"start":{"line":205,"column":20},"end":{"line":205,"column":20}},{"start":{"line":205,"column":20},"end":{"line":205,"column":20}}]},"23":{"line":210,"type":"if","locations":[{"start":{"line":210,"column":20},"end":{"line":210,"column":20}},{"start":{"line":210,"column":20},"end":{"line":210,"column":20}}]},"24":{"line":222,"type":"if","locations":[{"start":{"line":222,"column":20},"end":{"line":222,"column":20}},{"start":{"line":222,"column":20},"end":{"line":222,"column":20}}]},"25":{"line":227,"type":"if","locations":[{"start":{"line":227,"column":20},"end":{"line":227,"column":20}},{"start":{"line":227,"column":20},"end":{"line":227,"column":20}}]},"26":{"line":230,"type":"if","locations":[{"start":{"line":230,"column":24},"end":{"line":230,"column":24}},{"start":{"line":230,"column":24},"end":{"line":230,"column":24}}]},"27":{"line":241,"type":"if","locations":[{"start":{"line":241,"column":20},"end":{"line":241,"column":20}},{"start":{"line":241,"column":20},"end":{"line":241,"column":20}}]},"28":{"line":246,"type":"if","locations":[{"start":{"line":246,"column":20},"end":{"line":246,"column":20}},{"start":{"line":246,"column":20},"end":{"line":246,"column":20}}]},"29":{"line":249,"type":"if","locations":[{"start":{"line":249,"column":24},"end":{"line":249,"column":24}},{"start":{"line":249,"column":24},"end":{"line":249,"column":24}}]},"30":{"line":263,"type":"if","locations":[{"start":{"line":263,"column":16},"end":{"line":263,"column":16}},{"start":{"line":263,"column":16},"end":{"line":263,"column":16}}]},"31":{"line":263,"type":"binary-expr","locations":[{"start":{"line":263,"column":20},"end":{"line":263,"column":33}},{"start":{"line":263,"column":37},"end":{"line":263,"column":52}}]},"32":{"line":269,"type":"if","locations":[{"start":{"line":269,"column":12},"end":{"line":269,"column":12}},{"start":{"line":269,"column":12},"end":{"line":269,"column":12}}]},"33":{"line":269,"type":"binary-expr","locations":[{"start":{"line":269,"column":16},"end":{"line":269,"column":29}},{"start":{"line":269,"column":33},"end":{"line":269,"column":48}}]},"34":{"line":275,"type":"if","locations":[{"start":{"line":275,"column":12},"end":{"line":275,"column":12}},{"start":{"line":275,"column":12},"end":{"line":275,"column":12}}]},"35":{"line":280,"type":"if","locations":[{"start":{"line":280,"column":12},"end":{"line":280,"column":12}},{"start":{"line":280,"column":12},"end":{"line":280,"column":12}}]},"36":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":4},"end":{"line":288,"column":4}},{"start":{"line":288,"column":4},"end":{"line":288,"column":4}}]},"37":{"line":289,"type":"if","locations":[{"start":{"line":289,"column":8},"end":{"line":289,"column":8}},{"start":{"line":289,"column":8},"end":{"line":289,"column":8}}]},"38":{"line":295,"type":"cond-expr","locations":[{"start":{"line":295,"column":71},"end":{"line":295,"column":82}},{"start":{"line":295,"column":83},"end":{"line":295,"column":95}}]}},"code":["/*","  Copyright (C) 2014-2016 Christopher D. Russell","","  This library is published under the MIT License and is part of the","  Encapsule Project System in Cloud (SiC) open service architecture.","  Please follow https://twitter.com/Encapsule for news and updates","  about jsgraph and other time saving libraries that do amazing things","  with in-memory data on Node.js and HTML.","*/","","/*","  Inspired by the design of the Boost Graph Library (BGL)","  http://www.boost.org/doc/libs/1_55_0/libs/graph/doc/index.html","","  All visitor callback functions are optional.","  See also BFS Visitor Concept documentation from the BGL:","  http://www.boost.org/doc/libs/1_55_0/libs/graph/doc/BFSVisitor.html","","  var breadthFirstVisitorInterface = {","  initializeVertex: function(vertexId_, digraph_),","  discoverVertex: function(vertexId_, digraph_),","  startVertex: function(vertexId_, digraph_),","  examineVertex: function(vertexId_, digraph_),","  examineEdge: function(vertexIdU_, vertexIdV_, digraph_),","  treeEdge: function(vertexIdU_, vertexIdV_, digraph_),","  nonTreeEdge: function(vertexIdU_, vertexIdV_, digraph_),","  grayTarget: function(vertexIdU_, vertexIdV_, digraph_),","  blackTarget: function(vertexIdU_, vertexIdV_, digraph_),","  finishVertex: function(vertexId_, digraph_)","  };","","  request = {","      digraph: reference to jsgraph.DirectedGraph container object (required)","      visitor: reference to jsgraph BFV visitor object (required)","      options: {","          startVector: reference to a vertex ID string, or an array of vertex ID strings (optional)","              Note: if ommitted, BFT uses the digraph's root vertex set as the start vertex set","          signalStart: Boolean flag (optional - default is true if ommitted)","              Note: By default, BFT will call startVertex on each search root vertex.","              In advanced scenarios you may wish to override this behavior.","          traverseContext: reference to BFT search context object (optional)","              Note: By default, BFT allocates the traversal context internally and returns it to","              the caller. In advanced scenarios you may wish to provide a pre-initialized","              (or potentially pre-colored) traversal context object.","          }","      }","  }","","  response = {","      error: null or string explaining why result is null","      result: BFS search context object","  }","*/","","var algorithmName = \"BFT\"; // constant string used in error messages","var colors = require('./arc_core_digraph_algorithm_colors');","var visitorCallback = require('./arc_core_digraph_algorithm_visit');","var normalizeRequest = require('./arc_core_digraph_algorithm_request');","","","module.exports = function (request_) {","","    var nrequest = null; // normalized request object","    var response = { error: null, result: null };","    var errors = [];","    var continueSearch = true;","    var inBreakScope = false;","    var searchQueue = [];","","    while (!inBreakScope) {","        inBreakScope = true;","        var index, vertexId;","","        var innerResponse = normalizeRequest(request_);","        if (innerResponse.error) {","            errors.unshift(innerResponse.error);","            break;","        }","        nrequest = innerResponse.result;","","        // initializeVertex visitor callback.","        if (nrequest.options.traverseContext.searchStatus === 'pending') {","            for (vertexId in nrequest.options.traverseContext.colorMap) {","                innerResponse = visitorCallback({ algorithm: algorithmName, visitor: nrequest.visitor, method: 'initializeVertex', request: { u: vertexId, g: nrequest.digraph }});","                if (innerResponse.error) {","                    errors.unshift(innerResponse.error);","                    break;","                }","                continueSearch = innerResponse.result;","                if (!continueSearch) {","                    break;","                }","            }","        } // if searchStatus 'pending'","","        nrequest.options.traverseContext.searchStatus = 'active';","","        if (errors.length || !continueSearch) {","            break;","        }","        ","        // Initialize the BF visit or search.","        // Note that all that distinguishes visit from search is the number of starting vertices. One -> visit, N -> search.","","        for (index in nrequest.options.startVector) {","            var startingVertexId = nrequest.options.startVector[index];","            // Ensure the starting vertex is in the graph container.","            if (!nrequest.digraph.isVertex(startingVertexId)) {","                errors.unshift(\"BFT request failed. Vertex '\" + startingVertexId + \"' not found in specfied directed graph container.\");","                break;","            }","            // Ensure the vertex is white in the color map.","            if (nrequest.options.traverseContext.colorMap[startingVertexId] !== colors.white) {","                errors.unshift(\"BFT request failed. Vertex '\" + startingVertexId + \"' color map not initialized to white.\");","                break;","            }","","            // startVertex visitor callback.","            if (nrequest.options.signalStart) {","                innerResponse = visitorCallback({ algorithm: algorithmName, visitor: nrequest.visitor, method: 'startVertex', request: { u: startingVertexId, g: nrequest.digraph }});","                if (innerResponse.error) {","                    errors.unshift(innerResponse.error);","                    break;","                }","                continueSearch = innerResponse.result;","            }","            ","            // Conditionally exit the loop if discoverVertex returned false.","            if (errors.length || !continueSearch) {","                break;","            }","","            // discoverVertex visitor callback.","            innerResponse = visitorCallback({ algorithm: algorithmName, visitor: nrequest.visitor, method: 'discoverVertex', request: { u: startingVertexId, g: nrequest.digraph }});","            if (innerResponse.error) {","                errors.unshift(innerResponse.error);","                break;","            }","            continueSearch = innerResponse.result;","","            // Remove the vertex from the undiscovered vertex map.","            delete nrequest.options.traverseContext.undiscoveredMap[startingVertexId];","","            // Add the vertex to the search","            searchQueue.push(startingVertexId);","","            // Color the vertex discovered (gray)","            nrequest.options.traverseContext.colorMap[startingVertexId] = colors.gray;","","            // Conditionally exit the loop if discoverVertex returned false.","            if (!continueSearch) {","                break;","            }","","        } // for initialize search","","        // Execute the main breadth-first algorithm using the starting vertex set as the initial contents of the searchQueue.","        while (searchQueue.length && continueSearch && !errors.length) {","","            vertexId = searchQueue.shift();","","            // By convention","            nrequest.options.traverseContext.colorMap[vertexId] = colors.black;","","            // examineVertex visitor callback.","            innerResponse = visitorCallback({ algorithm: algorithmName, visitor: nrequest.visitor, method: 'examineVertex', request: { u: vertexId, g: nrequest.digraph }});","            if (innerResponse.error) {","                errors.unshift(innerResponse.error);","                break;","            }","            continueSearch = innerResponse.result;","            if (!continueSearch) {","                break;","            }","","            var outEdges = nrequest.digraph.outEdges(vertexId);","","            for (index in outEdges) {","","                var outEdge = outEdges[index];","","                // examineEdge visitor callback.","                innerResponse = visitorCallback({ algorithm: algorithmName, visitor: nrequest.visitor, method: 'examineEdge', request: { e: outEdge, g: nrequest.digraph }});","                if (innerResponse.error) {","                    errors.unshift(innerResponse.error);","                    break;","                }","                continueSearch = innerResponse.result;","                if (!continueSearch) {","                    break;","                }","","                var colorV = nrequest.options.traverseContext.colorMap[outEdge.v];","                switch (colorV) {","","                case colors.white:","                    // discoverVertex visitor callback.","                    innerResponse = visitorCallback({ algorithm: algorithmName, visitor: nrequest.visitor, method: 'discoverVertex', request: { u: outEdge.v, g: nrequest.digraph }});","                    if (innerResponse.error) {","                        errors.unshift(innerResponse.error);","                        break;","                    }","                    continueSearch = innerResponse.result;","                    delete nrequest.options.traverseContext.undiscoveredMap[outEdge.v];","                    if (!continueSearch) {","                        break;","                    }","                    // treeEdge visitor callback.","                    innerResponse = visitorCallback({ algorithm: algorithmName, visitor: nrequest.visitor, method: 'treeEdge', request: { e: outEdge, g: nrequest.digraph }});","                    if (innerResponse.error) {","                        errors.unshift(innerResponse.error);","                        break;","                    }","                    continueSearch = innerResponse.result;","                    searchQueue.push(outEdge.v);","                    nrequest.options.traverseContext.colorMap[outEdge.v] = colors.gray;","                    break;","","                case colors.gray:","                    // nonTreeEdge visitor callback.","                    innerResponse = visitorCallback({ algorithm: algorithmName, visitor: nrequest.visitor, method: 'nonTreeEdge', request: { e: outEdge, g: nrequest.digraph }});","                    if (innerResponse.error) {","                        errors.unshift(innerResponse.error);","                        break;","                    }","                    continueSearch = innerResponse.result;","                    if (continueSearch) {","                        // grayTarget visitor callback.","                        innerResponse = visitorCallback({ algorithm: algorithmName, visitor: nrequest.visitor, method: 'grayTarget', request: { e: outEdge, g: nrequest.digraph }});","                        if (innerResponse.error) {","                            errors.unshift(innerResponse.error);","                            break;","                        }","                        continueSearch = innerResponse.result;","                    }","                    break;","","                case colors.black:","                    // nonTreeEdge visitor callback.","                    innerResponse = visitorCallback({ algorithm: algorithmName, visitor: nrequest.visitor, method: 'nonTreeEdge', request: { e: outEdge, g: nrequest.digraph }});","                    if (innerResponse.error) {","                        errors.unshift(innerResponse.error);","                        break;","                    }","                    continueSearch = innerResponse.result;","                    if (continueSearch) {","                        // blackTarget visitor callback.","                        innerResponse = visitorCallback({ algorithm: algorithmName, visitor: nrequest.visitor, method: 'blackTarget', request: { e: outEdge, g: nrequest.digraph }});","                        if (innerResponse.error) {","                            errors.unshift(innerResponse.error);","                            break;","                        }","                        continueSearch = innerResponse.result;","                    }","                    break;","","                default:","                    errors.unshift(\"BFT failure: An invalid color value was found in the color map for vertex '\" + outEdge.v + \"'. Please file an issue!\");","                    break;","","                } // switch (colorV)","","                if (errors.length || !continueSearch) {","                    break;","                }","                ","            } // for (outEdge in outEdges)","","            if (errors.length || !continueSearch) {","                break;","            }","","            // finishVertex visitor callback.","            innerResponse = visitorCallback({ algorithm: algorithmName, visitor: nrequest.visitor, method: 'finishVertex', request: { u: vertexId, g: nrequest.digraph }});","            if (innerResponse.error) {","                errors.unshift(innerResponse.error);","                break;","            }","            continueSearch = innerResponse.result;","            if (!continueSearch) {","                break;","            }","","        } // while (searchQueue.length)","","    } // end while (!inBreakScope)","","    if (errors.length) {","        if (nrequest) {","            nrequest.options.traverseContext.searchStatus = 'error';","        }","        errors.unshift(\"jsgraph.directed.breadthFirstTraverse algorithm failure:\");","        response.error = errors.join(' ');","    } else {","        nrequest.options.traverseContext.searchStatus = continueSearch?'completed':'terminated';","        response.result = nrequest.options.traverseContext;","    }","    return response;","};",""],"l":{"55":1,"56":1,"57":1,"58":1,"61":1,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"70":0,"71":0,"72":0,"74":0,"75":0,"76":0,"77":0,"79":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"89":0,"90":0,"91":0,"96":0,"98":0,"99":0,"105":0,"106":0,"108":0,"109":0,"110":0,"113":0,"114":0,"115":0,"119":0,"120":0,"121":0,"122":0,"123":0,"125":0,"129":0,"130":0,"134":0,"135":0,"136":0,"137":0,"139":0,"142":0,"145":0,"148":0,"151":0,"152":0,"158":0,"160":0,"163":0,"166":0,"167":0,"168":0,"169":0,"171":0,"172":0,"173":0,"176":0,"178":0,"180":0,"183":0,"184":0,"185":0,"186":0,"188":0,"189":0,"190":0,"193":0,"194":0,"198":0,"199":0,"200":0,"201":0,"203":0,"204":0,"205":0,"206":0,"209":0,"210":0,"211":0,"212":0,"214":0,"215":0,"216":0,"217":0,"221":0,"222":0,"223":0,"224":0,"226":0,"227":0,"229":0,"230":0,"231":0,"232":0,"234":0,"236":0,"240":0,"241":0,"242":0,"243":0,"245":0,"246":0,"248":0,"249":0,"250":0,"251":0,"253":0,"255":0,"258":0,"259":0,"263":0,"264":0,"269":0,"270":0,"274":0,"275":0,"276":0,"277":0,"279":0,"280":0,"281":0,"288":0,"289":0,"290":0,"292":0,"293":0,"295":0,"296":0,"298":0}},"/home/travis/build/npmtest/node-npmtest-jsgraph/node_modules/jsgraph/src/arc_core_digraph_algorithm_colors.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsgraph/node_modules/jsgraph/src/arc_core_digraph_algorithm_colors.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":17,"column":0},"end":{"line":21,"column":2}}},"branchMap":{},"code":["/*","  Copyright (C) 2014-2016 Christopher D. Russell","","  This library is published under the MIT License and is part of the","  Encapsule Project System in Cloud (SiC) open service architecture.","  Please follow https://twitter.com/Encapsule for news and updates","  about jsgraph and other time saving libraries that do amazing things","  with in-memory data on Node.js and HTML.","*/","","","// Encapsule/jsgraph/src/digraph-color.js","//","","// Color ordinals used by directed graph algorithms.","","module.exports = {","    white: 0,","    gray: 1,","    black: 2","};","",""],"l":{"17":1}},"/home/travis/build/npmtest/node-npmtest-jsgraph/node_modules/jsgraph/src/arc_core_digraph_algorithm_visit.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsgraph/node_modules/jsgraph/src/arc_core_digraph_algorithm_visit.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":28,"loc":{"start":{"line":28,"column":17},"end":{"line":28,"column":37}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":13,"column":55}},"2":{"start":{"line":28,"column":0},"end":{"line":58,"column":2}},"3":{"start":{"line":30,"column":4},"end":{"line":30,"column":49}},"4":{"start":{"line":31,"column":4},"end":{"line":31,"column":20}},"5":{"start":{"line":32,"column":4},"end":{"line":32,"column":29}},"6":{"start":{"line":33,"column":4},"end":{"line":53,"column":5}},"7":{"start":{"line":34,"column":8},"end":{"line":34,"column":28}},"8":{"start":{"line":35,"column":8},"end":{"line":35,"column":64}},"9":{"start":{"line":36,"column":8},"end":{"line":36,"column":61}},"10":{"start":{"line":38,"column":8},"end":{"line":45,"column":9}},"11":{"start":{"line":39,"column":12},"end":{"line":42,"column":13}},"12":{"start":{"line":40,"column":16},"end":{"line":40,"column":176}},"13":{"start":{"line":41,"column":16},"end":{"line":41,"column":22}},"14":{"start":{"line":43,"column":12},"end":{"line":43,"column":35}},"15":{"start":{"line":44,"column":12},"end":{"line":44,"column":18}},"16":{"start":{"line":46,"column":8},"end":{"line":46,"column":63}},"17":{"start":{"line":47,"column":8},"end":{"line":47,"column":56}},"18":{"start":{"line":48,"column":8},"end":{"line":51,"column":9}},"19":{"start":{"line":49,"column":12},"end":{"line":49,"column":204}},"20":{"start":{"line":50,"column":12},"end":{"line":50,"column":18}},"21":{"start":{"line":52,"column":8},"end":{"line":52,"column":41}},"22":{"start":{"line":54,"column":4},"end":{"line":56,"column":5}},"23":{"start":{"line":55,"column":8},"end":{"line":55,"column":42}},"24":{"start":{"line":57,"column":4},"end":{"line":57,"column":20}}},"branchMap":{"1":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":8},"end":{"line":38,"column":8}},{"start":{"line":38,"column":8},"end":{"line":38,"column":8}}]},"2":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":12},"end":{"line":39,"column":12}},{"start":{"line":39,"column":12},"end":{"line":39,"column":12}}]},"3":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":8},"end":{"line":48,"column":8}},{"start":{"line":48,"column":8},"end":{"line":48,"column":8}}]},"4":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":4},"end":{"line":54,"column":4}},{"start":{"line":54,"column":4},"end":{"line":54,"column":4}}]}},"code":["/*","  Copyright (C) 2014-2016 Christopher D. Russell","","  This library is published under the MIT License and is part of the","  Encapsule Project System in Cloud (SiC) open service architecture.","  Please follow https://twitter.com/Encapsule for news and updates","  about jsgraph and other time saving libraries that do amazing things","  with in-memory data on Node.js and HTML.","*/","","// Wraps call to DirectedGraph algorithm visitor function callbacks.","","var helperFunctions = require('./arc_core_graph_util');","","/*","  request = {","      visitor: interface object reference","      algorithm: string name of the algorithm for error messages","      method: string name of the visitor method to call","      request: request object to pass to the visitor method","  },","  response = {","      error: null or string explaining by response.error is null","      result: null (error) or Boolean flag set true to continue search","  }","*/","","module.exports = function (request_) {","","    var response = { error: null, result: null };","    var errors = [];","    var inBreakScope = false;","    while (!inBreakScope) {","        inBreakScope = true;","        var visitorCallback = request_.visitor[request_.method];","        var jstype = helperFunctions.JSType(visitorCallback);","        // If the visitor function is not defined on the visitor object, return true to continue the search.","        if (jstype !== '[object Function]') {","            if (jstype !== '[object Undefined]') {","                errors.unshift(request_.algorithm + \" visitor interface method '\" + request_.method + \"' is type '\" + jstype + \"' instead of '[object Function]' as expected.\");","                break;","            }","            response.result = true;","            break;","        }","        var continueSearch = visitorCallback(request_.request);","        jstype = helperFunctions.JSType(continueSearch);","        if (jstype !== '[object Boolean]') {","            errors.unshift(request_.algorithm + \" visitor interface error in callback function '\" + request_.method + \"'. Function returned type '\" + jstype + \"' instead of expected '[object Boolean]'.\");","            break;","        }","        response.result = continueSearch;","    }","    if (errors.length) {","        response.error = errors.join(' ');","    }","    return response;","};","","","",""],"l":{"13":1,"28":1,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"38":0,"39":0,"40":0,"41":0,"43":0,"44":0,"46":0,"47":0,"48":0,"49":0,"50":0,"52":0,"54":0,"55":0,"57":0}},"/home/travis/build/npmtest/node-npmtest-jsgraph/node_modules/jsgraph/src/arc_core_digraph_algorithm_request.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsgraph/node_modules/jsgraph/src/arc_core_digraph_algorithm_request.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0,0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":39,"loc":{"start":{"line":39,"column":17},"end":{"line":39,"column":37}}},"2":{"name":"(anonymous_2)","line":46,"loc":{"start":{"line":46,"column":32},"end":{"line":46,"column":43}}},"3":{"name":"(anonymous_3)","line":57,"loc":{"start":{"line":57,"column":26},"end":{"line":57,"column":37}}}},"statementMap":{"1":{"start":{"line":11,"column":0},"end":{"line":11,"column":55}},"2":{"start":{"line":12,"column":0},"end":{"line":12,"column":71}},"3":{"start":{"line":39,"column":0},"end":{"line":161,"column":2}},"4":{"start":{"line":41,"column":4},"end":{"line":41,"column":49}},"5":{"start":{"line":42,"column":4},"end":{"line":42,"column":20}},"6":{"start":{"line":43,"column":4},"end":{"line":43,"column":24}},"7":{"start":{"line":44,"column":4},"end":{"line":44,"column":29}},"8":{"start":{"line":46,"column":4},"end":{"line":55,"column":6}},"9":{"start":{"line":47,"column":8},"end":{"line":47,"column":71}},"10":{"start":{"line":48,"column":8},"end":{"line":48,"column":26}},"11":{"start":{"line":49,"column":8},"end":{"line":53,"column":9}},"12":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}},"13":{"start":{"line":52,"column":12},"end":{"line":52,"column":37}},"14":{"start":{"line":54,"column":8},"end":{"line":54,"column":22}},"15":{"start":{"line":57,"column":4},"end":{"line":59,"column":6}},"16":{"start":{"line":58,"column":8},"end":{"line":58,"column":50}},"17":{"start":{"line":61,"column":4},"end":{"line":153,"column":5}},"18":{"start":{"line":62,"column":8},"end":{"line":62,"column":28}},"19":{"start":{"line":65,"column":8},"end":{"line":65,"column":61}},"20":{"start":{"line":66,"column":8},"end":{"line":69,"column":9}},"21":{"start":{"line":67,"column":12},"end":{"line":67,"column":92}},"22":{"start":{"line":68,"column":12},"end":{"line":68,"column":18}},"23":{"start":{"line":70,"column":8},"end":{"line":70,"column":22}},"24":{"start":{"line":71,"column":8},"end":{"line":71,"column":65}},"25":{"start":{"line":72,"column":8},"end":{"line":75,"column":9}},"26":{"start":{"line":73,"column":12},"end":{"line":73,"column":118}},"27":{"start":{"line":74,"column":12},"end":{"line":74,"column":18}},"28":{"start":{"line":76,"column":8},"end":{"line":76,"column":44}},"29":{"start":{"line":77,"column":8},"end":{"line":77,"column":65}},"30":{"start":{"line":78,"column":8},"end":{"line":81,"column":9}},"31":{"start":{"line":79,"column":12},"end":{"line":79,"column":119}},"32":{"start":{"line":80,"column":12},"end":{"line":80,"column":18}},"33":{"start":{"line":83,"column":8},"end":{"line":83,"column":44}},"34":{"start":{"line":84,"column":8},"end":{"line":84,"column":65}},"35":{"start":{"line":85,"column":8},"end":{"line":88,"column":9}},"36":{"start":{"line":86,"column":12},"end":{"line":86,"column":110}},"37":{"start":{"line":87,"column":12},"end":{"line":87,"column":18}},"38":{"start":{"line":89,"column":8},"end":{"line":89,"column":30}},"39":{"start":{"line":90,"column":8},"end":{"line":138,"column":9}},"40":{"start":{"line":91,"column":12},"end":{"line":91,"column":81}},"41":{"start":{"line":92,"column":12},"end":{"line":104,"column":13}},"42":{"start":{"line":94,"column":16},"end":{"line":94,"column":22}},"43":{"start":{"line":96,"column":16},"end":{"line":96,"column":80}},"44":{"start":{"line":97,"column":16},"end":{"line":97,"column":22}},"45":{"start":{"line":99,"column":16},"end":{"line":99,"column":76}},"46":{"start":{"line":100,"column":16},"end":{"line":100,"column":22}},"47":{"start":{"line":102,"column":16},"end":{"line":102,"column":213}},"48":{"start":{"line":103,"column":16},"end":{"line":103,"column":22}},"49":{"start":{"line":106,"column":12},"end":{"line":108,"column":13}},"50":{"start":{"line":107,"column":16},"end":{"line":107,"column":22}},"51":{"start":{"line":110,"column":12},"end":{"line":110,"column":91}},"52":{"start":{"line":111,"column":12},"end":{"line":114,"column":13}},"53":{"start":{"line":112,"column":16},"end":{"line":112,"column":204}},"54":{"start":{"line":113,"column":16},"end":{"line":113,"column":22}},"55":{"start":{"line":115,"column":12},"end":{"line":117,"column":13}},"56":{"start":{"line":116,"column":16},"end":{"line":116,"column":96}},"57":{"start":{"line":119,"column":12},"end":{"line":119,"column":81}},"58":{"start":{"line":120,"column":12},"end":{"line":123,"column":13}},"59":{"start":{"line":121,"column":16},"end":{"line":121,"column":195}},"60":{"start":{"line":122,"column":16},"end":{"line":122,"column":22}},"61":{"start":{"line":124,"column":12},"end":{"line":126,"column":13}},"62":{"start":{"line":125,"column":16},"end":{"line":125,"column":76}},"63":{"start":{"line":129,"column":12},"end":{"line":129,"column":85}},"64":{"start":{"line":130,"column":12},"end":{"line":133,"column":13}},"65":{"start":{"line":131,"column":16},"end":{"line":131,"column":198}},"66":{"start":{"line":132,"column":16},"end":{"line":132,"column":22}},"67":{"start":{"line":134,"column":12},"end":{"line":136,"column":13}},"68":{"start":{"line":135,"column":16},"end":{"line":135,"column":84}},"69":{"start":{"line":140,"column":8},"end":{"line":140,"column":102}},"70":{"start":{"line":141,"column":8},"end":{"line":141,"column":102}},"71":{"start":{"line":142,"column":8},"end":{"line":142,"column":91}},"72":{"start":{"line":143,"column":8},"end":{"line":143,"column":112}},"73":{"start":{"line":146,"column":8},"end":{"line":149,"column":9}},"74":{"start":{"line":147,"column":12},"end":{"line":147,"column":328}},"75":{"start":{"line":148,"column":12},"end":{"line":148,"column":18}},"76":{"start":{"line":151,"column":8},"end":{"line":151,"column":35}},"77":{"start":{"line":154,"column":4},"end":{"line":158,"column":5}},"78":{"start":{"line":155,"column":8},"end":{"line":155,"column":42}},"79":{"start":{"line":157,"column":8},"end":{"line":157,"column":35}},"80":{"start":{"line":159,"column":4},"end":{"line":159,"column":20}}},"branchMap":{"1":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":8},"end":{"line":49,"column":8}},{"start":{"line":49,"column":8},"end":{"line":49,"column":8}}]},"2":{"line":66,"type":"if","locations":[{"start":{"line":66,"column":8},"end":{"line":66,"column":8}},{"start":{"line":66,"column":8},"end":{"line":66,"column":8}}]},"3":{"line":72,"type":"if","locations":[{"start":{"line":72,"column":8},"end":{"line":72,"column":8}},{"start":{"line":72,"column":8},"end":{"line":72,"column":8}}]},"4":{"line":78,"type":"if","locations":[{"start":{"line":78,"column":8},"end":{"line":78,"column":8}},{"start":{"line":78,"column":8},"end":{"line":78,"column":8}}]},"5":{"line":85,"type":"if","locations":[{"start":{"line":85,"column":8},"end":{"line":85,"column":8}},{"start":{"line":85,"column":8},"end":{"line":85,"column":8}}]},"6":{"line":85,"type":"binary-expr","locations":[{"start":{"line":85,"column":13},"end":{"line":85,"column":51}},{"start":{"line":85,"column":57},"end":{"line":85,"column":92}}]},"7":{"line":90,"type":"if","locations":[{"start":{"line":90,"column":8},"end":{"line":90,"column":8}},{"start":{"line":90,"column":8},"end":{"line":90,"column":8}}]},"8":{"line":92,"type":"switch","locations":[{"start":{"line":93,"column":12},"end":{"line":94,"column":22}},{"start":{"line":95,"column":12},"end":{"line":97,"column":22}},{"start":{"line":98,"column":12},"end":{"line":100,"column":22}},{"start":{"line":101,"column":12},"end":{"line":103,"column":22}}]},"9":{"line":106,"type":"if","locations":[{"start":{"line":106,"column":12},"end":{"line":106,"column":12}},{"start":{"line":106,"column":12},"end":{"line":106,"column":12}}]},"10":{"line":111,"type":"if","locations":[{"start":{"line":111,"column":12},"end":{"line":111,"column":12}},{"start":{"line":111,"column":12},"end":{"line":111,"column":12}}]},"11":{"line":111,"type":"binary-expr","locations":[{"start":{"line":111,"column":17},"end":{"line":111,"column":55}},{"start":{"line":111,"column":61},"end":{"line":111,"column":97}}]},"12":{"line":115,"type":"if","locations":[{"start":{"line":115,"column":12},"end":{"line":115,"column":12}},{"start":{"line":115,"column":12},"end":{"line":115,"column":12}}]},"13":{"line":120,"type":"if","locations":[{"start":{"line":120,"column":12},"end":{"line":120,"column":12}},{"start":{"line":120,"column":12},"end":{"line":120,"column":12}}]},"14":{"line":120,"type":"binary-expr","locations":[{"start":{"line":120,"column":17},"end":{"line":120,"column":55}},{"start":{"line":120,"column":61},"end":{"line":120,"column":97}}]},"15":{"line":124,"type":"if","locations":[{"start":{"line":124,"column":12},"end":{"line":124,"column":12}},{"start":{"line":124,"column":12},"end":{"line":124,"column":12}}]},"16":{"line":130,"type":"if","locations":[{"start":{"line":130,"column":12},"end":{"line":130,"column":12}},{"start":{"line":130,"column":12},"end":{"line":130,"column":12}}]},"17":{"line":130,"type":"binary-expr","locations":[{"start":{"line":130,"column":17},"end":{"line":130,"column":55}},{"start":{"line":130,"column":61},"end":{"line":130,"column":96}}]},"18":{"line":134,"type":"if","locations":[{"start":{"line":134,"column":12},"end":{"line":134,"column":12}},{"start":{"line":134,"column":12},"end":{"line":134,"column":12}}]},"19":{"line":146,"type":"if","locations":[{"start":{"line":146,"column":8},"end":{"line":146,"column":8}},{"start":{"line":146,"column":8},"end":{"line":146,"column":8}}]},"20":{"line":146,"type":"binary-expr","locations":[{"start":{"line":146,"column":12},"end":{"line":146,"column":48}},{"start":{"line":146,"column":52},"end":{"line":146,"column":91}}]},"21":{"line":154,"type":"if","locations":[{"start":{"line":154,"column":4},"end":{"line":154,"column":4}},{"start":{"line":154,"column":4},"end":{"line":154,"column":4}}]}},"code":["/*","  Copyright (C) 2014-2016 Christopher D. Russell","","  This library is published under the MIT License and is part of the","  Encapsule Project System in Cloud (SiC) open service architecture.","  Please follow https://twitter.com/Encapsule for news and updates","  about jsgraph and other time saving libraries that do amazing things","  with in-memory data on Node.js and HTML.","*/","","var helperFunctions = require('./arc_core_graph_util');","var TRAVERSE_CONTEXT = require('./arc_core_digraph_algorithm_context');","","/*","  request = {","      digraph: reference to jsgraph.DirectedGraph container object (required)","      visitor: reference to jsgraph BFV visitor object (required)","      options: {","          startVector: reference to a vertex ID string, or an array of vertex ID strings (optional)","              Note: if ommitted, BFT uses the digraph's root vertex set as the start vertex set","          allowEmptyStartVector: Boolean flag (optional - default is false is omitted)","          signalStart: Boolean flag (optional - default is true if ommitted)","              Note: By default, BFT will call startVertex on each search root vertex.","              In advanced scenarios you may wish to override this behavior.","          traverseContext: reference to BFT search context object (optional)","              Note: By default, BFT allocates the traversal context internally and returns it to","              the caller. In advanced scenarios you may wish to provide a pre-initialized","              (or potentially pre-colored) traversal context object.","          }","      }","  }","","  response = {","      error: null or string explaining why result is null","      result: Traversal context object or null if error","  }","*/","","module.exports = function (request_) {","","    var response = { error: null, result: null };","    var errors = [];","    var nrequest = null;","    var inBreakScope = false;","","    var createTraverseContext = function() {","        var response = TRAVERSE_CONTEXT({ digraph: nrequest.digraph });","        var result = null;","        if (response.error) {","            errors.unshift(response.error);","        } else {","            result = response.result;","        }","        return result;","    };","","    var getRootVertices = function() {","        return nrequest.digraph.getRootVertices();","    };","        ","    while (!inBreakScope) {","        inBreakScope = true;","","        // Verify the outer shape of the request object.","        var innerResponse = helperFunctions.JSType(request_);","        if (innerResponse !== '[object Object]') {","            errors.unshift(\"Missing request object ~. Found type '\" + innerResponse + \"'.\");","            break;","        }","        nrequest = {};","        innerResponse = helperFunctions.JSType(request_.digraph);","        if (innerResponse !== '[object Object]') {","            errors.unshift(\"Missing required DirectedGraph reference ~.digraph. Found type '\" + innerResponse + \"'.\");","            break;","        }","        nrequest.digraph = request_.digraph;","        innerResponse = helperFunctions.JSType(request_.visitor);","        if (innerResponse !== '[object Object]') {","            errors.unshift(\"Missing required visitor object reference ~.visitor. Found type '\" + innerResponse + \"'.\");","            break;","        }","        ","        nrequest.visitor = request_.visitor;","        innerResponse = helperFunctions.JSType(request_.options);","        if ((innerResponse !== '[object Undefined]') && (innerResponse !== '[object Object]')) {","            errors.unshift(\"Options object ~.options is the wrong type. Found type '\" + innerResponse + \"'.\");","            break;","        }","        nrequest.options = {};","        if (innerResponse === '[object Object]') {","            innerResponse = helperFunctions.JSType(request_.options.startVector);","            switch (innerResponse) {","            case '[object Undefined]':","                break;","            case '[object String]':","                nrequest.options.startVector = [ request_.options.startVector ];","                break;","            case '[object Array]':","                nrequest.options.startVector = request_.options.startVector;","                break;","            default:","                errors.unshift(\"Options object property ~.options.startVector is the wrong type. Expected either '[object String]', '[object Array]', or '[object Undefined]'. Found type '\" + innerResponse + \"'.\");","                break;","            } // end switch","","            if (errors.length) {","                break;","            }","","            innerResponse = helperFunctions.JSType(request_.options.allowEmptyStartVector);","            if ((innerResponse !== '[object Undefined]') && (innerResponse !== '[object Boolean]')) {","                errors.unshift(\"Options object property ~.options.allowEmptyStartVector is the wrong type. Expected either '[object Boolean]' or '[object Undefined]. Found type '\" + innerResponse + \"'.\");","                break;","            }","            if (innerResponse == '[object Boolean]') {","                nrequest.options.allowEmptyStartVector = request_.options.allowEmptyStartVector;","            }","","            innerResponse = helperFunctions.JSType(request_.options.signalStart);","            if ((innerResponse !== '[object Undefined]') && (innerResponse !== '[object Boolean]')) {","                errors.unshift(\"Options object property ~.options.signalStart is the wrong type. Expected either '[object Boolean]' or '[object Undefined]'. Found type '\" + innerResponse + \"'.\");","                break;","            }","            if (innerResponse === '[object Boolean]') {","                nrequest.options.signalStart = request_.options.signalStart;","            }","","","            innerResponse = helperFunctions.JSType(request_.options.traverseContext);","            if ((innerResponse !== '[object Undefined]') && (innerResponse !== '[object Object]')) {","                errors.unshift(\"Options object property ~.options.traverseContext is the wrong type. Expected either '[object Object]' or '[object Undefined']. Found type '\" + innerResponse + \"'.\");","                break;","            }","            if (innerResponse === '[object Object]') {","                nrequest.options.traverseContext = request_.options.traverseContext;","            }","","        } // end if options object specified","        ","        helperFunctions.setPropertyValueIfUndefined(nrequest.options, 'startVector', getRootVertices);","        helperFunctions.setPropertyValueIfUndefined(nrequest.options, 'allowEmptyStartVector', false);","        helperFunctions.setPropertyValueIfUndefined(nrequest.options, 'signalStart', true);","        helperFunctions.setPropertyValueIfUndefined(nrequest.options, 'traverseContext', createTraverseContext);","","        // Ensure that the starting vertex set is not empty (unless allowed).","        if (!nrequest.options.startVector.length && !nrequest.options.allowEmptyStartVector) {","            errors.unshift(\"Traversal aborted because we don't know which vertex to start on. Specify a graph that has at least one root vertex, explicity specify the start vertex (or vertices) via `request.options.startVector` array, or suppress this error by setting `request.options.allowEmptyStartVector` to Boolean true.\");","            break;","        }","","        response.result = nrequest;","","    }","    if (errors.length) {","        response.error = errors.join(' ');","    } else {","        response.result = nrequest;","    }","    return response;","","};",""],"l":{"11":1,"12":1,"39":1,"41":0,"42":0,"43":0,"44":0,"46":0,"47":0,"48":0,"49":0,"50":0,"52":0,"54":0,"57":0,"58":0,"61":0,"62":0,"65":0,"66":0,"67":0,"68":0,"70":0,"71":0,"72":0,"73":0,"74":0,"76":0,"77":0,"78":0,"79":0,"80":0,"83":0,"84":0,"85":0,"86":0,"87":0,"89":0,"90":0,"91":0,"92":0,"94":0,"96":0,"97":0,"99":0,"100":0,"102":0,"103":0,"106":0,"107":0,"110":0,"111":0,"112":0,"113":0,"115":0,"116":0,"119":0,"120":0,"121":0,"122":0,"124":0,"125":0,"129":0,"130":0,"131":0,"132":0,"134":0,"135":0,"140":0,"141":0,"142":0,"143":0,"146":0,"147":0,"148":0,"151":0,"154":0,"155":0,"157":0,"159":0}},"/home/travis/build/npmtest/node-npmtest-jsgraph/node_modules/jsgraph/src/arc_core_digraph_algorithm_context.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsgraph/node_modules/jsgraph/src/arc_core_digraph_algorithm_context.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":14,"loc":{"start":{"line":14,"column":17},"end":{"line":14,"column":37}}},"2":{"name":"(anonymous_2)","line":18,"loc":{"start":{"line":18,"column":35},"end":{"line":18,"column":56}}}},"statementMap":{"1":{"start":{"line":11,"column":0},"end":{"line":11,"column":55}},"2":{"start":{"line":12,"column":0},"end":{"line":12,"column":60}},"3":{"start":{"line":14,"column":0},"end":{"line":53,"column":2}},"4":{"start":{"line":15,"column":4},"end":{"line":15,"column":49}},"5":{"start":{"line":16,"column":4},"end":{"line":16,"column":20}},"6":{"start":{"line":17,"column":4},"end":{"line":17,"column":89}},"7":{"start":{"line":18,"column":4},"end":{"line":21,"column":6}},"8":{"start":{"line":19,"column":8},"end":{"line":19,"column":59}},"9":{"start":{"line":20,"column":8},"end":{"line":20,"column":58}},"10":{"start":{"line":22,"column":4},"end":{"line":22,"column":29}},"11":{"start":{"line":23,"column":4},"end":{"line":47,"column":5}},"12":{"start":{"line":24,"column":8},"end":{"line":24,"column":28}},"13":{"start":{"line":25,"column":8},"end":{"line":25,"column":41}},"14":{"start":{"line":27,"column":8},"end":{"line":27,"column":52}},"15":{"start":{"line":28,"column":8},"end":{"line":31,"column":9}},"16":{"start":{"line":29,"column":12},"end":{"line":29,"column":106}},"17":{"start":{"line":30,"column":12},"end":{"line":30,"column":18}},"18":{"start":{"line":33,"column":8},"end":{"line":33,"column":56}},"19":{"start":{"line":34,"column":8},"end":{"line":37,"column":9}},"20":{"start":{"line":35,"column":12},"end":{"line":35,"column":114}},"21":{"start":{"line":36,"column":12},"end":{"line":36,"column":18}},"22":{"start":{"line":39,"column":8},"end":{"line":39,"column":73}},"23":{"start":{"line":46,"column":8},"end":{"line":46,"column":42}},"24":{"start":{"line":48,"column":4},"end":{"line":51,"column":5}},"25":{"start":{"line":49,"column":8},"end":{"line":49,"column":73}},"26":{"start":{"line":50,"column":8},"end":{"line":50,"column":42}},"27":{"start":{"line":52,"column":4},"end":{"line":52,"column":20}}},"branchMap":{"1":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":8},"end":{"line":28,"column":8}},{"start":{"line":28,"column":8},"end":{"line":28,"column":8}}]},"2":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":8},"end":{"line":34,"column":8}},{"start":{"line":34,"column":8},"end":{"line":34,"column":8}}]},"3":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":4},"end":{"line":48,"column":4}},{"start":{"line":48,"column":4},"end":{"line":48,"column":4}}]}},"code":["/*","  Copyright (C) 2014-2016 Christopher D. Russell","","  This library is published under the MIT License and is part of the","  Encapsule Project System in Cloud (SiC) open service architecture.","  Please follow https://twitter.com/Encapsule for news and updates","  about jsgraph and other time saving libraries that do amazing things","  with in-memory data on Node.js and HTML.","*/","","var helperFunctions = require('./arc_core_graph_util');","var colors = require('./arc_core_digraph_algorithm_colors');","","module.exports = function (request_) {","    var response = { error: null, result: null };","    var errors = [];","    var traverseContext = { searchStatus: 'pending', colorMap: {}, undiscoveredMap: {} };","    var initializeColorMapRecord = function (vertexId_) {","        traverseContext.colorMap[vertexId_] = colors.white;","        traverseContext.undiscoveredMap[vertexId_] = true;","    };","    var inBreakScope = false;","    while (!inBreakScope) {","        inBreakScope = true;","        var objectTS = '[object Object]';","        // Verify request.","        var type = helperFunctions.JSType(request_);","        if (type !== objectTS) {","            errors.unshift(\"Expected request to be of type '\" + objectTS + \"' but found '\" + type + \"'.\");","            break;","        }","        // Verify request.digraph.","        type = helperFunctions.JSType(request_.digraph);","        if (type !== objectTS) {","            errors.unshift(\"Expected request.digraph to be of type '\" + objectTS + \"' but found '\" + type + \"'.\");","            break;","        }","        // Initialize the BFS search context object.","        request_.digraph.getVertices().forEach(initializeColorMapRecord);","        // Assign the result. Note that it's incumbant upon the first invocation of","        // traversal algorithm  to check/set the traverseContext.searchStatus flag and","        // correctly call the visitor.initializeVertex callback on each vertex in the","        // color map prior to the start of the search. traverseContext.searchStatus should","        // be 'running' while a search is in progress. 'terminated' if prematurely terminated","        // by client visitor code. 'complete' when search concludes normally.","        response.result = traverseContext;","    }","    if (errors.length) {","        errors.unshift(\"jsgraph.directed.createTraverseContext failed:\");","        response.error = errors.join(' ');","    }","    return response;","};",""],"l":{"11":1,"12":1,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"22":0,"23":0,"24":0,"25":0,"27":0,"28":0,"29":0,"30":0,"33":0,"34":0,"35":0,"36":0,"39":0,"46":0,"48":0,"49":0,"50":0,"52":0}},"/home/travis/build/npmtest/node-npmtest-jsgraph/node_modules/jsgraph/src/arc_core_digraph_algorithm_dft.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsgraph/node_modules/jsgraph/src/arc_core_digraph_algorithm_dft.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0,0],"13":[0,0,0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0,0],"20":[0,0],"21":[0,0],"22":[0,0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":17,"loc":{"start":{"line":17,"column":17},"end":{"line":17,"column":37}}}},"statementMap":{"1":{"start":{"line":11,"column":0},"end":{"line":11,"column":26}},"2":{"start":{"line":12,"column":0},"end":{"line":12,"column":60}},"3":{"start":{"line":13,"column":0},"end":{"line":13,"column":68}},"4":{"start":{"line":14,"column":0},"end":{"line":14,"column":71}},"5":{"start":{"line":17,"column":0},"end":{"line":322,"column":2}},"6":{"start":{"line":19,"column":4},"end":{"line":19,"column":24}},"7":{"start":{"line":20,"column":4},"end":{"line":20,"column":49}},"8":{"start":{"line":21,"column":4},"end":{"line":21,"column":20}},"9":{"start":{"line":22,"column":4},"end":{"line":22,"column":30}},"10":{"start":{"line":23,"column":4},"end":{"line":23,"column":29}},"11":{"start":{"line":25,"column":4},"end":{"line":307,"column":5}},"12":{"start":{"line":26,"column":8},"end":{"line":26,"column":28}},"13":{"start":{"line":27,"column":8},"end":{"line":27,"column":28}},"14":{"start":{"line":28,"column":8},"end":{"line":28,"column":31}},"15":{"start":{"line":29,"column":8},"end":{"line":29,"column":32}},"16":{"start":{"line":30,"column":8},"end":{"line":30,"column":24}},"17":{"start":{"line":32,"column":8},"end":{"line":32,"column":55}},"18":{"start":{"line":33,"column":8},"end":{"line":36,"column":9}},"19":{"start":{"line":34,"column":12},"end":{"line":34,"column":48}},"20":{"start":{"line":35,"column":12},"end":{"line":35,"column":18}},"21":{"start":{"line":37,"column":8},"end":{"line":37,"column":40}},"22":{"start":{"line":40,"column":8},"end":{"line":52,"column":9}},"23":{"start":{"line":41,"column":12},"end":{"line":51,"column":13}},"24":{"start":{"line":42,"column":16},"end":{"line":42,"column":179}},"25":{"start":{"line":43,"column":16},"end":{"line":46,"column":17}},"26":{"start":{"line":44,"column":20},"end":{"line":44,"column":56}},"27":{"start":{"line":45,"column":20},"end":{"line":45,"column":26}},"28":{"start":{"line":47,"column":16},"end":{"line":47,"column":54}},"29":{"start":{"line":48,"column":16},"end":{"line":50,"column":17}},"30":{"start":{"line":49,"column":20},"end":{"line":49,"column":26}},"31":{"start":{"line":54,"column":8},"end":{"line":54,"column":65}},"32":{"start":{"line":56,"column":8},"end":{"line":58,"column":9}},"33":{"start":{"line":57,"column":12},"end":{"line":57,"column":18}},"34":{"start":{"line":61,"column":8},"end":{"line":281,"column":9}},"35":{"start":{"line":63,"column":12},"end":{"line":63,"column":59}},"36":{"start":{"line":66,"column":12},"end":{"line":69,"column":13}},"37":{"start":{"line":67,"column":16},"end":{"line":67,"column":129}},"38":{"start":{"line":68,"column":16},"end":{"line":68,"column":22}},"39":{"start":{"line":72,"column":12},"end":{"line":75,"column":13}},"40":{"start":{"line":73,"column":16},"end":{"line":73,"column":116}},"41":{"start":{"line":74,"column":16},"end":{"line":74,"column":22}},"42":{"start":{"line":78,"column":12},"end":{"line":85,"column":13}},"43":{"start":{"line":79,"column":16},"end":{"line":79,"column":174}},"44":{"start":{"line":80,"column":16},"end":{"line":83,"column":17}},"45":{"start":{"line":81,"column":20},"end":{"line":81,"column":56}},"46":{"start":{"line":82,"column":20},"end":{"line":82,"column":26}},"47":{"start":{"line":84,"column":16},"end":{"line":84,"column":54}},"48":{"start":{"line":86,"column":12},"end":{"line":88,"column":13}},"49":{"start":{"line":87,"column":16},"end":{"line":87,"column":22}},"50":{"start":{"line":92,"column":12},"end":{"line":92,"column":47}},"51":{"start":{"line":95,"column":12},"end":{"line":275,"column":13}},"52":{"start":{"line":99,"column":16},"end":{"line":99,"column":79}},"53":{"start":{"line":101,"column":16},"end":{"line":274,"column":17}},"54":{"start":{"line":106,"column":20},"end":{"line":106,"column":93}},"55":{"start":{"line":109,"column":20},"end":{"line":109,"column":93}},"56":{"start":{"line":112,"column":20},"end":{"line":117,"column":23}},"57":{"start":{"line":118,"column":20},"end":{"line":121,"column":21}},"58":{"start":{"line":119,"column":24},"end":{"line":119,"column":60}},"59":{"start":{"line":120,"column":24},"end":{"line":120,"column":30}},"60":{"start":{"line":122,"column":20},"end":{"line":122,"column":58}},"61":{"start":{"line":123,"column":20},"end":{"line":125,"column":21}},"62":{"start":{"line":124,"column":24},"end":{"line":124,"column":30}},"63":{"start":{"line":128,"column":20},"end":{"line":144,"column":21}},"64":{"start":{"line":129,"column":24},"end":{"line":134,"column":27}},"65":{"start":{"line":135,"column":24},"end":{"line":143,"column":25}},"66":{"start":{"line":136,"column":28},"end":{"line":136,"column":64}},"67":{"start":{"line":137,"column":28},"end":{"line":137,"column":34}},"68":{"start":{"line":139,"column":28},"end":{"line":139,"column":66}},"69":{"start":{"line":140,"column":28},"end":{"line":142,"column":29}},"70":{"start":{"line":141,"column":32},"end":{"line":141,"column":38}},"71":{"start":{"line":147,"column":20},"end":{"line":147,"column":84}},"72":{"start":{"line":148,"column":20},"end":{"line":148,"column":46}},"73":{"start":{"line":150,"column":20},"end":{"line":204,"column":21}},"74":{"start":{"line":152,"column":24},"end":{"line":152,"column":72}},"75":{"start":{"line":155,"column":24},"end":{"line":160,"column":27}},"76":{"start":{"line":161,"column":24},"end":{"line":164,"column":25}},"77":{"start":{"line":162,"column":28},"end":{"line":162,"column":64}},"78":{"start":{"line":163,"column":28},"end":{"line":163,"column":34}},"79":{"start":{"line":165,"column":24},"end":{"line":165,"column":62}},"80":{"start":{"line":166,"column":24},"end":{"line":168,"column":25}},"81":{"start":{"line":167,"column":28},"end":{"line":167,"column":34}},"82":{"start":{"line":170,"column":24},"end":{"line":203,"column":25}},"83":{"start":{"line":173,"column":28},"end":{"line":173,"column":68}},"84":{"start":{"line":174,"column":28},"end":{"line":174,"column":34}},"85":{"start":{"line":177,"column":28},"end":{"line":182,"column":31}},"86":{"start":{"line":183,"column":28},"end":{"line":187,"column":29}},"87":{"start":{"line":184,"column":32},"end":{"line":184,"column":68}},"88":{"start":{"line":186,"column":32},"end":{"line":186,"column":70}},"89":{"start":{"line":188,"column":28},"end":{"line":188,"column":34}},"90":{"start":{"line":191,"column":28},"end":{"line":196,"column":31}},"91":{"start":{"line":197,"column":28},"end":{"line":201,"column":29}},"92":{"start":{"line":198,"column":32},"end":{"line":198,"column":68}},"93":{"start":{"line":200,"column":32},"end":{"line":200,"column":70}},"94":{"start":{"line":202,"column":28},"end":{"line":202,"column":34}},"95":{"start":{"line":205,"column":20},"end":{"line":207,"column":21}},"96":{"start":{"line":206,"column":24},"end":{"line":206,"column":59}},"97":{"start":{"line":209,"column":20},"end":{"line":209,"column":26}},"98":{"start":{"line":213,"column":20},"end":{"line":213,"column":94}},"99":{"start":{"line":215,"column":20},"end":{"line":220,"column":23}},"100":{"start":{"line":221,"column":20},"end":{"line":224,"column":21}},"101":{"start":{"line":222,"column":24},"end":{"line":222,"column":60}},"102":{"start":{"line":223,"column":24},"end":{"line":223,"column":30}},"103":{"start":{"line":225,"column":20},"end":{"line":225,"column":58}},"104":{"start":{"line":226,"column":20},"end":{"line":228,"column":21}},"105":{"start":{"line":227,"column":24},"end":{"line":227,"column":30}},"106":{"start":{"line":229,"column":20},"end":{"line":229,"column":78}},"107":{"start":{"line":230,"column":20},"end":{"line":234,"column":21}},"108":{"start":{"line":231,"column":24},"end":{"line":231,"column":53}},"109":{"start":{"line":232,"column":24},"end":{"line":232,"column":51}},"110":{"start":{"line":233,"column":24},"end":{"line":233,"column":53}},"111":{"start":{"line":235,"column":20},"end":{"line":235,"column":64}},"112":{"start":{"line":236,"column":20},"end":{"line":238,"column":21}},"113":{"start":{"line":237,"column":24},"end":{"line":237,"column":42}},"114":{"start":{"line":239,"column":20},"end":{"line":239,"column":26}},"115":{"start":{"line":248,"column":20},"end":{"line":264,"column":21}},"116":{"start":{"line":249,"column":24},"end":{"line":249,"column":135}},"117":{"start":{"line":250,"column":24},"end":{"line":255,"column":27}},"118":{"start":{"line":256,"column":24},"end":{"line":259,"column":25}},"119":{"start":{"line":257,"column":28},"end":{"line":257,"column":64}},"120":{"start":{"line":258,"column":28},"end":{"line":258,"column":34}},"121":{"start":{"line":260,"column":24},"end":{"line":260,"column":62}},"122":{"start":{"line":261,"column":24},"end":{"line":263,"column":25}},"123":{"start":{"line":262,"column":28},"end":{"line":262,"column":34}},"124":{"start":{"line":265,"column":20},"end":{"line":265,"column":64}},"125":{"start":{"line":266,"column":20},"end":{"line":268,"column":21}},"126":{"start":{"line":267,"column":24},"end":{"line":267,"column":42}},"127":{"start":{"line":269,"column":20},"end":{"line":269,"column":26}},"128":{"start":{"line":272,"column":20},"end":{"line":272,"column":139}},"129":{"start":{"line":273,"column":20},"end":{"line":273,"column":26}},"130":{"start":{"line":277,"column":12},"end":{"line":279,"column":13}},"131":{"start":{"line":278,"column":16},"end":{"line":278,"column":22}},"132":{"start":{"line":283,"column":8},"end":{"line":285,"column":9}},"133":{"start":{"line":284,"column":12},"end":{"line":284,"column":18}},"134":{"start":{"line":287,"column":8},"end":{"line":304,"column":9}},"135":{"start":{"line":288,"column":12},"end":{"line":288,"column":75}},"136":{"start":{"line":289,"column":12},"end":{"line":294,"column":15}},"137":{"start":{"line":295,"column":12},"end":{"line":298,"column":13}},"138":{"start":{"line":296,"column":16},"end":{"line":296,"column":52}},"139":{"start":{"line":297,"column":16},"end":{"line":297,"column":22}},"140":{"start":{"line":299,"column":12},"end":{"line":299,"column":50}},"141":{"start":{"line":300,"column":12},"end":{"line":302,"column":13}},"142":{"start":{"line":301,"column":16},"end":{"line":301,"column":22}},"143":{"start":{"line":309,"column":4},"end":{"line":318,"column":5}},"144":{"start":{"line":310,"column":8},"end":{"line":312,"column":9}},"145":{"start":{"line":311,"column":12},"end":{"line":311,"column":68}},"146":{"start":{"line":313,"column":8},"end":{"line":313,"column":81}},"147":{"start":{"line":314,"column":8},"end":{"line":314,"column":42}},"148":{"start":{"line":316,"column":8},"end":{"line":316,"column":96}},"149":{"start":{"line":317,"column":8},"end":{"line":317,"column":59}},"150":{"start":{"line":319,"column":4},"end":{"line":319,"column":20}}},"branchMap":{"1":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":8},"end":{"line":33,"column":8}},{"start":{"line":33,"column":8},"end":{"line":33,"column":8}}]},"2":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":8},"end":{"line":40,"column":8}},{"start":{"line":40,"column":8},"end":{"line":40,"column":8}}]},"3":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":16},"end":{"line":43,"column":16}},{"start":{"line":43,"column":16},"end":{"line":43,"column":16}}]},"4":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":16},"end":{"line":48,"column":16}},{"start":{"line":48,"column":16},"end":{"line":48,"column":16}}]},"5":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":8},"end":{"line":56,"column":8}},{"start":{"line":56,"column":8},"end":{"line":56,"column":8}}]},"6":{"line":56,"type":"binary-expr","locations":[{"start":{"line":56,"column":12},"end":{"line":56,"column":25}},{"start":{"line":56,"column":29},"end":{"line":56,"column":44}}]},"7":{"line":66,"type":"if","locations":[{"start":{"line":66,"column":12},"end":{"line":66,"column":12}},{"start":{"line":66,"column":12},"end":{"line":66,"column":12}}]},"8":{"line":72,"type":"if","locations":[{"start":{"line":72,"column":12},"end":{"line":72,"column":12}},{"start":{"line":72,"column":12},"end":{"line":72,"column":12}}]},"9":{"line":78,"type":"if","locations":[{"start":{"line":78,"column":12},"end":{"line":78,"column":12}},{"start":{"line":78,"column":12},"end":{"line":78,"column":12}}]},"10":{"line":80,"type":"if","locations":[{"start":{"line":80,"column":16},"end":{"line":80,"column":16}},{"start":{"line":80,"column":16},"end":{"line":80,"column":16}}]},"11":{"line":86,"type":"if","locations":[{"start":{"line":86,"column":12},"end":{"line":86,"column":12}},{"start":{"line":86,"column":12},"end":{"line":86,"column":12}}]},"12":{"line":95,"type":"binary-expr","locations":[{"start":{"line":95,"column":19},"end":{"line":95,"column":37}},{"start":{"line":95,"column":41},"end":{"line":95,"column":55}},{"start":{"line":95,"column":59},"end":{"line":95,"column":73}}]},"13":{"line":101,"type":"switch","locations":[{"start":{"line":103,"column":16},"end":{"line":209,"column":26}},{"start":{"line":211,"column":16},"end":{"line":239,"column":26}},{"start":{"line":241,"column":16},"end":{"line":269,"column":26}},{"start":{"line":271,"column":16},"end":{"line":273,"column":26}}]},"14":{"line":118,"type":"if","locations":[{"start":{"line":118,"column":20},"end":{"line":118,"column":20}},{"start":{"line":118,"column":20},"end":{"line":118,"column":20}}]},"15":{"line":123,"type":"if","locations":[{"start":{"line":123,"column":20},"end":{"line":123,"column":20}},{"start":{"line":123,"column":20},"end":{"line":123,"column":20}}]},"16":{"line":128,"type":"if","locations":[{"start":{"line":128,"column":20},"end":{"line":128,"column":20}},{"start":{"line":128,"column":20},"end":{"line":128,"column":20}}]},"17":{"line":135,"type":"if","locations":[{"start":{"line":135,"column":24},"end":{"line":135,"column":24}},{"start":{"line":135,"column":24},"end":{"line":135,"column":24}}]},"18":{"line":140,"type":"if","locations":[{"start":{"line":140,"column":28},"end":{"line":140,"column":28}},{"start":{"line":140,"column":28},"end":{"line":140,"column":28}}]},"19":{"line":150,"type":"binary-expr","locations":[{"start":{"line":150,"column":27},"end":{"line":150,"column":48}},{"start":{"line":150,"column":52},"end":{"line":150,"column":66}},{"start":{"line":150,"column":70},"end":{"line":150,"column":84}}]},"20":{"line":161,"type":"if","locations":[{"start":{"line":161,"column":24},"end":{"line":161,"column":24}},{"start":{"line":161,"column":24},"end":{"line":161,"column":24}}]},"21":{"line":166,"type":"if","locations":[{"start":{"line":166,"column":24},"end":{"line":166,"column":24}},{"start":{"line":166,"column":24},"end":{"line":166,"column":24}}]},"22":{"line":170,"type":"switch","locations":[{"start":{"line":172,"column":24},"end":{"line":174,"column":34}},{"start":{"line":175,"column":24},"end":{"line":188,"column":34}},{"start":{"line":189,"column":24},"end":{"line":202,"column":34}}]},"23":{"line":183,"type":"if","locations":[{"start":{"line":183,"column":28},"end":{"line":183,"column":28}},{"start":{"line":183,"column":28},"end":{"line":183,"column":28}}]},"24":{"line":197,"type":"if","locations":[{"start":{"line":197,"column":28},"end":{"line":197,"column":28}},{"start":{"line":197,"column":28},"end":{"line":197,"column":28}}]},"25":{"line":205,"type":"if","locations":[{"start":{"line":205,"column":20},"end":{"line":205,"column":20}},{"start":{"line":205,"column":20},"end":{"line":205,"column":20}}]},"26":{"line":221,"type":"if","locations":[{"start":{"line":221,"column":20},"end":{"line":221,"column":20}},{"start":{"line":221,"column":20},"end":{"line":221,"column":20}}]},"27":{"line":226,"type":"if","locations":[{"start":{"line":226,"column":20},"end":{"line":226,"column":20}},{"start":{"line":226,"column":20},"end":{"line":226,"column":20}}]},"28":{"line":236,"type":"if","locations":[{"start":{"line":236,"column":20},"end":{"line":236,"column":20}},{"start":{"line":236,"column":20},"end":{"line":236,"column":20}}]},"29":{"line":248,"type":"if","locations":[{"start":{"line":248,"column":20},"end":{"line":248,"column":20}},{"start":{"line":248,"column":20},"end":{"line":248,"column":20}}]},"30":{"line":256,"type":"if","locations":[{"start":{"line":256,"column":24},"end":{"line":256,"column":24}},{"start":{"line":256,"column":24},"end":{"line":256,"column":24}}]},"31":{"line":261,"type":"if","locations":[{"start":{"line":261,"column":24},"end":{"line":261,"column":24}},{"start":{"line":261,"column":24},"end":{"line":261,"column":24}}]},"32":{"line":266,"type":"if","locations":[{"start":{"line":266,"column":20},"end":{"line":266,"column":20}},{"start":{"line":266,"column":20},"end":{"line":266,"column":20}}]},"33":{"line":277,"type":"if","locations":[{"start":{"line":277,"column":12},"end":{"line":277,"column":12}},{"start":{"line":277,"column":12},"end":{"line":277,"column":12}}]},"34":{"line":277,"type":"binary-expr","locations":[{"start":{"line":277,"column":16},"end":{"line":277,"column":29}},{"start":{"line":277,"column":33},"end":{"line":277,"column":48}}]},"35":{"line":283,"type":"if","locations":[{"start":{"line":283,"column":8},"end":{"line":283,"column":8}},{"start":{"line":283,"column":8},"end":{"line":283,"column":8}}]},"36":{"line":283,"type":"binary-expr","locations":[{"start":{"line":283,"column":12},"end":{"line":283,"column":25}},{"start":{"line":283,"column":29},"end":{"line":283,"column":44}}]},"37":{"line":295,"type":"if","locations":[{"start":{"line":295,"column":12},"end":{"line":295,"column":12}},{"start":{"line":295,"column":12},"end":{"line":295,"column":12}}]},"38":{"line":300,"type":"if","locations":[{"start":{"line":300,"column":12},"end":{"line":300,"column":12}},{"start":{"line":300,"column":12},"end":{"line":300,"column":12}}]},"39":{"line":309,"type":"if","locations":[{"start":{"line":309,"column":4},"end":{"line":309,"column":4}},{"start":{"line":309,"column":4},"end":{"line":309,"column":4}}]},"40":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8}},{"start":{"line":310,"column":8},"end":{"line":310,"column":8}}]},"41":{"line":316,"type":"cond-expr","locations":[{"start":{"line":316,"column":71},"end":{"line":316,"column":82}},{"start":{"line":316,"column":83},"end":{"line":316,"column":95}}]}},"code":["/*","  Copyright (C) 2014-2016 Christopher D. Russell","","  This library is published under the MIT License and is part of the","  Encapsule Project System in Cloud (SiC) open service architecture.","  Please follow https://twitter.com/Encapsule for news and updates","  about jsgraph and other time saving libraries that do amazing things","  with in-memory data on Node.js and HTML.","*/","","var algorithmName = \"DFT\"; // used in error messages","var colors = require('./arc_core_digraph_algorithm_colors');","var visitorCallback = require('./arc_core_digraph_algorithm_visit');","var normalizeRequest = require('./arc_core_digraph_algorithm_request');","","","module.exports = function (request_) {","","    var nrequest = null; // normalized request","    var response = { error: null, result: null };","    var errors = [];","    var continueSearch = true;","    var inBreakScope = false;","","    while (!inBreakScope) {","        inBreakScope = true;","        var index, vertexId;","        var finishedEdges = {};","        var innerRequest = null;","        var hash = null;","","        var innerResponse = normalizeRequest(request_);","        if (innerResponse.error) {","            errors.unshift(innerResponse.error);","            break;","        }","        nrequest = innerResponse.result;","","        // initializeVertex visitor callback.","        if (nrequest.options.traverseContext.searchStatus === 'pending') {","            for (vertexId in nrequest.options.traverseContext.colorMap) {","                innerResponse = visitorCallback({ algorithm: algorithmName, visitor: nrequest.visitor, method: 'initializeVertex', request: { u: vertexId, g: nrequest.digraph }});","                if (innerResponse.error) {","                    errors.unshift(innerResponse.error);","                    break;","                }","                continueSearch = innerResponse.result;","                if (!continueSearch) {","                    break;","                }","            } // end for","        } // if searchStatus 'pending'","","        nrequest.options.traverseContext.searchStatus = 'active';","","        if (errors.length || !continueSearch) {","            break;","        }","","        // Outer depth-first search loop iterates over the start vertex set.","        for (index in nrequest.options.startVector) {","","            vertexId = nrequest.options.startVector[index];","            ","            // Ensure the starting vertex is actually in the graph.","            if (!nrequest.digraph.isVertex(vertexId)) {","                errors.unshift(\"DFT request failed. Vertex '\" + vertexId + \"' not found in specified directed graph container.\");","                break;","            }","","            // Ensure the starting vertex is undicovered (white in the color map).","            if (nrequest.options.traverseContext.colorMap[vertexId] !== colors.white) {","                errors.unshift(\"DFT request failed. Vertex '\" + vertexId + \"' color map not initialized to white.\");","                break;","            }","","            // startVertex visitor callback","            if (nrequest.options.signalStart) {","                innerResponse = visitorCallback({ algorithm: algorithmName, visitor: nrequest.visitor, method: 'startVertex', request: { u: vertexId, g: nrequest.digraph }});","                if (innerResponse.error) {","                    errors.unshift(innerResponse.error);","                    break;","                }","                continueSearch = innerResponse.result;","            }","            if (!continueSearch) {","                break;","            }","","            // searchStack is a FILO of FIFO's (or stack of queues if you prefer)","            // initialized with starting vertex set member under-evaluation's ID.","            var searchStack = [ [ vertexId ] ]; ","","            // Iterate until search stack is empty, a client visitor method returns false, or an error occurs.","            while (searchStack.length && continueSearch && !errors.length) {","","                // Peek at the identifier of the vertex at the front of the queue atop the search stack.","","                var currentVertexId = (searchStack[searchStack.length - 1])[0];","","                switch (nrequest.options.traverseContext.colorMap[currentVertexId]) {","","                case colors.white:","","                    // Remove the vertex from the undiscovered map.","                    delete nrequest.options.traverseContext.undiscoveredMap[currentVertexId];","","                    // Change the vertex's state to GRAY to record its discovery.","                    nrequest.options.traverseContext.colorMap[currentVertexId] = colors.gray;","","                    // discoverVertex visitor callback.","                    innerResponse = visitorCallback({","                        algorithm: algorithmName,","                        visitor: nrequest.visitor,","                        method: 'discoverVertex',","                        request: { u: currentVertexId, g: nrequest.digraph }","                    });","                    if (innerResponse.error) {","                        errors.unshift(innerResponse.error);","                        break;","                    }","                    continueSearch = innerResponse.result;","                    if (!continueSearch) {","                        break;","                    }","","                    // treeEdge visitor callback.","                    if (searchStack.length > 1) {","                        innerResponse = visitorCallback({","                            algorithm: algorithmName,","                            visitor: nrequest.visitor,","                            method: 'treeEdge',","                            request: { e: { u: searchStack[searchStack.length - 2][0], v: currentVertexId }, g: nrequest.digraph }","                        });","                        if (innerResponse.error) {","                            errors.unshift(innerResponse.error);","                            break;","                        } else {","                            continueSearch = innerResponse.result;","                            if (!continueSearch) {","                                break;","                            }","                        }","                    }","","                    // Examine adjacent vertices","                    var vertexOutEdges = nrequest.digraph.outEdges(currentVertexId);","                    var adjacentVertices = [];","","                    while (vertexOutEdges.length && !errors.length && continueSearch) {","","                        var adjacentVertexId = vertexOutEdges.shift().v;","","                        // examineEdge visitor callback.","                        innerResponse = visitorCallback({","                            algorithm: algorithmName,","                            visitor: nrequest.visitor,","                            method: 'examineEdge',","                            request: { e: { u: currentVertexId, v: adjacentVertexId }, g: nrequest.digraph }","                        });","                        if (innerResponse.error) {","                            errors.unshift(innerRepsonse.error);","                            break;","                        }","                        continueSearch = innerResponse.result;","                        if (!continueSearch) {","                            break;","                        }","","                        switch (nrequest.options.traverseContext.colorMap[adjacentVertexId]) {","","                        case colors.white:","                            adjacentVertices.push(adjacentVertexId);","                            break;","                        case colors.gray:","                            // backEdge visitor callback.","                            innerResponse = visitorCallback({","                                algorithm: algorithmName,","                                visitor: nrequest.visitor,","                                method: 'backEdge',","                                request: { e: { u: currentVertexId, v: adjacentVertexId }, g: nrequest.digraph }","                            });","                            if (innerResponse.error) {","                                errors.unshift(innerResponse.error);","                            } else {","                                continueSearch = innerResponse.result;","                            }","                            break;","                        case colors.black:","                            // forwardOrCrossEdge visitor callback.","                            innerResponse = visitorCallback({","                                algorithm: algorithmName,","                                visitor: nrequest.visitor,","                                method: 'forwardOrCrossEdge',","                                request: { e: { u: currentVertexId, v: adjacentVertexId }, g: nrequest.digraph }","                            });","                            if (innerResponse.error) {","                                errors.unshift(innerResponse.error);","                            } else {","                                continueSearch = innerResponse.result;","                            }","                            break;","                        }","                    }","                    if (adjacentVertices.length) {","                        searchStack.push(adjacentVertices);","                    }                                ","","                    break;","","                case colors.gray:","                    // change the vertex's state to black to indicate search completion.","                    nrequest.options.traverseContext.colorMap[currentVertexId] = colors.black;","                    // finishVertex visitor callback.","                    innerResponse = visitorCallback({","                        algorithm: algorithmName,","                        visitor: nrequest.visitor,","                        method: 'finishVertex',","                        request: { u: currentVertexId, g: nrequest.digraph }","                    });","                    if (innerResponse.error) {","                        errors.unshift(innerResponse.error);","                        break;","                    }","                    continueSearch = innerResponse.result;","                    if (!continueSearch) {","                        break;","                    }","                    var inEdgeSet = nrequest.digraph.inEdges(currentVertexId);","                    while (inEdgeSet.length) {","                        var inEdge = inEdgeSet.pop();","                        hash = inEdge.u + inEdge.v;","                        finishedEdges[hash] = inEdge;","                    }","                    searchStack[searchStack.length - 1].shift();","                    if (!(searchStack[searchStack.length - 1].length)) {","                        searchStack.pop();","                    }","                    break;","","                case colors.black:","","                    // The black sheep. The only way for a vertex to end up in this state","                    // is for it to be queued after another adjacent vertex that reaches","                    // it first in the depth-first search tree. By definition it's already","                    // been 'finished'. ","","                    if (searchStack.length > 1) {","                        innerRequest = { e: { u: (searchStack[searchStack.length - 2])[0], v: currentVertexId }, g: nrequest.digraph };","                        innerResponse = visitorCallback({","                            algorithm: algorithmName,","                            visitor: nrequest.visitor,","                            method: 'forwardOrCrossEdge',","                            request: innerRequest","                        });","                        if (innerResponse.error) {","                            errors.unshift(innerResponse.error);","                            break;","                        }","                        continueSearch = innerResponse.result;","                        if (!continueSearch) {","                            break;","                        }","                    }","                    searchStack[searchStack.length - 1].shift();","                    if (!searchStack[searchStack.length - 1].length) {","                        searchStack.pop();","                    }","                    break;","","                default:","                    errors.unshift(\"DFT failure: An invalid color value was found in the color map for vertex '\" + currentVertexId + \"'.\");","                    break;","                }","            } // while search stack is not empty","","            if (errors.length || !continueSearch) {","                break;","            }","            ","        } // end while outer depth-first search loop","","        if (errors.length || !continueSearch) {","            break;","        }","","        for (hash in finishedEdges) {","            innerRequest = { e: finishedEdges[hash], g: nrequest.digraph };","            innerResponse = visitorCallback({","                algorithm: algorithmName,","                visitor: nrequest.visitor,","                method: 'finishEdge',","                request: innerRequest","            });","            if (innerResponse.error) {","                errors.unshift(innerResponse.error);","                break;","            }","            continueSearch = innerResponse.result;","            if (!continueSearch) {","                break;","            }","","        } // end for","","","    } // while !inBreakScope","","    if (errors.length) {","        if (nrequest) {","            nrequest.options.traverseContext.searchStatus = 'error';","        }","        errors.unshift(\"jsgraph.directed.depthFirstTraverse algorithm failure:\");","        response.error = errors.join(' ');","    } else {","        nrequest.options.traverseContext.searchStatus = continueSearch?'completed':'terminated';","        response.result = nrequest.options.traverseContext;","    }","    return response;","    ","","};","",""],"l":{"11":1,"12":1,"13":1,"14":1,"17":1,"19":0,"20":0,"21":0,"22":0,"23":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"32":0,"33":0,"34":0,"35":0,"37":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"47":0,"48":0,"49":0,"54":0,"56":0,"57":0,"61":0,"63":0,"66":0,"67":0,"68":0,"72":0,"73":0,"74":0,"78":0,"79":0,"80":0,"81":0,"82":0,"84":0,"86":0,"87":0,"92":0,"95":0,"99":0,"101":0,"106":0,"109":0,"112":0,"118":0,"119":0,"120":0,"122":0,"123":0,"124":0,"128":0,"129":0,"135":0,"136":0,"137":0,"139":0,"140":0,"141":0,"147":0,"148":0,"150":0,"152":0,"155":0,"161":0,"162":0,"163":0,"165":0,"166":0,"167":0,"170":0,"173":0,"174":0,"177":0,"183":0,"184":0,"186":0,"188":0,"191":0,"197":0,"198":0,"200":0,"202":0,"205":0,"206":0,"209":0,"213":0,"215":0,"221":0,"222":0,"223":0,"225":0,"226":0,"227":0,"229":0,"230":0,"231":0,"232":0,"233":0,"235":0,"236":0,"237":0,"239":0,"248":0,"249":0,"250":0,"256":0,"257":0,"258":0,"260":0,"261":0,"262":0,"265":0,"266":0,"267":0,"269":0,"272":0,"273":0,"277":0,"278":0,"283":0,"284":0,"287":0,"288":0,"289":0,"295":0,"296":0,"297":0,"299":0,"300":0,"301":0,"309":0,"310":0,"311":0,"313":0,"314":0,"316":0,"317":0,"319":0}}}